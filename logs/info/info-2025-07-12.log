2025-07-12 00:00:00.005 [MessageBroker-20] INFO  c.i.i.u.s.DataConsistencyService - 开始执行数据一致性检查
2025-07-12 00:00:00.012 [MessageBroker-16] INFO  c.i.i.u.t.TemporaryFileCleanupTask - 开始执行过期临时文件清理任务
2025-07-12 00:00:00.034 [MessageBroker-16] INFO  c.i.i.u.t.TemporaryFileCleanupTask - 没有发现过期的临时文件
2025-07-12 00:00:00.107 [MessageBroker-20] INFO  c.i.i.u.s.DataConsistencyService - 数据一致性检查完成，发现 0 个不一致项
2025-07-12 00:00:40.767 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:00:40.770 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:00:40.770 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:00:40.771 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:00:40.771 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:00:40.771 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:00:40.772 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:00:40.794 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:00:40.797 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:00:40.797 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:00:40.797 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:00:40.798 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:00:40.798 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:00:40.798 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:01:36.059 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:01:36.062 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:01:36.062 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:01:36.062 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:01:36.062 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:01:36.062 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:01:36.062 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:01:36.075 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:01:36.076 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:01:36.077 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:01:36.077 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:01:36.077 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:01:36.077 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:01:36.077 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:01:44.405 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:01:44.407 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:01:44.407 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:01:44.407 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:01:44.408 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:01:44.408 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:01:44.408 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:01:50.381 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:01:50.384 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:01:50.384 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:01:50.384 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:01:50.385 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:01:50.385 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:01:50.385 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:01:50.421 [http-nio-8080-exec-1] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=004, currentUserId=4, page=0, size=20
2025-07-12 00:01:50.426 [http-nio-8080-exec-1] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=004, searchType=null, userId=4)
2025-07-12 00:01:50.427 [http-nio-8080-exec-1] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=004, searchType=null, userId=4)
2025-07-12 00:01:50.435 [http-nio-8080-exec-1] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 未找到用户: userIdStr=004
2025-07-12 00:01:50.435 [http-nio-8080-exec-1] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据昵称搜索用户: searchRequest=SearchContactRequest(keyword=004, searchType=null, userId=4)
2025-07-12 00:01:50.440 [http-nio-8080-exec-1] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 昵称搜索完成: nickname=004, 找到0个结果
2025-07-12 00:01:57.328 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:01:57.331 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:01:57.331 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:01:57.332 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:01:57.332 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:01:57.332 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:01:57.332 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:01:57.354 [http-nio-8080-exec-5] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=test_004, currentUserId=4, page=0, size=20
2025-07-12 00:01:57.360 [http-nio-8080-exec-5] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=test_004, searchType=null, userId=4)
2025-07-12 00:01:57.360 [http-nio-8080-exec-5] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=test_004, searchType=null, userId=4)
2025-07-12 00:02:03.288 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:02:03.291 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:02:03.291 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:02:03.292 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:02:03.293 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:02:03.293 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:02:03.293 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:02:03.326 [http-nio-8080-exec-10] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=2, currentUserId=4, page=0, size=20
2025-07-12 00:02:03.330 [http-nio-8080-exec-10] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=2, searchType=null, userId=4)
2025-07-12 00:02:03.331 [http-nio-8080-exec-10] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=2, searchType=null, userId=4)
2025-07-12 00:02:03.338 [http-nio-8080-exec-10] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 未找到用户: userIdStr=2
2025-07-12 00:02:03.338 [http-nio-8080-exec-10] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据昵称搜索用户: searchRequest=SearchContactRequest(keyword=2, searchType=null, userId=4)
2025-07-12 00:02:03.363 [http-nio-8080-exec-10] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 昵称搜索完成: nickname=2, 找到1个结果
2025-07-12 00:02:05.019 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:02:05.022 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:02:05.022 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:02:05.023 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:02:05.026 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:02:05.027 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:02:05.030 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:02:05.059 [http-nio-8080-exec-8] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=3, currentUserId=4, page=0, size=20
2025-07-12 00:02:05.064 [http-nio-8080-exec-8] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=3, searchType=null, userId=4)
2025-07-12 00:02:05.064 [http-nio-8080-exec-8] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=3, searchType=null, userId=4)
2025-07-12 00:02:05.069 [http-nio-8080-exec-8] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 未找到用户: userIdStr=3
2025-07-12 00:02:05.069 [http-nio-8080-exec-8] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据昵称搜索用户: searchRequest=SearchContactRequest(keyword=3, searchType=null, userId=4)
2025-07-12 00:02:05.076 [http-nio-8080-exec-8] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 昵称搜索完成: nickname=3, 找到0个结果
2025-07-12 00:02:05.827 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:02:05.829 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:02:05.830 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:02:05.830 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:02:05.830 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:02:05.831 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:02:05.831 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:02:08.438 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:02:08.441 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:02:08.441 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:02:08.442 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:02:08.442 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:02:08.442 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:02:08.442 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:02:10.070 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:02:10.072 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:02:10.072 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:02:10.073 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:02:10.073 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:02:10.073 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:02:10.073 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:02:19.629 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:02:19.631 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:02:19.631 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:02:19.631 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:02:19.632 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:02:19.632 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:02:19.632 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:02:30.950 [http-nio-8080-exec-2] INFO  c.i.i.a.service.impl.AuthServiceImpl - 开始处理密码登录请求: 3280164803@qq.com
2025-07-12 00:02:31.711 [http-nio-8080-exec-2] INFO  c.i.i.a.service.AccountLockService - 用户 3280164803@qq.com 无登录失败记录需要清除
2025-07-12 00:02:31.713 [http-nio-8080-exec-2] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户密码验证成功: userId=2, email=3280164803@qq.com
2025-07-12 00:02:31.713 [http-nio-8080-exec-2] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 记录登录设备: userId=2, deviceType=Web, ipAddress=null
2025-07-12 00:02:31.723 [http-nio-8080-exec-2] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 更新现有设备记录: deviceId=2
2025-07-12 00:02:31.757 [http-nio-8080-exec-2] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户选择记住登录状态，设置长期token: userId=2
2025-07-12 00:02:31.757 [http-nio-8080-exec-2] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户登录成功: userId=2, email=3280164803@qq.com, rememberMe=true
2025-07-12 00:02:33.422 [http-nio-8080-exec-8] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 00:02:33.425 [http-nio-8080-exec-8] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=2
2025-07-12 00:02:33.457 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:02:33.460 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:02:33.461 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:02:33.461 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:02:33.991 [http-nio-8080-exec-3] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 2, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:02:33.992 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 2
2025-07-12 00:02:33.992 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 2, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:02:33.997 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 00:02:34.002 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=24, 名称=202302091675904140211711.jpg, 类型=image, 大小=7125
2025-07-12 00:02:34.003 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 00:02:34.003 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=7125, typeStats={image=1}
2025-07-12 00:02:34.008 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 00:02:34.017 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 2 的所有文件记录数（包括已删除）: 1
2025-07-12 00:02:34.018 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=24, 原始名称=202302091675904140211711.jpg, 是否删除=false, 文件类型=image
2025-07-12 00:02:34.018 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 00:02:34.023 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 00:02:34.023 [http-nio-8080-exec-3] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 00:02:34.024 [http-nio-8080-exec-3] INFO  c.i.i.u.c.FileUploadController - 用户 2 找到 1 个文件
2025-07-12 00:02:35.154 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:02:35.157 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:02:35.157 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:02:35.157 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:02:38.040 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:02:38.042 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:02:38.043 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:02:38.043 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:02:40.798 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:02:40.803 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:02:40.803 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:02:40.803 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:02:53.481 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 更新用户资料，用户ID: 2
2025-07-12 00:02:53.488 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 用户资料更新成功，用户ID: 2
2025-07-12 00:02:53.525 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:02:53.528 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:02:53.528 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:02:53.529 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:02:53.561 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 设置个人ID，用户ID: 2, 个人ID: ceshi
2025-07-12 00:02:53.572 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 个人ID设置成功，用户ID: 2, 个人ID: ceshi
2025-07-12 00:02:53.616 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:02:53.619 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:02:53.619 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:02:53.619 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:03:03.819 [http-nio-8080-exec-5] INFO  c.i.i.a.service.impl.AuthServiceImpl - 开始处理密码登录请求: jiapei1219@gmail.com
2025-07-12 00:03:03.946 [http-nio-8080-exec-5] INFO  c.i.i.a.service.AccountLockService - 用户 jiapei1219@gmail.com 无登录失败记录需要清除
2025-07-12 00:03:03.946 [http-nio-8080-exec-5] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户密码验证成功: userId=4, email=jiapei1219@gmail.com
2025-07-12 00:03:03.946 [http-nio-8080-exec-5] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 记录登录设备: userId=4, deviceType=Web, ipAddress=null
2025-07-12 00:03:03.949 [http-nio-8080-exec-5] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 更新现有设备记录: deviceId=6
2025-07-12 00:03:03.950 [http-nio-8080-exec-5] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户选择记住登录状态，设置长期token: userId=4
2025-07-12 00:03:03.951 [http-nio-8080-exec-5] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户登录成功: userId=4, email=jiapei1219@gmail.com, rememberMe=true
2025-07-12 00:03:05.560 [http-nio-8080-exec-10] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 00:03:05.561 [http-nio-8080-exec-10] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=4
2025-07-12 00:03:05.590 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:03:05.594 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:03:05.595 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:03:05.595 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:03:05.596 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:03:05.596 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:03:05.596 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:03:06.128 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 4
2025-07-12 00:03:06.129 [http-nio-8080-exec-8] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:03:06.129 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:03:06.135 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 00:03:06.136 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=31, 名称=202302091675904140726704.jpg, 类型=image, 大小=8507
2025-07-12 00:03:06.136 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 00:03:06.136 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=8507, typeStats={image=1}
2025-07-12 00:03:06.140 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 00:03:06.153 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 4 的所有文件记录数（包括已删除）: 1
2025-07-12 00:03:06.154 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=31, 原始名称=202302091675904140726704.jpg, 是否删除=false, 文件类型=image
2025-07-12 00:03:06.154 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 00:03:06.158 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 00:03:06.160 [http-nio-8080-exec-8] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 00:03:06.160 [http-nio-8080-exec-8] INFO  c.i.i.u.c.FileUploadController - 用户 4 找到 1 个文件
2025-07-12 00:03:10.517 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:03:10.521 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:03:10.521 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:03:10.522 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:03:10.522 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:03:10.522 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:03:10.523 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:03:10.554 [http-nio-8080-exec-3] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=ceshi, currentUserId=4, page=0, size=20
2025-07-12 00:03:10.559 [http-nio-8080-exec-3] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 00:03:10.559 [http-nio-8080-exec-3] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 00:03:15.465 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:03:15.467 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:03:15.468 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:03:15.468 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:03:15.468 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:03:15.468 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:03:15.469 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:03:21.969 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:03:21.970 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:03:21.971 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:03:21.971 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:03:21.971 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:03:21.971 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:03:21.971 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:03:35.763 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:03:35.768 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:03:35.768 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:03:35.770 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:03:35.771 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:03:35.771 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:03:35.771 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:03:39.672 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:03:39.673 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:03:39.675 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:03:39.675 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:03:39.676 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:03:39.676 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:03:39.676 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:03:41.348 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:03:41.350 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:03:41.350 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:03:41.350 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:03:41.350 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:03:41.350 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:03:41.350 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:03:45.497 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:03:45.498 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:03:45.498 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:03:45.498 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:03:45.499 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:03:45.499 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:03:45.499 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:05:49.881 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-07-12 00:05:49.888 [Thread-5] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2025-07-12 00:05:49.888 [Thread-5] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@228e8964]]
2025-07-12 00:05:49.889 [Thread-5] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2025-07-12 00:05:49.890 [Thread-5] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-12 00:05:50.179 [Thread-5] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 00:05:50.183 [Thread-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-12 00:05:50.190 [Thread-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-12 00:05:50.325 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 32384 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 00:05:50.325 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 00:05:50.714 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:05:50.714 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-12 00:05:50.760 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44 ms. Found 9 JPA repository interfaces.
2025-07-12 00:05:50.881 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:05:50.883 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-12 00:05:50.893 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.LoginDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:05:50.893 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:05:50.894 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:05:50.894 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:05:50.894 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:05:50.894 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:05:50.895 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.FileUploadRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:05:50.895 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:05:50.896 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:05:50.896 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-07-12 00:05:51.046 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-12 00:05:51.047 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.9] using APR version [1.7.6].
2025-07-12 00:05:51.050 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.5.0 8 Apr 2025]
2025-07-12 00:05:51.051 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-12 00:05:51.051 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-12 00:05:51.051 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-12 00:05:51.076 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-12 00:05:51.077 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 750 ms
2025-07-12 00:05:51.154 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-07-12 00:05:51.175 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection com.mysql.cj.jdbc.ConnectionImpl@36238ad
2025-07-12 00:05:51.175 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-07-12 00:05:51.228 [restartedMain] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://localhost:3307/im_db (MySQL 9.3)
2025-07-12 00:05:51.271 [restartedMain] INFO  o.f.core.internal.command.DbValidate - Successfully validated 12 migrations (execution time 00:00.023s)
2025-07-12 00:05:51.285 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Current version of schema `im_db`: 20250112.005
2025-07-12 00:05:51.286 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Schema `im_db` is up to date. No migration necessary.
2025-07-12 00:05:51.320 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-12 00:05:51.322 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-12 00:05:51.332 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-12 00:05:51.436 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-12 00:05:51.457 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 00:05:51.757 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 初始化MinIO客户端，端点: http://localhost:9000, 访问密钥: minioadmin
2025-07-12 00:05:51.759 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO客户端初始化成功
2025-07-12 00:05:51.759 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 开始检查并创建MinIO存储桶...
2025-07-12 00:05:51.817 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO存储桶初始化完成 - 公开存储桶: 6个, 私有存储桶: 6个
2025-07-12 00:05:51.872 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 初始化MinIO服务，开始创建存储桶...
2025-07-12 00:05:51.898 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 所有存储桶初始化成功
2025-07-12 00:05:51.898 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - MinIO服务初始化完成
2025-07-12 00:05:51.919 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 开始初始化公共桶生命周期规则，默认过期天数: 7
2025-07-12 00:05:51.919 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-files 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:05:51.930 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-images 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:05:51.936 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-videos 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:05:51.947 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-documents 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:05:51.955 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 公共桶生命周期规则初始化完成，成功设置: 0 个桶
2025-07-12 00:05:52.022 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 数据一致性检查线程池已初始化: coreSize=2, maxSize=5, queueCapacity=100
2025-07-12 00:05:52.028 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 通用异步任务线程池已初始化: coreSize=5, maxSize=10, queueCapacity=200
2025-07-12 00:05:52.103 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-07-12 00:05:52.143 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-07-12 00:05:52.265 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-07-12 00:05:52.509 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-07-12 00:05:52.523 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-12 00:05:52.526 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-12 00:05:52.527 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-07-12 00:05:52.527 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@12269750]]
2025-07-12 00:05:52.527 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-07-12 00:05:52.536 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Started ImCommunicationSystemApplication in 2.239 seconds (process running for 1444.438)
2025-07-12 00:05:52.537 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 开始配置存储桶访问策略...
2025-07-12 00:05:52.554 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-files
2025-07-12 00:05:52.565 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-images
2025-07-12 00:05:52.579 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-videos
2025-07-12 00:05:52.609 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-audios
2025-07-12 00:05:52.628 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-documents
2025-07-12 00:05:52.643 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-others
2025-07-12 00:05:52.669 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 存储桶访问策略配置完成
2025-07-12 00:05:52.671 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-07-12 00:06:01.122 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-12 00:06:01.122 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-12 00:06:01.126 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-07-12 00:06:52.529 [MessageBroker-6] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 11, active threads = 1, queued tasks = 8, completed tasks = 2]
2025-07-12 00:09:39.165 [SpringApplicationShutdownHook] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2025-07-12 00:09:39.165 [SpringApplicationShutdownHook] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@12269750]]
2025-07-12 00:09:39.165 [SpringApplicationShutdownHook] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2025-07-12 00:09:39.460 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 00:09:39.461 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-07-12 00:09:39.461 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-07-12 00:09:59.559 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-07-12 00:09:59.615 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 36628 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 00:09:59.616 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 00:09:59.667 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-12 00:09:59.667 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-12 00:10:00.578 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:10:00.579 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-12 00:10:00.756 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 167 ms. Found 9 JPA repository interfaces.
2025-07-12 00:10:01.063 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:10:01.064 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-12 00:10:01.086 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.LoginDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:10:01.086 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:10:01.087 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:10:01.087 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:10:01.088 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:10:01.088 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:10:01.088 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.FileUploadRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:10:01.088 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:10:01.088 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:10:01.088 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.
2025-07-12 00:10:01.842 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-12 00:10:01.845 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.9] using APR version [1.7.6].
2025-07-12 00:10:01.853 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.5.0 8 Apr 2025]
2025-07-12 00:10:01.863 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-12 00:10:01.865 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-12 00:10:01.866 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-12 00:10:01.923 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-12 00:10:01.924 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2255 ms
2025-07-12 00:10:02.153 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-12 00:10:02.271 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1984da4b
2025-07-12 00:10:02.273 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-12 00:10:02.325 [restartedMain] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://localhost:3307/im_db (MySQL 9.3)
2025-07-12 00:10:02.399 [restartedMain] INFO  o.f.core.internal.command.DbValidate - Successfully validated 12 migrations (execution time 00:00.045s)
2025-07-12 00:10:02.423 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Current version of schema `im_db`: 20250112.005
2025-07-12 00:10:02.428 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Schema `im_db` is up to date. No migration necessary.
2025-07-12 00:10:02.514 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-12 00:10:02.566 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-07-12 00:10:02.600 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-12 00:10:02.831 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-12 00:10:03.647 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-12 00:10:03.723 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 00:10:04.376 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-12 00:10:04.780 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 初始化MinIO客户端，端点: http://localhost:9000, 访问密钥: minioadmin
2025-07-12 00:10:05.082 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO客户端初始化成功
2025-07-12 00:10:05.083 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 开始检查并创建MinIO存储桶...
2025-07-12 00:10:05.299 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO存储桶初始化完成 - 公开存储桶: 6个, 私有存储桶: 6个
2025-07-12 00:10:05.594 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 初始化MinIO服务，开始创建存储桶...
2025-07-12 00:10:05.640 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 所有存储桶初始化成功
2025-07-12 00:10:05.640 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - MinIO服务初始化完成
2025-07-12 00:10:05.670 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 开始初始化公共桶生命周期规则，默认过期天数: 7
2025-07-12 00:10:05.670 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-files 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:10:05.702 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-images 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:10:05.712 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-videos 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:10:05.720 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-documents 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:10:05.729 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 公共桶生命周期规则初始化完成，成功设置: 0 个桶
2025-07-12 00:10:05.826 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 数据一致性检查线程池已初始化: coreSize=2, maxSize=5, queueCapacity=100
2025-07-12 00:10:05.833 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 通用异步任务线程池已初始化: coreSize=5, maxSize=10, queueCapacity=200
2025-07-12 00:10:06.102 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-07-12 00:10:06.228 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-07-12 00:10:06.425 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-07-12 00:10:06.901 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-07-12 00:10:06.946 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-12 00:10:06.964 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-12 00:10:06.965 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-07-12 00:10:06.965 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@38a08b4e]]
2025-07-12 00:10:06.966 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-07-12 00:10:06.980 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Started ImCommunicationSystemApplication in 7.915 seconds (process running for 8.453)
2025-07-12 00:10:07.027 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 开始配置存储桶访问策略...
2025-07-12 00:10:07.044 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-files
2025-07-12 00:10:07.059 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-images
2025-07-12 00:10:07.071 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-videos
2025-07-12 00:10:07.086 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-audios
2025-07-12 00:10:07.100 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-documents
2025-07-12 00:10:07.113 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-others
2025-07-12 00:10:07.135 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 存储桶访问策略配置完成
2025-07-12 00:11:01.173 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-12 00:11:01.174 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-12 00:11:01.176 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-07-12 00:11:06.935 [MessageBroker-2] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 11, active threads = 1, queued tasks = 8, completed tasks = 2]
2025-07-12 00:11:19.182 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:11:19.193 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:11:19.193 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:11:19.193 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:11:19.193 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:11:19.194 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:11:19.194 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:11:35.753 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:11:35.755 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:11:35.756 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:11:35.756 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:11:35.756 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:11:35.756 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:11:35.756 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:12:05.749 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:12:05.752 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:12:05.752 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:12:05.753 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:12:05.753 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:12:05.753 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:12:05.753 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:12:35.767 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:12:35.771 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:12:35.771 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:12:35.772 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:12:35.772 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:12:35.772 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:12:35.772 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:13:05.747 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:13:05.749 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:13:05.750 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:13:05.750 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:13:05.750 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:13:05.750 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:13:05.750 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:13:24.364 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:13:24.368 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:13:24.369 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:13:24.369 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:13:24.369 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:13:24.369 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:13:24.369 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:13:26.318 [http-nio-8080-exec-1] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 00:13:26.319 [http-nio-8080-exec-1] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=4
2025-07-12 00:13:26.362 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:13:26.364 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:13:26.364 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:13:26.364 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:13:26.364 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:13:26.364 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:13:26.365 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:13:26.888 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 4
2025-07-12 00:13:26.896 [http-nio-8080-exec-5] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:13:26.896 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:13:26.899 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 00:13:26.900 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=31, 名称=202302091675904140726704.jpg, 类型=image, 大小=8507
2025-07-12 00:13:26.901 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 00:13:26.901 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=8507, typeStats={image=1}
2025-07-12 00:13:26.910 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 00:13:26.918 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 4 的所有文件记录数（包括已删除）: 1
2025-07-12 00:13:26.919 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=31, 原始名称=202302091675904140726704.jpg, 是否删除=false, 文件类型=image
2025-07-12 00:13:26.919 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 00:13:26.926 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 00:13:26.926 [http-nio-8080-exec-5] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 00:13:26.927 [http-nio-8080-exec-5] INFO  c.i.i.u.c.FileUploadController - 用户 4 找到 1 个文件
2025-07-12 00:13:30.077 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:13:30.081 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:13:30.081 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:13:30.081 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:13:30.082 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:13:30.082 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:13:30.083 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:13:30.162 [http-nio-8080-exec-8] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=ceshi, currentUserId=4, page=0, size=20
2025-07-12 00:13:30.167 [http-nio-8080-exec-8] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 00:13:30.170 [http-nio-8080-exec-8] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 00:13:43.998 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:13:44.001 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:13:44.001 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:13:44.002 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:13:44.002 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:13:44.002 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:13:44.002 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:13:46.654 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:13:46.657 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:13:46.657 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:13:46.659 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:13:46.659 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:13:46.659 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:13:46.659 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:13:56.752 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:13:56.755 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:13:56.755 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:13:56.755 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:13:56.756 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:13:56.756 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:13:56.756 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:14:10.705 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:14:10.711 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:14:10.712 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:14:10.712 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:14:10.713 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:14:10.713 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:14:10.713 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:14:29.434 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:14:29.437 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:14:29.437 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:14:29.437 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:14:29.437 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:14:29.437 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:14:29.437 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:14:29.454 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:14:29.458 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:14:29.458 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:14:29.458 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:14:29.458 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:14:29.459 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:14:29.459 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:14:42.145 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:14:42.147 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:14:42.148 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:14:42.148 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:14:42.148 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:14:42.148 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:14:42.149 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:14:47.087 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:14:47.091 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:14:47.092 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:14:47.092 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:14:47.092 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:14:47.092 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:14:47.093 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:14:56.747 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:14:56.750 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:14:56.750 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:14:56.750 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:14:56.750 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:14:56.750 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:14:56.750 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:15:26.749 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:15:26.751 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:15:26.752 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:15:26.752 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:15:26.752 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:15:26.752 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:15:26.752 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:15:56.788 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:15:56.792 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:15:56.793 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:15:56.793 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:15:56.793 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:15:56.793 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:15:56.793 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:16:24.155 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 6 class path changes (0 additions, 0 deletions, 6 modifications)
2025-07-12 00:16:24.163 [Thread-5] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2025-07-12 00:16:24.163 [Thread-5] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@38a08b4e]]
2025-07-12 00:16:24.163 [Thread-5] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2025-07-12 00:16:24.166 [Thread-5] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-12 00:16:24.480 [Thread-5] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 00:16:24.484 [Thread-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-12 00:16:24.494 [Thread-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-12 00:16:24.734 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 36628 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 00:16:24.736 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 00:16:25.180 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:16:25.182 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-12 00:16:25.229 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 46 ms. Found 9 JPA repository interfaces.
2025-07-12 00:16:25.340 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:16:25.341 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-12 00:16:25.354 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.LoginDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:16:25.355 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:16:25.355 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:16:25.355 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:16:25.355 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:16:25.356 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:16:25.356 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.FileUploadRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:16:25.356 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:16:25.357 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:16:25.357 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2025-07-12 00:16:25.530 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-12 00:16:25.531 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.9] using APR version [1.7.6].
2025-07-12 00:16:25.532 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.5.0 8 Apr 2025]
2025-07-12 00:16:25.533 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-12 00:16:25.534 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-12 00:16:25.534 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-12 00:16:25.567 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-12 00:16:25.568 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 830 ms
2025-07-12 00:16:25.689 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-07-12 00:16:25.717 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection com.mysql.cj.jdbc.ConnectionImpl@29866f06
2025-07-12 00:16:25.718 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-07-12 00:16:25.774 [restartedMain] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://localhost:3307/im_db (MySQL 9.3)
2025-07-12 00:16:25.833 [restartedMain] INFO  o.f.core.internal.command.DbValidate - Successfully validated 12 migrations (execution time 00:00.033s)
2025-07-12 00:16:25.874 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Current version of schema `im_db`: 20250112.005
2025-07-12 00:16:25.877 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Schema `im_db` is up to date. No migration necessary.
2025-07-12 00:16:25.959 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-12 00:16:25.962 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-12 00:16:25.983 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-12 00:16:26.167 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-12 00:16:26.194 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 00:16:26.742 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 初始化MinIO客户端，端点: http://localhost:9000, 访问密钥: minioadmin
2025-07-12 00:16:26.744 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO客户端初始化成功
2025-07-12 00:16:26.744 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 开始检查并创建MinIO存储桶...
2025-07-12 00:16:26.845 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO存储桶初始化完成 - 公开存储桶: 6个, 私有存储桶: 6个
2025-07-12 00:16:26.942 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 初始化MinIO服务，开始创建存储桶...
2025-07-12 00:16:26.981 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 所有存储桶初始化成功
2025-07-12 00:16:26.981 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - MinIO服务初始化完成
2025-07-12 00:16:27.010 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 开始初始化公共桶生命周期规则，默认过期天数: 7
2025-07-12 00:16:27.011 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-files 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:16:27.029 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-images 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:16:27.040 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-videos 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:16:27.052 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-documents 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:16:27.064 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 公共桶生命周期规则初始化完成，成功设置: 0 个桶
2025-07-12 00:16:27.184 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 数据一致性检查线程池已初始化: coreSize=2, maxSize=5, queueCapacity=100
2025-07-12 00:16:27.193 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 通用异步任务线程池已初始化: coreSize=5, maxSize=10, queueCapacity=200
2025-07-12 00:16:27.294 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-07-12 00:16:27.363 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-07-12 00:16:27.536 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-07-12 00:16:28.087 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-07-12 00:16:28.115 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-12 00:16:28.120 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-12 00:16:28.120 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-07-12 00:16:28.120 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@1c816ed0]]
2025-07-12 00:16:28.121 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-07-12 00:16:28.135 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Started ImCommunicationSystemApplication in 3.463 seconds (process running for 389.608)
2025-07-12 00:16:28.138 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 开始配置存储桶访问策略...
2025-07-12 00:16:28.167 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-files
2025-07-12 00:16:28.188 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-images
2025-07-12 00:16:28.206 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-videos
2025-07-12 00:16:28.224 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-audios
2025-07-12 00:16:28.243 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-documents
2025-07-12 00:16:28.261 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-others
2025-07-12 00:16:28.267 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-12 00:16:28.267 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-12 00:16:28.271 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-07-12 00:16:28.316 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 存储桶访问策略配置完成
2025-07-12 00:16:28.318 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-07-12 00:16:28.349 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:16:28.354 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:16:28.355 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:16:28.355 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:16:28.355 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:16:28.355 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:16:28.355 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:16:37.949 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-07-12 00:16:37.954 [Thread-7] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2025-07-12 00:16:37.955 [Thread-7] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@1c816ed0]]
2025-07-12 00:16:37.955 [Thread-7] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2025-07-12 00:16:37.956 [Thread-7] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-12 00:16:38.592 [Thread-7] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 00:16:38.592 [Thread-7] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-07-12 00:16:38.594 [Thread-7] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-07-12 00:16:38.716 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 36628 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 00:16:38.717 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 00:16:39.013 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:16:39.013 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-12 00:16:39.070 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 56 ms. Found 9 JPA repository interfaces.
2025-07-12 00:16:39.182 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:16:39.183 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-12 00:16:39.195 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.LoginDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:16:39.195 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:16:39.195 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:16:39.195 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:16:39.196 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:16:39.196 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:16:39.196 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.FileUploadRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:16:39.196 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:16:39.197 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:16:39.197 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-07-12 00:16:39.404 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-12 00:16:39.405 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.9] using APR version [1.7.6].
2025-07-12 00:16:39.406 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.5.0 8 Apr 2025]
2025-07-12 00:16:39.406 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-12 00:16:39.407 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-12 00:16:39.407 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-12 00:16:39.439 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-12 00:16:39.439 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 721 ms
2025-07-12 00:16:39.563 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
2025-07-12 00:16:39.577 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6ed6a8ec
2025-07-12 00:16:39.578 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
2025-07-12 00:16:39.600 [restartedMain] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://localhost:3307/im_db (MySQL 9.3)
2025-07-12 00:16:39.638 [restartedMain] INFO  o.f.core.internal.command.DbValidate - Successfully validated 12 migrations (execution time 00:00.021s)
2025-07-12 00:16:39.656 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Current version of schema `im_db`: 20250112.005
2025-07-12 00:16:39.658 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Schema `im_db` is up to date. No migration necessary.
2025-07-12 00:16:39.711 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-12 00:16:39.714 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-12 00:16:39.722 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-12 00:16:39.853 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-12 00:16:39.874 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 00:16:40.266 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 初始化MinIO客户端，端点: http://localhost:9000, 访问密钥: minioadmin
2025-07-12 00:16:40.267 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO客户端初始化成功
2025-07-12 00:16:40.267 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 开始检查并创建MinIO存储桶...
2025-07-12 00:16:40.358 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO存储桶初始化完成 - 公开存储桶: 6个, 私有存储桶: 6个
2025-07-12 00:16:40.413 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 初始化MinIO服务，开始创建存储桶...
2025-07-12 00:16:40.448 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 所有存储桶初始化成功
2025-07-12 00:16:40.448 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - MinIO服务初始化完成
2025-07-12 00:16:40.479 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 开始初始化公共桶生命周期规则，默认过期天数: 7
2025-07-12 00:16:40.479 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-files 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:16:40.488 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-images 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:16:40.496 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-videos 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:16:40.504 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-documents 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:16:40.658 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 公共桶生命周期规则初始化完成，成功设置: 0 个桶
2025-07-12 00:16:40.802 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 数据一致性检查线程池已初始化: coreSize=2, maxSize=5, queueCapacity=100
2025-07-12 00:16:40.817 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 通用异步任务线程池已初始化: coreSize=5, maxSize=10, queueCapacity=200
2025-07-12 00:16:40.983 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-07-12 00:16:41.127 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-07-12 00:16:41.324 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-07-12 00:16:41.717 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-07-12 00:16:41.735 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-12 00:16:41.739 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-12 00:16:41.739 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-07-12 00:16:41.740 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@3b11c7e9]]
2025-07-12 00:16:41.740 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-07-12 00:16:41.752 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Started ImCommunicationSystemApplication in 3.065 seconds (process running for 403.225)
2025-07-12 00:16:41.754 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 开始配置存储桶访问策略...
2025-07-12 00:16:41.779 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-files
2025-07-12 00:16:41.805 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-images
2025-07-12 00:16:41.823 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-videos
2025-07-12 00:16:41.843 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-audios
2025-07-12 00:16:41.859 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-documents
2025-07-12 00:16:41.877 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-others
2025-07-12 00:16:41.913 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 存储桶访问策略配置完成
2025-07-12 00:16:41.916 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-07-12 00:16:43.181 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-07-12 00:16:43.185 [Thread-11] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2025-07-12 00:16:43.185 [Thread-11] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@3b11c7e9]]
2025-07-12 00:16:43.186 [Thread-11] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2025-07-12 00:16:43.186 [Thread-11] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-12 00:16:43.676 [Thread-11] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 00:16:43.677 [Thread-11] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
2025-07-12 00:16:43.680 [Thread-11] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
2025-07-12 00:16:43.899 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 36628 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 00:16:43.900 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 00:16:44.290 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:16:44.290 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-12 00:16:44.400 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 108 ms. Found 9 JPA repository interfaces.
2025-07-12 00:16:44.539 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:16:44.540 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-12 00:16:44.551 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.LoginDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:16:44.551 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:16:44.551 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:16:44.552 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:16:44.552 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:16:44.552 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:16:44.552 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.FileUploadRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:16:44.553 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:16:44.553 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:16:44.553 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2025-07-12 00:16:44.695 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-12 00:16:44.695 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.9] using APR version [1.7.6].
2025-07-12 00:16:44.696 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.5.0 8 Apr 2025]
2025-07-12 00:16:44.697 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-12 00:16:44.697 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-12 00:16:44.697 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-12 00:16:44.722 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-12 00:16:44.723 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 820 ms
2025-07-12 00:16:44.816 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Starting...
2025-07-12 00:16:44.833 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-4 - Added connection com.mysql.cj.jdbc.ConnectionImpl@34ff4ea2
2025-07-12 00:16:44.833 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Start completed.
2025-07-12 00:16:44.864 [restartedMain] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://localhost:3307/im_db (MySQL 9.3)
2025-07-12 00:16:44.897 [restartedMain] INFO  o.f.core.internal.command.DbValidate - Successfully validated 12 migrations (execution time 00:00.017s)
2025-07-12 00:16:44.912 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Current version of schema `im_db`: 20250112.005
2025-07-12 00:16:44.914 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Schema `im_db` is up to date. No migration necessary.
2025-07-12 00:16:44.948 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-12 00:16:44.952 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-12 00:16:44.956 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-12 00:16:45.047 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-12 00:16:45.071 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 00:16:45.360 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 初始化MinIO客户端，端点: http://localhost:9000, 访问密钥: minioadmin
2025-07-12 00:16:45.361 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO客户端初始化成功
2025-07-12 00:16:45.361 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 开始检查并创建MinIO存储桶...
2025-07-12 00:16:45.443 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO存储桶初始化完成 - 公开存储桶: 6个, 私有存储桶: 6个
2025-07-12 00:16:45.510 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 初始化MinIO服务，开始创建存储桶...
2025-07-12 00:16:45.546 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 所有存储桶初始化成功
2025-07-12 00:16:45.547 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - MinIO服务初始化完成
2025-07-12 00:16:45.575 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 开始初始化公共桶生命周期规则，默认过期天数: 7
2025-07-12 00:16:45.575 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-files 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:16:45.584 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-images 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:16:45.592 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-videos 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:16:45.599 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-documents 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:16:45.608 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 公共桶生命周期规则初始化完成，成功设置: 0 个桶
2025-07-12 00:16:45.746 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 数据一致性检查线程池已初始化: coreSize=2, maxSize=5, queueCapacity=100
2025-07-12 00:16:45.759 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 通用异步任务线程池已初始化: coreSize=5, maxSize=10, queueCapacity=200
2025-07-12 00:16:45.989 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-07-12 00:16:46.121 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-07-12 00:16:46.472 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-07-12 00:16:47.064 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-07-12 00:16:47.094 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-12 00:16:47.099 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-12 00:16:47.100 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-07-12 00:16:47.100 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@7c416d6e]]
2025-07-12 00:16:47.100 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-07-12 00:16:47.119 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Started ImCommunicationSystemApplication in 3.263 seconds (process running for 408.592)
2025-07-12 00:16:47.121 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 开始配置存储桶访问策略...
2025-07-12 00:16:47.157 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-files
2025-07-12 00:16:47.182 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-images
2025-07-12 00:16:47.204 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-videos
2025-07-12 00:16:47.225 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-audios
2025-07-12 00:16:47.247 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-documents
2025-07-12 00:16:47.271 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-others
2025-07-12 00:16:47.314 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 存储桶访问策略配置完成
2025-07-12 00:16:47.316 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-07-12 00:16:56.735 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-12 00:16:56.735 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-12 00:16:56.737 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-07-12 00:16:56.771 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:16:56.774 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:16:56.775 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:16:56.775 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:16:56.775 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:16:56.776 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:16:56.776 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:17:05.516 [SpringApplicationShutdownHook] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2025-07-12 00:17:05.516 [SpringApplicationShutdownHook] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@7c416d6e]]
2025-07-12 00:17:05.517 [SpringApplicationShutdownHook] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2025-07-12 00:17:05.769 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 00:17:05.770 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown initiated...
2025-07-12 00:17:05.770 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown completed.
2025-07-12 00:17:24.877 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-07-12 00:17:24.958 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 36376 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 00:17:24.960 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 00:17:25.024 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-12 00:17:25.025 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-12 00:17:25.826 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:17:25.827 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-12 00:17:25.962 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 128 ms. Found 9 JPA repository interfaces.
2025-07-12 00:17:26.252 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:17:26.252 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-12 00:17:26.277 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.LoginDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:17:26.277 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:17:26.277 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:17:26.278 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:17:26.279 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:17:26.279 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:17:26.279 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.FileUploadRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:17:26.279 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:17:26.279 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:17:26.280 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 0 Redis repository interfaces.
2025-07-12 00:17:27.011 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-12 00:17:27.015 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.9] using APR version [1.7.6].
2025-07-12 00:17:27.018 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.5.0 8 Apr 2025]
2025-07-12 00:17:27.030 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-12 00:17:27.032 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-12 00:17:27.032 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-12 00:17:27.081 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-12 00:17:27.082 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2056 ms
2025-07-12 00:17:27.314 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-12 00:17:27.436 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@532e3cd8
2025-07-12 00:17:27.437 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-12 00:17:27.531 [restartedMain] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://localhost:3307/im_db (MySQL 9.3)
2025-07-12 00:17:27.606 [restartedMain] INFO  o.f.core.internal.command.DbValidate - Successfully validated 12 migrations (execution time 00:00.043s)
2025-07-12 00:17:27.626 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Current version of schema `im_db`: 20250112.005
2025-07-12 00:17:27.630 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Schema `im_db` is up to date. No migration necessary.
2025-07-12 00:17:27.700 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-12 00:17:27.732 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-07-12 00:17:27.757 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-12 00:17:27.941 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-12 00:17:28.911 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-12 00:17:28.985 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 00:17:29.969 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-12 00:17:30.297 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 初始化MinIO客户端，端点: http://localhost:9000, 访问密钥: minioadmin
2025-07-12 00:17:30.454 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO客户端初始化成功
2025-07-12 00:17:30.455 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 开始检查并创建MinIO存储桶...
2025-07-12 00:17:30.680 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO存储桶初始化完成 - 公开存储桶: 6个, 私有存储桶: 6个
2025-07-12 00:17:30.948 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 初始化MinIO服务，开始创建存储桶...
2025-07-12 00:17:31.006 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 所有存储桶初始化成功
2025-07-12 00:17:31.007 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - MinIO服务初始化完成
2025-07-12 00:17:31.070 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 开始初始化公共桶生命周期规则，默认过期天数: 7
2025-07-12 00:17:31.071 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-files 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:17:31.134 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-images 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:17:31.154 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-videos 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:17:31.171 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-documents 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:17:31.187 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 公共桶生命周期规则初始化完成，成功设置: 0 个桶
2025-07-12 00:17:31.388 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 数据一致性检查线程池已初始化: coreSize=2, maxSize=5, queueCapacity=100
2025-07-12 00:17:31.407 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 通用异步任务线程池已初始化: coreSize=5, maxSize=10, queueCapacity=200
2025-07-12 00:17:31.773 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-07-12 00:17:31.944 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-07-12 00:17:32.413 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-07-12 00:17:33.285 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-07-12 00:17:33.344 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-12 00:17:33.364 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-12 00:17:33.366 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-07-12 00:17:33.367 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@2afff831]]
2025-07-12 00:17:33.367 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-07-12 00:17:33.389 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Started ImCommunicationSystemApplication in 9.124 seconds (process running for 9.94)
2025-07-12 00:17:33.433 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 开始配置存储桶访问策略...
2025-07-12 00:17:33.456 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-files
2025-07-12 00:17:33.476 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-images
2025-07-12 00:17:33.497 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-videos
2025-07-12 00:17:33.516 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-audios
2025-07-12 00:17:33.534 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-documents
2025-07-12 00:17:33.553 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-others
2025-07-12 00:17:33.595 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 存储桶访问策略配置完成
2025-07-12 00:17:57.787 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-12 00:17:57.787 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-12 00:17:57.789 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-07-12 00:17:57.884 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:17:57.898 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:17:57.899 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:17:57.899 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:17:57.900 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:17:57.900 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:17:57.900 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:18:33.335 [MessageBroker-4] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 11, active threads = 1, queued tasks = 8, completed tasks = 2]
2025-07-12 00:18:58.761 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:18:58.763 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:18:58.764 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:18:58.764 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:18:58.764 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:18:58.764 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:18:58.764 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:19:07.563 [http-nio-8080-exec-8] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 00:19:07.564 [http-nio-8080-exec-8] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=4
2025-07-12 00:19:07.599 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:19:07.602 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:19:07.602 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:19:07.603 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:19:07.603 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:19:07.603 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:19:07.603 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:19:08.146 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 4
2025-07-12 00:19:08.146 [http-nio-8080-exec-1] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:19:08.147 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:19:08.158 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 00:19:08.159 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=31, 名称=202302091675904140726704.jpg, 类型=image, 大小=8507
2025-07-12 00:19:08.159 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 00:19:08.160 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 00:19:08.160 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=8507, typeStats={image=1}
2025-07-12 00:19:08.169 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 4 的所有文件记录数（包括已删除）: 1
2025-07-12 00:19:08.169 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=31, 原始名称=202302091675904140726704.jpg, 是否删除=false, 文件类型=image
2025-07-12 00:19:08.169 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 00:19:08.177 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 00:19:08.178 [http-nio-8080-exec-1] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 00:19:08.178 [http-nio-8080-exec-1] INFO  c.i.i.u.c.FileUploadController - 用户 4 找到 1 个文件
2025-07-12 00:19:19.106 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:19:19.111 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:19:19.112 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:19:19.112 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:19:19.112 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:19:19.113 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:19:19.115 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:19:19.191 [http-nio-8080-exec-5] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=ceshi, currentUserId=4, page=0, size=20
2025-07-12 00:19:19.195 [http-nio-8080-exec-5] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 00:19:19.195 [http-nio-8080-exec-5] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 00:19:20.532 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:19:20.536 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:19:20.537 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:19:20.538 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:19:21.389 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:19:21.393 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:19:21.393 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:19:21.393 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:19:30.354 [http-nio-8080-exec-10] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 00:19:30.356 [http-nio-8080-exec-10] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=4
2025-07-12 00:19:30.397 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:19:30.401 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:19:30.401 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:19:30.401 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:19:30.401 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:19:30.402 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:19:30.402 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:19:30.946 [http-nio-8080-exec-3] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:19:30.946 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 4
2025-07-12 00:19:30.946 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:19:30.954 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 00:19:30.955 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=31, 名称=202302091675904140726704.jpg, 类型=image, 大小=8507
2025-07-12 00:19:30.956 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 00:19:30.956 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=8507, typeStats={image=1}
2025-07-12 00:19:30.959 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 00:19:30.971 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 4 的所有文件记录数（包括已删除）: 1
2025-07-12 00:19:30.972 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=31, 原始名称=202302091675904140726704.jpg, 是否删除=false, 文件类型=image
2025-07-12 00:19:30.972 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 00:19:30.978 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 00:19:30.978 [http-nio-8080-exec-3] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 00:19:30.978 [http-nio-8080-exec-3] INFO  c.i.i.u.c.FileUploadController - 用户 4 找到 1 个文件
2025-07-12 00:19:36.447 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:19:36.450 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:19:36.451 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:19:36.451 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:19:36.452 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:19:36.452 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:19:36.452 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:19:36.491 [http-nio-8080-exec-7] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=ceshi, currentUserId=4, page=0, size=20
2025-07-12 00:19:36.496 [http-nio-8080-exec-7] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 00:19:36.496 [http-nio-8080-exec-7] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 00:19:37.566 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:19:37.570 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:19:37.571 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:19:37.571 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:19:38.642 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:19:38.646 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:19:38.646 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:19:38.646 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:19:41.379 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:19:41.383 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:19:41.384 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:19:41.384 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:19:42.193 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:19:42.199 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:19:42.200 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:19:42.200 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:20:00.760 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:20:00.761 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:20:00.762 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:20:00.762 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:20:00.762 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:20:00.762 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:20:00.762 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:20:22.110 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:20:22.112 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:20:22.112 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:20:22.112 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:20:22.113 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:20:22.114 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:20:22.114 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:20:25.113 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:20:25.115 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:20:25.116 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:20:25.116 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:20:30.459 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:20:30.463 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:20:30.463 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:20:30.463 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:20:30.463 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:20:30.463 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:20:30.463 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:20:34.182 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:20:34.185 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:20:34.185 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:20:34.185 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:20:34.503 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:20:34.507 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:20:34.507 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:20:34.508 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:20:34.731 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:20:34.735 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:20:34.735 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:20:34.736 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:20:35.043 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:20:35.045 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:20:35.045 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:20:35.045 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:20:35.341 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:20:35.344 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:20:35.344 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:20:35.344 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:21:00.454 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:21:00.460 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:21:00.461 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:21:00.461 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:21:00.462 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:21:00.462 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:21:00.463 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:21:15.872 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:21:15.875 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:21:15.875 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:21:15.875 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:21:16.951 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:21:16.954 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:21:16.954 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:21:16.954 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:21:28.705 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:21:28.708 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:21:28.708 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:21:28.708 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:21:28.708 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:21:28.709 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:21:28.709 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:21:30.442 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:21:30.445 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:21:30.445 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:21:30.445 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:21:30.445 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:21:30.446 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:21:30.446 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:21:30.810 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:21:30.814 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:21:30.815 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:21:30.815 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:21:45.330 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:21:45.333 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:21:45.333 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:21:45.333 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:21:45.333 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:21:45.333 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:21:45.333 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:22:00.753 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:22:00.754 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:22:00.754 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:22:00.754 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:22:00.754 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:22:00.754 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:22:00.755 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:22:30.760 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:22:30.763 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:22:30.763 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:22:30.764 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:22:30.764 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:22:30.764 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:22:30.764 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:22:34.315 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:22:34.317 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:22:34.317 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:22:34.318 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:22:34.318 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:22:34.318 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:22:34.318 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:22:38.520 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:22:38.523 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:22:38.523 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:22:38.523 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:22:38.524 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:22:38.524 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:22:38.524 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:23:00.751 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:23:00.753 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:23:00.754 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:23:00.754 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:23:00.754 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:23:00.754 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:23:00.754 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:23:30.773 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:23:30.778 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:23:30.778 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:23:30.778 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:23:30.778 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:23:30.778 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:23:30.778 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:24:31.746 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:24:31.749 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:24:31.749 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:24:31.749 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:24:31.749 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:24:31.749 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:24:31.749 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:25:03.638 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:25:03.640 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:25:03.640 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:25:03.640 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:25:03.640 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:25:03.641 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:25:03.641 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:25:03.656 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:25:03.658 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:25:03.658 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:25:03.658 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:25:03.658 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:25:03.659 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:25:03.659 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:25:05.137 [http-nio-8080-exec-9] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 00:25:05.139 [http-nio-8080-exec-9] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=4
2025-07-12 00:25:05.163 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:25:05.165 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:25:05.165 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:25:05.165 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:25:05.165 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:25:05.166 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:25:05.166 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:25:05.683 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 4
2025-07-12 00:25:05.685 [http-nio-8080-exec-1] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:25:05.685 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:25:05.686 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 00:25:05.686 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=31, 名称=202302091675904140726704.jpg, 类型=image, 大小=8507
2025-07-12 00:25:05.686 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 00:25:05.687 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=8507, typeStats={image=1}
2025-07-12 00:25:05.691 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 00:25:05.700 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 4 的所有文件记录数（包括已删除）: 1
2025-07-12 00:25:05.700 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=31, 原始名称=202302091675904140726704.jpg, 是否删除=false, 文件类型=image
2025-07-12 00:25:05.700 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 00:25:05.704 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 00:25:05.704 [http-nio-8080-exec-1] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 00:25:05.704 [http-nio-8080-exec-1] INFO  c.i.i.u.c.FileUploadController - 用户 4 找到 1 个文件
2025-07-12 00:25:08.066 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:25:08.068 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:25:08.068 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:25:08.069 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:25:08.069 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:25:08.069 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:25:08.069 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:25:13.300 [http-nio-8080-exec-4] INFO  c.i.i.u.s.impl.UserDeviceServiceImpl - 获取用户设备列表: userId=4
2025-07-12 00:25:18.293 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:25:18.296 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:25:18.296 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:25:18.296 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:25:18.296 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:25:18.296 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:25:18.297 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:25:18.341 [http-nio-8080-exec-7] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=ceshi, currentUserId=4, page=0, size=20
2025-07-12 00:25:18.346 [http-nio-8080-exec-7] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 00:25:18.346 [http-nio-8080-exec-7] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 00:25:20.138 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:25:20.141 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:25:20.142 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:25:20.142 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:25:35.745 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:25:35.747 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:25:35.747 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:25:35.747 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:25:35.747 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:25:35.747 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:25:35.747 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:25:37.144 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:25:37.146 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:25:37.146 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:25:37.147 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:25:37.147 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:25:37.147 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:25:37.147 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:25:40.045 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:25:40.047 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:25:40.047 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:25:40.047 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:25:49.253 [http-nio-8080-exec-3] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 00:25:49.255 [http-nio-8080-exec-3] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=4
2025-07-12 00:25:49.285 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:25:49.288 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:25:49.288 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:25:49.289 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:25:49.289 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:25:49.289 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:25:49.290 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:25:49.816 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 4
2025-07-12 00:25:49.816 [http-nio-8080-exec-7] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:25:49.816 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:25:49.820 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 00:25:49.821 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=31, 名称=202302091675904140726704.jpg, 类型=image, 大小=8507
2025-07-12 00:25:49.822 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 00:25:49.822 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=8507, typeStats={image=1}
2025-07-12 00:25:49.827 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 00:25:49.837 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 4 的所有文件记录数（包括已删除）: 1
2025-07-12 00:25:49.838 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=31, 原始名称=202302091675904140726704.jpg, 是否删除=false, 文件类型=image
2025-07-12 00:25:49.838 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 00:25:49.842 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 00:25:49.843 [http-nio-8080-exec-7] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 00:25:49.843 [http-nio-8080-exec-7] INFO  c.i.i.u.c.FileUploadController - 用户 4 找到 1 个文件
2025-07-12 00:26:05.578 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:26:05.581 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:26:05.581 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:26:05.581 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:26:05.582 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:26:05.582 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:26:05.582 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:26:05.610 [http-nio-8080-exec-10] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=ceshi, currentUserId=4, page=0, size=20
2025-07-12 00:26:05.614 [http-nio-8080-exec-10] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 00:26:05.614 [http-nio-8080-exec-10] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 00:26:19.747 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:26:19.750 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:26:19.750 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:26:19.750 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:26:19.750 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:26:19.750 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:26:19.750 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:26:27.972 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:26:27.974 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:26:27.975 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:26:27.975 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:26:27.975 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:26:27.975 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:26:27.975 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:26:30.810 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:26:30.812 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:26:30.812 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:26:30.812 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:26:30.812 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:26:30.813 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:26:30.813 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:26:33.240 [http-nio-8080-exec-8] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 00:26:33.242 [http-nio-8080-exec-8] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=4
2025-07-12 00:26:33.260 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:26:33.262 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:26:33.262 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:26:33.262 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:26:33.262 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:26:33.263 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:26:33.263 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:26:33.780 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 4
2025-07-12 00:26:33.781 [http-nio-8080-exec-2] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:26:33.781 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:26:33.783 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 00:26:33.783 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=31, 名称=202302091675904140726704.jpg, 类型=image, 大小=8507
2025-07-12 00:26:33.783 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 00:26:33.783 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=8507, typeStats={image=1}
2025-07-12 00:26:33.786 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 00:26:33.801 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 4 的所有文件记录数（包括已删除）: 1
2025-07-12 00:26:33.801 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=31, 原始名称=202302091675904140726704.jpg, 是否删除=false, 文件类型=image
2025-07-12 00:26:33.801 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 00:26:33.808 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 00:26:33.808 [http-nio-8080-exec-2] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 00:26:33.808 [http-nio-8080-exec-2] INFO  c.i.i.u.c.FileUploadController - 用户 4 找到 1 个文件
2025-07-12 00:26:39.561 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:26:39.563 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:26:39.563 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:26:39.563 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:26:39.563 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:26:39.564 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:26:39.564 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:26:39.579 [http-nio-8080-exec-1] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=te, currentUserId=4, page=0, size=20
2025-07-12 00:26:39.581 [http-nio-8080-exec-1] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=te, searchType=null, userId=4)
2025-07-12 00:26:39.581 [http-nio-8080-exec-1] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=te, searchType=null, userId=4)
2025-07-12 00:26:39.586 [http-nio-8080-exec-1] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 未找到用户: userIdStr=te
2025-07-12 00:26:39.587 [http-nio-8080-exec-1] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据昵称搜索用户: searchRequest=SearchContactRequest(keyword=te, searchType=null, userId=4)
2025-07-12 00:26:39.604 [http-nio-8080-exec-1] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 昵称搜索完成: nickname=te, 找到1个结果
2025-07-12 00:27:03.755 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:27:03.761 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:27:03.761 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:27:03.761 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:27:03.761 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:27:03.761 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:27:03.762 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:27:33.751 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:27:33.752 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:27:33.752 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:27:33.752 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:27:33.753 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:27:33.753 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:27:33.753 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:28:03.766 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:28:03.770 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:28:03.770 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:28:03.770 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:28:03.770 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:28:03.770 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:28:03.771 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:28:33.748 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:28:33.752 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:28:33.752 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:28:33.753 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:28:33.753 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:28:33.753 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:28:33.753 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:28:41.396 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:28:41.400 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:28:41.400 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:28:41.400 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:28:41.400 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:28:41.401 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:28:41.401 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:28:42.295 [http-nio-8080-exec-4] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 00:28:42.296 [http-nio-8080-exec-4] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=4
2025-07-12 00:28:42.323 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:28:42.326 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:28:42.326 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:28:42.326 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:28:42.326 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:28:42.326 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:28:42.326 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:28:42.854 [http-nio-8080-exec-7] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:28:42.854 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 4
2025-07-12 00:28:42.854 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:28:42.858 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 00:28:42.858 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=31, 名称=202302091675904140726704.jpg, 类型=image, 大小=8507
2025-07-12 00:28:42.858 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 00:28:42.858 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=8507, typeStats={image=1}
2025-07-12 00:28:42.862 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 00:28:42.869 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 4 的所有文件记录数（包括已删除）: 1
2025-07-12 00:28:42.870 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=31, 原始名称=202302091675904140726704.jpg, 是否删除=false, 文件类型=image
2025-07-12 00:28:42.870 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 00:28:42.872 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 00:28:42.872 [http-nio-8080-exec-7] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 00:28:42.873 [http-nio-8080-exec-7] INFO  c.i.i.u.c.FileUploadController - 用户 4 找到 1 个文件
2025-07-12 00:28:45.621 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:28:45.626 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:28:45.626 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:28:45.627 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:28:45.627 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:28:45.627 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:28:45.627 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:28:45.673 [http-nio-8080-exec-10] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=ceshi, currentUserId=4, page=0, size=20
2025-07-12 00:28:45.679 [http-nio-8080-exec-10] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 00:28:45.680 [http-nio-8080-exec-10] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 00:28:48.116 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:28:48.120 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:28:48.121 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:28:48.121 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:28:49.618 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:28:49.628 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:28:49.628 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:28:49.628 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:28:54.477 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:28:54.479 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:28:54.481 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:28:54.481 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:28:54.960 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:28:54.963 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:28:54.963 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:28:54.963 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:28:56.619 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:28:56.622 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:28:56.622 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:28:56.623 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:28:59.721 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:28:59.724 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:28:59.725 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:28:59.725 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:29:12.768 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:29:12.773 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:29:12.774 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:29:12.774 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:29:12.775 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:29:12.775 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:29:12.775 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:29:14.658 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:29:14.660 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:29:14.661 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:29:14.661 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:29:14.661 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:29:14.661 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:29:14.661 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:29:15.869 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:29:15.871 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:29:15.871 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:29:15.871 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:29:15.872 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:29:15.872 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:29:15.872 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:29:18.045 [http-nio-8080-exec-2] INFO  c.i.i.u.s.impl.UserQRCodeServiceImpl - 生成用户二维码: userId=1
2025-07-12 00:29:21.503 [http-nio-8080-exec-5] INFO  c.i.i.u.s.impl.UserQRCodeServiceImpl - 生成用户二维码: userId=1
2025-07-12 00:29:42.364 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:29:42.367 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:29:42.367 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:29:42.367 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:29:42.368 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:29:42.368 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:29:42.368 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:29:45.483 [http-nio-8080-exec-7] INFO  c.i.i.a.service.impl.AuthServiceImpl - 开始处理密码登录请求: jiapei1219@gmail.com
2025-07-12 00:29:46.416 [http-nio-8080-exec-7] INFO  c.i.i.a.service.AccountLockService - 用户 jiapei1219@gmail.com 无登录失败记录需要清除
2025-07-12 00:29:46.416 [http-nio-8080-exec-7] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户密码验证成功: userId=4, email=jiapei1219@gmail.com
2025-07-12 00:29:46.416 [http-nio-8080-exec-7] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 记录登录设备: userId=4, deviceType=Web, ipAddress=null
2025-07-12 00:29:46.421 [http-nio-8080-exec-7] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 更新现有设备记录: deviceId=6
2025-07-12 00:29:46.451 [http-nio-8080-exec-7] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户选择记住登录状态，设置长期token: userId=4
2025-07-12 00:29:46.451 [http-nio-8080-exec-7] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户登录成功: userId=4, email=jiapei1219@gmail.com, rememberMe=true
2025-07-12 00:29:48.082 [http-nio-8080-exec-2] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 00:29:48.084 [http-nio-8080-exec-2] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=4
2025-07-12 00:29:48.117 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:29:48.120 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:29:48.120 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:29:48.121 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:29:48.121 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:29:48.122 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:29:48.122 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:29:48.648 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 4
2025-07-12 00:29:48.648 [http-nio-8080-exec-4] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:29:48.649 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:29:48.654 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 00:29:48.655 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=31, 名称=202302091675904140726704.jpg, 类型=image, 大小=8507
2025-07-12 00:29:48.655 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 00:29:48.656 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=8507, typeStats={image=1}
2025-07-12 00:29:48.662 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 00:29:48.680 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 4 的所有文件记录数（包括已删除）: 1
2025-07-12 00:29:48.681 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=31, 原始名称=202302091675904140726704.jpg, 是否删除=false, 文件类型=image
2025-07-12 00:29:48.681 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 00:29:48.687 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 00:29:48.688 [http-nio-8080-exec-4] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 00:29:48.689 [http-nio-8080-exec-4] INFO  c.i.i.u.c.FileUploadController - 用户 4 找到 1 个文件
2025-07-12 00:29:49.290 [http-nio-8080-exec-6] INFO  c.i.i.u.s.impl.UserQRCodeServiceImpl - 生成用户二维码: userId=1
2025-07-12 00:29:56.157 [http-nio-8080-exec-9] INFO  c.i.i.a.service.impl.AuthServiceImpl - 开始处理密码登录请求: 3280164803@qq.com
2025-07-12 00:29:56.276 [http-nio-8080-exec-9] INFO  c.i.i.a.service.AccountLockService - 用户 3280164803@qq.com 无登录失败记录需要清除
2025-07-12 00:29:56.277 [http-nio-8080-exec-9] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户密码验证成功: userId=2, email=3280164803@qq.com
2025-07-12 00:29:56.277 [http-nio-8080-exec-9] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 记录登录设备: userId=2, deviceType=Web, ipAddress=null
2025-07-12 00:29:56.282 [http-nio-8080-exec-9] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 更新现有设备记录: deviceId=2
2025-07-12 00:29:56.285 [http-nio-8080-exec-9] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户选择记住登录状态，设置长期token: userId=2
2025-07-12 00:29:56.285 [http-nio-8080-exec-9] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户登录成功: userId=2, email=3280164803@qq.com, rememberMe=true
2025-07-12 00:29:57.888 [http-nio-8080-exec-2] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 00:29:57.890 [http-nio-8080-exec-2] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=2
2025-07-12 00:29:57.922 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:29:57.925 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:29:57.925 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:29:57.926 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:29:58.452 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 2
2025-07-12 00:29:58.456 [http-nio-8080-exec-4] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 2, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:29:58.456 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 2, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:29:58.456 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 00:29:58.457 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=24, 名称=202302091675904140211711.jpg, 类型=image, 大小=7125
2025-07-12 00:29:58.457 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 00:29:58.457 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=7125, typeStats={image=1}
2025-07-12 00:29:58.469 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 00:29:58.477 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 2 的所有文件记录数（包括已删除）: 1
2025-07-12 00:29:58.477 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=24, 原始名称=202302091675904140211711.jpg, 是否删除=false, 文件类型=image
2025-07-12 00:29:58.477 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 00:29:58.486 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 00:29:58.487 [http-nio-8080-exec-4] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 00:29:58.487 [http-nio-8080-exec-4] INFO  c.i.i.u.c.FileUploadController - 用户 2 找到 1 个文件
2025-07-12 00:29:59.776 [http-nio-8080-exec-8] INFO  c.i.i.u.s.impl.UserQRCodeServiceImpl - 生成用户二维码: userId=1
2025-07-12 00:30:03.827 [http-nio-8080-exec-9] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 2, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:30:03.828 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 2, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:30:03.832 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 2
2025-07-12 00:30:03.838 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 00:30:03.839 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 00:30:03.839 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=24, 名称=202302091675904140211711.jpg, 类型=image, 大小=7125
2025-07-12 00:30:03.840 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 00:30:03.840 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=7125, typeStats={image=1}
2025-07-12 00:30:03.853 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 2 的所有文件记录数（包括已删除）: 1
2025-07-12 00:30:03.854 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=24, 原始名称=202302091675904140211711.jpg, 是否删除=false, 文件类型=image
2025-07-12 00:30:03.854 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 00:30:03.861 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 00:30:03.861 [http-nio-8080-exec-9] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 00:30:03.861 [http-nio-8080-exec-9] INFO  c.i.i.u.c.FileUploadController - 用户 2 找到 1 个文件
2025-07-12 00:30:04.949 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 2
2025-07-12 00:30:04.951 [http-nio-8080-exec-5] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 2, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:30:04.951 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 2, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:30:04.953 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 00:30:04.953 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=24, 名称=202302091675904140211711.jpg, 类型=image, 大小=7125
2025-07-12 00:30:04.954 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 00:30:04.954 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=7125, typeStats={image=1}
2025-07-12 00:30:04.959 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 00:30:04.969 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 2 的所有文件记录数（包括已删除）: 1
2025-07-12 00:30:04.969 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=24, 原始名称=202302091675904140211711.jpg, 是否删除=false, 文件类型=image
2025-07-12 00:30:04.969 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 00:30:04.975 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 00:30:04.975 [http-nio-8080-exec-5] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 00:30:04.975 [http-nio-8080-exec-5] INFO  c.i.i.u.c.FileUploadController - 用户 2 找到 1 个文件
2025-07-12 00:30:19.677 [http-nio-8080-exec-6] INFO  c.i.i.a.service.impl.AuthServiceImpl - 开始处理密码登录请求: jiapei1219@gmail.com
2025-07-12 00:30:19.814 [http-nio-8080-exec-6] INFO  c.i.i.a.service.AccountLockService - 用户 jiapei1219@gmail.com 无登录失败记录需要清除
2025-07-12 00:30:19.814 [http-nio-8080-exec-6] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户密码验证成功: userId=4, email=jiapei1219@gmail.com
2025-07-12 00:30:19.815 [http-nio-8080-exec-6] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 记录登录设备: userId=4, deviceType=Web, ipAddress=null
2025-07-12 00:30:19.819 [http-nio-8080-exec-6] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 更新现有设备记录: deviceId=6
2025-07-12 00:30:19.822 [http-nio-8080-exec-6] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户选择记住登录状态，设置长期token: userId=4
2025-07-12 00:30:19.822 [http-nio-8080-exec-6] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户登录成功: userId=4, email=jiapei1219@gmail.com, rememberMe=true
2025-07-12 00:30:21.435 [http-nio-8080-exec-7] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 00:30:21.437 [http-nio-8080-exec-7] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=4
2025-07-12 00:30:21.466 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:30:21.469 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:30:21.469 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:30:21.469 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:30:21.470 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:30:21.470 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:30:21.471 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:30:21.994 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 4
2025-07-12 00:30:21.995 [http-nio-8080-exec-1] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:30:21.995 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:30:21.998 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 00:30:21.998 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=31, 名称=202302091675904140726704.jpg, 类型=image, 大小=8507
2025-07-12 00:30:21.998 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 00:30:21.999 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=8507, typeStats={image=1}
2025-07-12 00:30:22.003 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 00:30:22.012 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 4 的所有文件记录数（包括已删除）: 1
2025-07-12 00:30:22.012 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=31, 原始名称=202302091675904140726704.jpg, 是否删除=false, 文件类型=image
2025-07-12 00:30:22.012 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 00:30:22.017 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 00:30:22.017 [http-nio-8080-exec-1] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 00:30:22.018 [http-nio-8080-exec-1] INFO  c.i.i.u.c.FileUploadController - 用户 4 找到 1 个文件
2025-07-12 00:30:26.188 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:30:26.190 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:30:26.190 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:30:26.191 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:30:26.191 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:30:26.191 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:30:26.191 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:30:36.072 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:30:36.074 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:30:36.074 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:30:36.075 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:30:36.075 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:30:36.075 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:30:36.075 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:30:39.894 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:30:39.896 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:30:39.896 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:30:39.896 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:30:39.897 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:30:39.897 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:30:39.897 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:30:39.913 [http-nio-8080-exec-8] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=ces, currentUserId=4, page=0, size=20
2025-07-12 00:30:39.917 [http-nio-8080-exec-8] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=ces, searchType=null, userId=4)
2025-07-12 00:30:39.917 [http-nio-8080-exec-8] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=ces, searchType=null, userId=4)
2025-07-12 00:30:39.922 [http-nio-8080-exec-8] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 未找到用户: userIdStr=ces
2025-07-12 00:30:39.922 [http-nio-8080-exec-8] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据昵称搜索用户: searchRequest=SearchContactRequest(keyword=ces, searchType=null, userId=4)
2025-07-12 00:30:39.925 [http-nio-8080-exec-8] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 昵称搜索完成: nickname=ces, 找到0个结果
2025-07-12 00:30:41.901 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:30:41.904 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:30:41.904 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:30:41.905 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:30:41.905 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:30:41.906 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:30:41.906 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:30:41.939 [http-nio-8080-exec-7] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=ceshi, currentUserId=4, page=0, size=20
2025-07-12 00:30:41.943 [http-nio-8080-exec-7] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 00:30:41.943 [http-nio-8080-exec-7] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 00:30:47.498 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:30:47.499 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:30:47.500 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:30:47.500 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:30:47.500 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:30:47.500 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:30:47.500 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:30:48.419 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:30:48.420 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:30:48.420 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:30:48.421 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:30:51.752 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:30:51.755 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:30:51.755 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:30:51.755 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:30:51.755 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:30:51.755 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:30:51.755 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:31:21.752 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:31:21.754 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:31:21.754 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:31:21.755 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:31:21.755 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:31:21.755 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:31:21.755 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:31:28.372 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:31:28.373 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:31:28.374 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:31:28.374 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:31:28.374 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:31:28.374 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:31:28.374 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:31:34.239 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:31:34.242 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:31:34.242 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:31:34.242 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:31:51.748 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:31:51.750 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:31:51.751 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:31:51.751 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:31:51.751 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:31:51.751 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:31:51.751 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:32:21.750 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:32:21.751 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:32:21.751 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:32:21.752 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:32:21.752 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:32:21.752 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:32:21.752 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:32:51.747 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:32:51.749 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:32:51.749 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:32:51.749 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:32:51.750 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:32:51.750 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:32:51.750 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:33:21.742 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:33:21.743 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:33:21.744 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:33:21.744 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:33:21.744 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:33:21.744 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:33:21.744 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:33:51.758 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:33:51.761 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:33:51.761 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:33:51.762 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:33:51.762 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:33:51.762 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:33:51.762 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:33:57.034 [http-nio-8080-exec-10] INFO  c.i.i.a.service.impl.AuthServiceImpl - 开始处理密码登录请求: jiapei1219@gmail.com
2025-07-12 00:33:57.122 [http-nio-8080-exec-10] INFO  c.i.i.a.service.AccountLockService - 用户 jiapei1219@gmail.com 无登录失败记录需要清除
2025-07-12 00:33:57.123 [http-nio-8080-exec-10] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户密码验证成功: userId=4, email=jiapei1219@gmail.com
2025-07-12 00:33:57.123 [http-nio-8080-exec-10] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 记录登录设备: userId=4, deviceType=Web, ipAddress=null
2025-07-12 00:33:57.127 [http-nio-8080-exec-10] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 创建新设备记录
2025-07-12 00:33:57.170 [http-nio-8080-exec-10] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户选择记住登录状态，设置长期token: userId=4
2025-07-12 00:33:57.170 [http-nio-8080-exec-10] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户登录成功: userId=4, email=jiapei1219@gmail.com, rememberMe=true
2025-07-12 00:34:02.205 [http-nio-8080-exec-3] INFO  c.i.i.a.service.impl.AuthServiceImpl - 开始处理密码登录请求: jiapei1219@gmail.com
2025-07-12 00:34:02.285 [http-nio-8080-exec-3] INFO  c.i.i.a.service.AccountLockService - 用户 jiapei1219@gmail.com 无登录失败记录需要清除
2025-07-12 00:34:02.285 [http-nio-8080-exec-3] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户密码验证成功: userId=4, email=jiapei1219@gmail.com
2025-07-12 00:34:02.285 [http-nio-8080-exec-3] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 记录登录设备: userId=4, deviceType=Web, ipAddress=null
2025-07-12 00:34:02.289 [http-nio-8080-exec-3] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 更新现有设备记录: deviceId=7
2025-07-12 00:34:02.291 [http-nio-8080-exec-3] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户选择记住登录状态，设置长期token: userId=4
2025-07-12 00:34:02.291 [http-nio-8080-exec-3] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户登录成功: userId=4, email=jiapei1219@gmail.com, rememberMe=true
2025-07-12 00:35:35.898 [http-nio-8080-exec-6] INFO  c.i.i.a.service.impl.AuthServiceImpl - 开始处理密码登录请求: jiapei1219@gmail.com
2025-07-12 00:35:35.990 [http-nio-8080-exec-6] INFO  c.i.i.a.service.AccountLockService - 用户 jiapei1219@gmail.com 无登录失败记录需要清除
2025-07-12 00:35:35.990 [http-nio-8080-exec-6] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户密码验证成功: userId=4, email=jiapei1219@gmail.com
2025-07-12 00:35:35.991 [http-nio-8080-exec-6] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 记录登录设备: userId=4, deviceType=Web, ipAddress=null
2025-07-12 00:35:35.995 [http-nio-8080-exec-6] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 更新现有设备记录: deviceId=6
2025-07-12 00:35:35.998 [http-nio-8080-exec-6] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户选择记住登录状态，设置长期token: userId=4
2025-07-12 00:35:35.998 [http-nio-8080-exec-6] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户登录成功: userId=4, email=jiapei1219@gmail.com, rememberMe=true
2025-07-12 00:35:46.820 [http-nio-8080-exec-1] INFO  c.i.i.a.service.impl.AuthServiceImpl - 开始处理密码登录请求: 3280164803@qq.com
2025-07-12 00:35:46.894 [http-nio-8080-exec-1] INFO  c.i.i.a.service.AccountLockService - 用户 3280164803@qq.com 无登录失败记录需要清除
2025-07-12 00:35:46.895 [http-nio-8080-exec-1] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户密码验证成功: userId=2, email=3280164803@qq.com
2025-07-12 00:35:46.895 [http-nio-8080-exec-1] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 记录登录设备: userId=2, deviceType=Web, ipAddress=null
2025-07-12 00:35:46.898 [http-nio-8080-exec-1] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 更新现有设备记录: deviceId=2
2025-07-12 00:35:46.899 [http-nio-8080-exec-1] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户选择记住登录状态，设置长期token: userId=2
2025-07-12 00:35:46.899 [http-nio-8080-exec-1] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户登录成功: userId=2, email=3280164803@qq.com, rememberMe=true
2025-07-12 00:35:48.503 [http-nio-8080-exec-6] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 00:35:48.504 [http-nio-8080-exec-6] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=2
2025-07-12 00:35:48.525 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:35:48.527 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:35:48.527 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:35:48.527 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:35:49.066 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 2
2025-07-12 00:35:49.066 [http-nio-8080-exec-7] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 2, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:35:49.067 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 2, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:35:49.072 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 00:35:49.072 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=24, 名称=202302091675904140211711.jpg, 类型=image, 大小=7125
2025-07-12 00:35:49.073 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 00:35:49.073 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=7125, typeStats={image=1}
2025-07-12 00:35:49.073 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 00:35:49.088 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 2 的所有文件记录数（包括已删除）: 1
2025-07-12 00:35:49.088 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=24, 原始名称=202302091675904140211711.jpg, 是否删除=false, 文件类型=image
2025-07-12 00:35:49.088 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 00:35:49.093 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 00:35:49.093 [http-nio-8080-exec-7] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 00:35:49.094 [http-nio-8080-exec-7] INFO  c.i.i.u.c.FileUploadController - 用户 2 找到 1 个文件
2025-07-12 00:36:18.746 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:36:18.749 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:36:18.749 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:36:18.749 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:36:21.794 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:36:21.796 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:36:21.796 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:36:21.796 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:36:23.072 [http-nio-8080-exec-2] INFO  c.i.i.u.s.impl.UserQRCodeServiceImpl - 生成用户二维码: userId=1
2025-07-12 00:36:29.834 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:36:29.840 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:36:29.840 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:36:29.840 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:36:29.902 [http-nio-8080-exec-4] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=test, currentUserId=2, page=0, size=20
2025-07-12 00:36:29.906 [http-nio-8080-exec-4] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=test, searchType=null, userId=2)
2025-07-12 00:36:29.906 [http-nio-8080-exec-4] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=test, searchType=null, userId=2)
2025-07-12 00:36:29.912 [http-nio-8080-exec-4] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 未找到用户: userIdStr=test
2025-07-12 00:36:29.913 [http-nio-8080-exec-4] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据昵称搜索用户: searchRequest=SearchContactRequest(keyword=test, searchType=null, userId=2)
2025-07-12 00:36:29.935 [http-nio-8080-exec-4] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 昵称搜索完成: nickname=test, 找到1个结果
2025-07-12 00:36:31.113 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:36:31.114 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:36:31.114 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:36:31.115 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:36:31.115 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:36:31.116 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:36:31.116 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:36:40.011 [http-nio-8080-exec-5] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 00:36:40.013 [http-nio-8080-exec-5] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=2
2025-07-12 00:36:40.054 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:36:40.056 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:36:40.056 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:36:40.056 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:36:40.600 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 2
2025-07-12 00:36:40.600 [http-nio-8080-exec-3] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 2, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:36:40.600 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 2, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:36:40.603 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 00:36:40.604 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=24, 名称=202302091675904140211711.jpg, 类型=image, 大小=7125
2025-07-12 00:36:40.604 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 00:36:40.604 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=7125, typeStats={image=1}
2025-07-12 00:36:40.608 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 00:36:40.619 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 2 的所有文件记录数（包括已删除）: 1
2025-07-12 00:36:40.619 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=24, 原始名称=202302091675904140211711.jpg, 是否删除=false, 文件类型=image
2025-07-12 00:36:40.619 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 00:36:40.624 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 00:36:40.624 [http-nio-8080-exec-3] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 00:36:40.625 [http-nio-8080-exec-3] INFO  c.i.i.u.c.FileUploadController - 用户 2 找到 1 个文件
2025-07-12 00:36:46.460 [http-nio-8080-exec-10] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 00:36:46.463 [http-nio-8080-exec-10] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=2
2025-07-12 00:36:46.503 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:36:46.509 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:36:46.509 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:36:46.509 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:36:47.037 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 2
2025-07-12 00:36:47.037 [http-nio-8080-exec-5] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 2, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:36:47.037 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 2, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:36:47.039 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 00:36:47.040 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=24, 名称=202302091675904140211711.jpg, 类型=image, 大小=7125
2025-07-12 00:36:47.040 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 00:36:47.040 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=7125, typeStats={image=1}
2025-07-12 00:36:47.049 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 00:36:47.062 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 2 的所有文件记录数（包括已删除）: 1
2025-07-12 00:36:47.062 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=24, 原始名称=202302091675904140211711.jpg, 是否删除=false, 文件类型=image
2025-07-12 00:36:47.063 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 00:36:47.067 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 00:36:47.067 [http-nio-8080-exec-5] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 00:36:47.068 [http-nio-8080-exec-5] INFO  c.i.i.u.c.FileUploadController - 用户 2 找到 1 个文件
2025-07-12 00:36:50.949 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:36:50.951 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:36:50.951 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:36:50.951 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:36:50.978 [http-nio-8080-exec-4] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=test, currentUserId=2, page=0, size=20
2025-07-12 00:36:50.982 [http-nio-8080-exec-4] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=test, searchType=null, userId=2)
2025-07-12 00:36:50.983 [http-nio-8080-exec-4] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=test, searchType=null, userId=2)
2025-07-12 00:36:50.989 [http-nio-8080-exec-4] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 未找到用户: userIdStr=test
2025-07-12 00:36:50.990 [http-nio-8080-exec-4] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据昵称搜索用户: searchRequest=SearchContactRequest(keyword=test, searchType=null, userId=2)
2025-07-12 00:36:51.005 [http-nio-8080-exec-4] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 昵称搜索完成: nickname=test, 找到1个结果
2025-07-12 00:36:52.173 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:36:52.176 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:36:52.177 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:36:52.177 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:36:52.178 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:36:52.179 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:36:52.180 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:37:11.206 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:37:11.208 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:37:11.209 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:37:11.209 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:37:16.750 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:37:16.752 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:37:16.753 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:37:16.753 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:37:27.092 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:37:27.095 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:37:27.095 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:37:27.095 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:37:29.371 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:37:29.374 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:37:29.375 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:37:29.376 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:37:29.376 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:37:29.376 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:37:29.376 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:37:36.844 [http-nio-8080-exec-6] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 00:37:36.846 [http-nio-8080-exec-6] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=2
2025-07-12 00:37:36.887 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:37:36.889 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:37:36.889 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:37:36.889 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:37:37.420 [http-nio-8080-exec-10] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 2, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:37:37.420 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 2, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:37:37.420 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 2
2025-07-12 00:37:37.423 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 00:37:37.424 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=24, 名称=202302091675904140211711.jpg, 类型=image, 大小=7125
2025-07-12 00:37:37.424 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 00:37:37.424 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=7125, typeStats={image=1}
2025-07-12 00:37:37.427 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 00:37:37.436 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 2 的所有文件记录数（包括已删除）: 1
2025-07-12 00:37:37.437 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=24, 原始名称=202302091675904140211711.jpg, 是否删除=false, 文件类型=image
2025-07-12 00:37:37.438 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 00:37:37.441 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 00:37:37.442 [http-nio-8080-exec-10] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 00:37:37.443 [http-nio-8080-exec-10] INFO  c.i.i.u.c.FileUploadController - 用户 2 找到 1 个文件
2025-07-12 00:38:06.944 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:38:06.948 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:38:06.948 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:38:06.948 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:38:36.946 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:38:36.949 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:38:36.950 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:38:36.950 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:39:06.923 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:39:06.925 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:39:06.925 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:39:06.925 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:39:09.032 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:39:09.034 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:39:09.034 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:39:09.034 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:39:12.630 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:39:12.632 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:39:12.633 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:39:12.633 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:39:12.663 [http-nio-8080-exec-1] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=ces, currentUserId=2, page=0, size=20
2025-07-12 00:39:12.668 [http-nio-8080-exec-1] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=ces, searchType=null, userId=2)
2025-07-12 00:39:12.668 [http-nio-8080-exec-1] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=ces, searchType=null, userId=2)
2025-07-12 00:39:12.673 [http-nio-8080-exec-1] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 未找到用户: userIdStr=ces
2025-07-12 00:39:12.673 [http-nio-8080-exec-1] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据昵称搜索用户: searchRequest=SearchContactRequest(keyword=ces, searchType=null, userId=2)
2025-07-12 00:39:12.677 [http-nio-8080-exec-1] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 昵称搜索完成: nickname=ces, 找到0个结果
2025-07-12 00:39:17.582 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:39:17.585 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:39:17.586 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:39:17.586 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:39:17.614 [http-nio-8080-exec-2] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=test, currentUserId=2, page=0, size=20
2025-07-12 00:39:17.617 [http-nio-8080-exec-2] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=test, searchType=null, userId=2)
2025-07-12 00:39:17.618 [http-nio-8080-exec-2] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=test, searchType=null, userId=2)
2025-07-12 00:39:17.623 [http-nio-8080-exec-2] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 未找到用户: userIdStr=test
2025-07-12 00:39:17.624 [http-nio-8080-exec-2] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据昵称搜索用户: searchRequest=SearchContactRequest(keyword=test, searchType=null, userId=2)
2025-07-12 00:39:17.638 [http-nio-8080-exec-2] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 昵称搜索完成: nickname=test, 找到1个结果
2025-07-12 00:39:26.303 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:39:26.305 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:39:26.305 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:39:26.306 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:39:26.306 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:39:26.306 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:39:26.306 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:39:35.181 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:39:35.183 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:39:35.184 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:39:35.184 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:39:35.184 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:39:35.184 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:39:35.185 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:39:36.933 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:39:36.935 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:39:36.935 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:39:36.935 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:39:38.809 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:39:38.811 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:39:38.811 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:39:38.811 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:39:38.812 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:39:38.812 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:39:38.812 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:39:42.451 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:39:42.453 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:39:42.453 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:39:42.453 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:39:42.453 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:39:42.454 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:39:42.454 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:39:48.043 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:39:48.045 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:39:48.046 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:39:48.046 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:39:48.046 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:39:48.046 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:39:48.046 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:40:04.350 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:40:04.352 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:40:04.353 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:40:04.353 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:40:07.749 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:40:07.750 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:40:07.751 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:40:07.751 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:40:37.752 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:40:37.754 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:40:37.754 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:40:37.755 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:41:07.745 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:41:07.747 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:41:07.747 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:41:07.748 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:41:58.745 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:41:58.748 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:41:58.748 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:41:58.748 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:42:58.769 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:42:58.772 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:42:58.772 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:42:58.772 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:43:58.754 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:43:58.756 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:43:58.756 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:43:58.756 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:44:41.304 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:44:41.306 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:44:41.306 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:44:41.306 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:44:41.329 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:44:41.332 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:44:41.332 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:44:41.332 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:44:43.300 [http-nio-8080-exec-6] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 00:44:43.301 [http-nio-8080-exec-6] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=2
2025-07-12 00:44:43.319 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:44:43.321 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:44:43.321 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:44:43.321 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:44:43.841 [http-nio-8080-exec-10] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 2, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:44:43.841 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 2
2025-07-12 00:44:43.841 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 2, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:44:43.848 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 00:44:43.849 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=24, 名称=202302091675904140211711.jpg, 类型=image, 大小=7125
2025-07-12 00:44:43.849 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 00:44:43.849 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=7125, typeStats={image=1}
2025-07-12 00:44:43.855 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 00:44:43.864 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 2 的所有文件记录数（包括已删除）: 1
2025-07-12 00:44:43.864 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=24, 原始名称=202302091675904140211711.jpg, 是否删除=false, 文件类型=image
2025-07-12 00:44:43.864 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 00:44:43.869 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 00:44:43.869 [http-nio-8080-exec-10] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 00:44:43.869 [http-nio-8080-exec-10] INFO  c.i.i.u.c.FileUploadController - 用户 2 找到 1 个文件
2025-07-12 00:44:44.810 [http-nio-8080-exec-5] INFO  c.i.i.u.s.impl.UserQRCodeServiceImpl - 生成用户二维码: userId=1
2025-07-12 00:44:53.058 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:44:53.060 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:44:53.060 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:44:53.060 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:44:53.116 [http-nio-8080-exec-4] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=test, currentUserId=2, page=0, size=20
2025-07-12 00:44:53.131 [http-nio-8080-exec-4] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=test, searchType=null, userId=2)
2025-07-12 00:44:53.133 [http-nio-8080-exec-4] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=test, searchType=null, userId=2)
2025-07-12 00:44:53.153 [http-nio-8080-exec-4] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 未找到用户: userIdStr=test
2025-07-12 00:44:53.155 [http-nio-8080-exec-4] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据昵称搜索用户: searchRequest=SearchContactRequest(keyword=test, searchType=null, userId=2)
2025-07-12 00:44:53.181 [http-nio-8080-exec-4] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 昵称搜索完成: nickname=test, 找到1个结果
2025-07-12 00:44:54.051 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:44:54.053 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:44:54.054 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:44:54.054 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:44:54.055 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:44:54.055 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:44:54.056 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:45:13.759 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:45:13.761 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:45:13.761 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:45:13.761 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:45:20.952 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:45:20.956 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:45:20.956 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:45:20.956 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:45:25.873 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:45:25.875 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:45:25.875 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:45:25.875 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:45:25.875 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:45:25.876 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:45:25.876 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:45:27.204 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:45:27.206 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:45:27.207 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:45:27.207 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:45:27.207 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:45:27.207 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:45:27.207 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:45:27.564 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:45:27.565 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:45:27.565 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:45:27.565 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:45:27.566 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:45:27.566 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:45:27.566 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:45:27.779 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:45:27.780 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:45:27.781 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:45:27.781 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:45:27.781 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:45:27.781 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:45:27.781 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:45:33.549 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:45:33.551 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:45:33.551 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:45:33.551 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:45:33.551 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:45:33.551 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:45:33.551 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:45:33.819 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:45:33.821 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:45:33.821 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:45:33.821 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:45:33.821 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:45:33.821 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:45:33.821 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:45:39.959 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:45:39.961 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:45:39.961 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:45:39.961 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:45:39.961 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:45:39.961 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:45:39.961 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:45:43.743 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:45:43.746 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:45:43.746 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:45:43.746 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:46:13.747 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:46:13.749 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:46:13.749 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:46:13.750 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:46:43.742 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:46:43.744 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:46:43.744 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:46:43.744 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:47:09.783 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-07-12 00:47:09.800 [Thread-5] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2025-07-12 00:47:09.800 [Thread-5] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@2afff831]]
2025-07-12 00:47:09.800 [Thread-5] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2025-07-12 00:47:09.802 [Thread-5] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-12 00:47:10.143 [Thread-5] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 00:47:10.149 [Thread-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-12 00:47:10.152 [Thread-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-12 00:47:10.357 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 36376 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 00:47:10.357 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 00:47:10.641 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:47:10.641 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-12 00:47:10.679 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 36 ms. Found 9 JPA repository interfaces.
2025-07-12 00:47:10.787 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:47:10.787 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-12 00:47:10.798 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.LoginDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:47:10.799 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:47:10.799 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:47:10.799 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:47:10.799 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:47:10.799 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:47:10.799 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.FileUploadRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:47:10.799 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:47:10.800 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:47:10.800 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2025-07-12 00:47:10.974 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-12 00:47:10.976 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.9] using APR version [1.7.6].
2025-07-12 00:47:10.977 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.5.0 8 Apr 2025]
2025-07-12 00:47:10.977 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-12 00:47:10.977 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-12 00:47:10.977 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-12 00:47:11.007 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-12 00:47:11.007 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 648 ms
2025-07-12 00:47:11.100 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-07-12 00:47:11.123 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3274ed4d
2025-07-12 00:47:11.123 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-07-12 00:47:11.161 [restartedMain] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://localhost:3307/im_db (MySQL 9.3)
2025-07-12 00:47:11.222 [restartedMain] INFO  o.f.core.internal.command.DbValidate - Successfully validated 12 migrations (execution time 00:00.032s)
2025-07-12 00:47:11.242 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Current version of schema `im_db`: 20250112.005
2025-07-12 00:47:11.243 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Schema `im_db` is up to date. No migration necessary.
2025-07-12 00:47:11.291 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-12 00:47:11.294 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-12 00:47:11.305 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-12 00:47:11.471 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-12 00:47:11.496 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 00:47:11.866 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 初始化MinIO客户端，端点: http://localhost:9000, 访问密钥: minioadmin
2025-07-12 00:47:11.868 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO客户端初始化成功
2025-07-12 00:47:11.868 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 开始检查并创建MinIO存储桶...
2025-07-12 00:47:11.955 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO存储桶初始化完成 - 公开存储桶: 6个, 私有存储桶: 6个
2025-07-12 00:47:12.035 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 初始化MinIO服务，开始创建存储桶...
2025-07-12 00:47:12.068 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 所有存储桶初始化成功
2025-07-12 00:47:12.068 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - MinIO服务初始化完成
2025-07-12 00:47:12.093 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 开始初始化公共桶生命周期规则，默认过期天数: 7
2025-07-12 00:47:12.093 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-files 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:47:12.110 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-images 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:47:12.119 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-videos 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:47:12.128 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-documents 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:47:12.142 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 公共桶生命周期规则初始化完成，成功设置: 0 个桶
2025-07-12 00:47:12.246 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 数据一致性检查线程池已初始化: coreSize=2, maxSize=5, queueCapacity=100
2025-07-12 00:47:12.255 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 通用异步任务线程池已初始化: coreSize=5, maxSize=10, queueCapacity=200
2025-07-12 00:47:12.345 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-07-12 00:47:12.397 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-07-12 00:47:12.532 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-07-12 00:47:12.805 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-07-12 00:47:12.818 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-12 00:47:12.820 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-12 00:47:12.821 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-07-12 00:47:12.821 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@7ee1ece4]]
2025-07-12 00:47:12.821 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-07-12 00:47:12.830 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Started ImCommunicationSystemApplication in 2.507 seconds (process running for 1789.381)
2025-07-12 00:47:12.831 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 开始配置存储桶访问策略...
2025-07-12 00:47:12.985 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-files
2025-07-12 00:47:12.996 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-images
2025-07-12 00:47:13.006 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-videos
2025-07-12 00:47:13.018 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-audios
2025-07-12 00:47:13.028 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-documents
2025-07-12 00:47:13.039 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-others
2025-07-12 00:47:13.063 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 存储桶访问策略配置完成
2025-07-12 00:47:13.065 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-07-12 00:47:13.740 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-12 00:47:13.740 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-12 00:47:13.742 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-12 00:47:13.771 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:47:13.774 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:47:13.774 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:47:13.774 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:47:40.347 [SpringApplicationShutdownHook] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2025-07-12 00:47:40.348 [SpringApplicationShutdownHook] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@7ee1ece4]]
2025-07-12 00:47:40.348 [SpringApplicationShutdownHook] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2025-07-12 00:47:40.584 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 00:47:40.584 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-07-12 00:47:40.586 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-07-12 00:47:58.052 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-07-12 00:47:58.097 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 23492 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 00:47:58.098 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 00:47:58.131 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-12 00:47:58.132 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-12 00:47:58.852 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:47:58.853 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-12 00:47:59.198 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 336 ms. Found 9 JPA repository interfaces.
2025-07-12 00:47:59.750 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:47:59.752 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-12 00:47:59.790 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.LoginDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:47:59.791 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:47:59.791 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:47:59.793 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:47:59.794 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:47:59.794 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:47:59.795 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.FileUploadRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:47:59.795 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:47:59.796 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:47:59.796 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 35 ms. Found 0 Redis repository interfaces.
2025-07-12 00:48:01.020 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-12 00:48:01.023 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.9] using APR version [1.7.6].
2025-07-12 00:48:01.029 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.5.0 8 Apr 2025]
2025-07-12 00:48:01.048 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-12 00:48:01.051 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-12 00:48:01.052 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-12 00:48:01.126 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-12 00:48:01.127 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2994 ms
2025-07-12 00:48:01.404 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-12 00:48:01.550 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@f036e55
2025-07-12 00:48:01.552 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-12 00:48:01.626 [restartedMain] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://localhost:3307/im_db (MySQL 9.3)
2025-07-12 00:48:01.701 [restartedMain] INFO  o.f.core.internal.command.DbValidate - Successfully validated 12 migrations (execution time 00:00.046s)
2025-07-12 00:48:01.727 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Current version of schema `im_db`: 20250112.005
2025-07-12 00:48:01.732 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Schema `im_db` is up to date. No migration necessary.
2025-07-12 00:48:01.823 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-12 00:48:01.882 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-07-12 00:48:01.916 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-12 00:48:02.156 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-12 00:48:03.024 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-12 00:48:03.062 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 00:48:03.782 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-12 00:48:04.281 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 初始化MinIO客户端，端点: http://localhost:9000, 访问密钥: minioadmin
2025-07-12 00:48:04.509 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO客户端初始化成功
2025-07-12 00:48:04.510 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 开始检查并创建MinIO存储桶...
2025-07-12 00:48:04.734 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO存储桶初始化完成 - 公开存储桶: 6个, 私有存储桶: 6个
2025-07-12 00:48:05.024 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 初始化MinIO服务，开始创建存储桶...
2025-07-12 00:48:05.118 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 所有存储桶初始化成功
2025-07-12 00:48:05.118 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - MinIO服务初始化完成
2025-07-12 00:48:05.218 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 开始初始化公共桶生命周期规则，默认过期天数: 7
2025-07-12 00:48:05.218 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-files 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:48:05.300 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-images 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:48:05.319 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-videos 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:48:05.336 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-documents 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:48:05.358 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 公共桶生命周期规则初始化完成，成功设置: 0 个桶
2025-07-12 00:48:05.550 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 数据一致性检查线程池已初始化: coreSize=2, maxSize=5, queueCapacity=100
2025-07-12 00:48:05.563 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 通用异步任务线程池已初始化: coreSize=5, maxSize=10, queueCapacity=200
2025-07-12 00:48:05.834 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-07-12 00:48:05.954 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-07-12 00:48:06.178 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-07-12 00:48:06.685 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-07-12 00:48:06.732 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-12 00:48:06.758 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-12 00:48:06.760 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-07-12 00:48:06.760 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@3624d2e]]
2025-07-12 00:48:06.761 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-07-12 00:48:06.779 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Started ImCommunicationSystemApplication in 9.292 seconds (process running for 9.937)
2025-07-12 00:48:06.900 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 开始配置存储桶访问策略...
2025-07-12 00:48:06.921 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-files
2025-07-12 00:48:06.958 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-images
2025-07-12 00:48:06.978 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-videos
2025-07-12 00:48:06.997 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-audios
2025-07-12 00:48:07.016 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-documents
2025-07-12 00:48:07.034 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-others
2025-07-12 00:48:07.079 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 存储桶访问策略配置完成
2025-07-12 00:48:13.783 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-12 00:48:13.784 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-12 00:48:13.785 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-12 00:48:13.881 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:48:13.892 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:48:13.892 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:48:13.892 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:48:35.951 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:48:35.954 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:48:35.954 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:48:35.954 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:48:36.927 [http-nio-8080-exec-4] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 00:48:36.930 [http-nio-8080-exec-4] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=2
2025-07-12 00:48:36.964 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:48:36.967 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:48:36.968 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:48:36.968 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:48:37.497 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 2
2025-07-12 00:48:37.498 [http-nio-8080-exec-9] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 2, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:48:37.498 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 2, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 00:48:37.510 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 00:48:37.510 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=24, 名称=202302091675904140211711.jpg, 类型=image, 大小=7125
2025-07-12 00:48:37.511 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 00:48:37.511 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 00:48:37.512 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=7125, typeStats={image=1}
2025-07-12 00:48:37.519 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 2 的所有文件记录数（包括已删除）: 1
2025-07-12 00:48:37.520 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=24, 原始名称=202302091675904140211711.jpg, 是否删除=false, 文件类型=image
2025-07-12 00:48:37.520 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 00:48:37.528 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 00:48:37.530 [http-nio-8080-exec-9] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 00:48:37.531 [http-nio-8080-exec-9] INFO  c.i.i.u.c.FileUploadController - 用户 2 找到 1 个文件
2025-07-12 00:48:38.773 [http-nio-8080-exec-5] INFO  c.i.i.u.s.impl.UserQRCodeServiceImpl - 生成用户二维码: userId=2
2025-07-12 00:48:38.936 [http-nio-8080-exec-5] INFO  c.i.i.u.s.impl.UserQRCodeServiceImpl - 用户二维码生成成功: userId=2
2025-07-12 00:48:44.695 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:48:44.699 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:48:44.700 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:48:44.700 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:48:44.775 [http-nio-8080-exec-2] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=test, currentUserId=2, page=0, size=20
2025-07-12 00:48:44.780 [http-nio-8080-exec-2] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=test, searchType=null, userId=2)
2025-07-12 00:48:44.781 [http-nio-8080-exec-2] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=test, searchType=null, userId=2)
2025-07-12 00:48:44.790 [http-nio-8080-exec-2] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 未找到用户: userIdStr=test
2025-07-12 00:48:44.791 [http-nio-8080-exec-2] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据昵称搜索用户: searchRequest=SearchContactRequest(keyword=test, searchType=null, userId=2)
2025-07-12 00:48:44.827 [http-nio-8080-exec-2] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 昵称搜索完成: nickname=test, 找到1个结果
2025-07-12 00:48:45.760 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 00:48:45.765 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 00:48:45.765 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 00:48:45.766 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 00:48:45.766 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 00:48:45.767 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 00:48:45.768 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 00:48:56.386 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 00:48:56.391 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 00:48:56.391 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 00:48:56.392 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 00:49:06.728 [MessageBroker-8] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 11, active threads = 1, queued tasks = 8, completed tasks = 2]
2025-07-12 00:49:07.265 [http-nio-8080-exec-8] INFO  c.i.i.a.service.impl.AuthServiceImpl - 开始处理密码登录请求: jiapei1219@gmail.com
2025-07-12 00:49:08.119 [http-nio-8080-exec-8] INFO  c.i.i.a.service.AccountLockService - 用户 jiapei1219@gmail.com 无登录失败记录需要清除
2025-07-12 00:49:08.120 [http-nio-8080-exec-8] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户密码验证成功: userId=4, email=jiapei1219@gmail.com
2025-07-12 00:49:08.120 [http-nio-8080-exec-8] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 记录登录设备: userId=4, deviceType=Web, ipAddress=null
2025-07-12 00:49:08.126 [http-nio-8080-exec-8] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 更新现有设备记录: deviceId=6
2025-07-12 00:49:08.147 [http-nio-8080-exec-8] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户选择记住登录状态，设置长期token: userId=4
2025-07-12 00:49:08.147 [http-nio-8080-exec-8] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户登录成功: userId=4, email=jiapei1219@gmail.com, rememberMe=true
2025-07-12 00:52:32.409 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-07-12 00:52:32.417 [Thread-5] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2025-07-12 00:52:32.419 [Thread-5] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@3624d2e]]
2025-07-12 00:52:32.419 [Thread-5] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2025-07-12 00:52:32.421 [Thread-5] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-12 00:52:33.219 [Thread-5] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 00:52:33.224 [Thread-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-12 00:52:33.233 [Thread-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-12 00:52:33.452 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 23492 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 00:52:33.453 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 00:52:33.791 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:52:33.791 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-12 00:52:33.828 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 36 ms. Found 9 JPA repository interfaces.
2025-07-12 00:52:33.928 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:52:33.929 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-12 00:52:33.939 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.LoginDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:52:33.940 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:52:33.940 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:52:33.940 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:52:33.941 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:52:33.942 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:52:33.942 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.FileUploadRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:52:33.942 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:52:33.943 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:52:33.943 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-07-12 00:52:34.079 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-12 00:52:34.079 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.9] using APR version [1.7.6].
2025-07-12 00:52:34.080 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.5.0 8 Apr 2025]
2025-07-12 00:52:34.080 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-12 00:52:34.080 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-12 00:52:34.080 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-12 00:52:34.104 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-12 00:52:34.104 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 649 ms
2025-07-12 00:52:34.186 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-07-12 00:52:34.202 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection com.mysql.cj.jdbc.ConnectionImpl@e383659
2025-07-12 00:52:34.203 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-07-12 00:52:34.258 [restartedMain] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://localhost:3307/im_db (MySQL 9.3)
2025-07-12 00:52:34.296 [restartedMain] INFO  o.f.core.internal.command.DbValidate - Successfully validated 12 migrations (execution time 00:00.021s)
2025-07-12 00:52:34.316 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Current version of schema `im_db`: 20250112.005
2025-07-12 00:52:34.317 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Schema `im_db` is up to date. No migration necessary.
2025-07-12 00:52:34.351 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-12 00:52:34.353 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-12 00:52:34.362 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-12 00:52:34.478 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-12 00:52:34.502 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 00:52:34.827 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 初始化MinIO客户端，端点: http://localhost:9000, 访问密钥: minioadmin
2025-07-12 00:52:34.828 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO客户端初始化成功
2025-07-12 00:52:34.828 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 开始检查并创建MinIO存储桶...
2025-07-12 00:52:34.887 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO存储桶初始化完成 - 公开存储桶: 6个, 私有存储桶: 6个
2025-07-12 00:52:34.949 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 初始化MinIO服务，开始创建存储桶...
2025-07-12 00:52:34.975 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 所有存储桶初始化成功
2025-07-12 00:52:34.976 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - MinIO服务初始化完成
2025-07-12 00:52:34.997 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 开始初始化公共桶生命周期规则，默认过期天数: 7
2025-07-12 00:52:34.997 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-files 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:52:35.007 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-images 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:52:35.014 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-videos 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:52:35.021 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-documents 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:52:35.030 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 公共桶生命周期规则初始化完成，成功设置: 0 个桶
2025-07-12 00:52:35.104 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 数据一致性检查线程池已初始化: coreSize=2, maxSize=5, queueCapacity=100
2025-07-12 00:52:35.110 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 通用异步任务线程池已初始化: coreSize=5, maxSize=10, queueCapacity=200
2025-07-12 00:52:35.190 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-07-12 00:52:35.235 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-07-12 00:52:35.352 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-07-12 00:52:35.630 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-07-12 00:52:35.656 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-12 00:52:35.661 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-12 00:52:35.662 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-07-12 00:52:35.662 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@627dba42]]
2025-07-12 00:52:35.663 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-07-12 00:52:35.677 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Started ImCommunicationSystemApplication in 2.283 seconds (process running for 278.834)
2025-07-12 00:52:35.679 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 开始配置存储桶访问策略...
2025-07-12 00:52:35.695 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-files
2025-07-12 00:52:35.709 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-images
2025-07-12 00:52:35.721 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-videos
2025-07-12 00:52:35.736 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-audios
2025-07-12 00:52:35.754 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-documents
2025-07-12 00:52:35.770 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-others
2025-07-12 00:52:35.803 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 存储桶访问策略配置完成
2025-07-12 00:52:35.806 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-07-12 00:52:39.159 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-07-12 00:52:39.160 [Thread-7] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2025-07-12 00:52:39.161 [Thread-7] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@627dba42]]
2025-07-12 00:52:39.162 [Thread-7] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2025-07-12 00:52:39.162 [Thread-7] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-12 00:52:39.537 [Thread-7] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 00:52:39.538 [Thread-7] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-07-12 00:52:39.541 [Thread-7] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-07-12 00:52:39.707 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 23492 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 00:52:39.707 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 00:52:39.902 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:52:39.902 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-12 00:52:39.941 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 37 ms. Found 9 JPA repository interfaces.
2025-07-12 00:52:40.025 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:52:40.025 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-12 00:52:40.035 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.LoginDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:52:40.036 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:52:40.036 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:52:40.036 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:52:40.036 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:52:40.036 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:52:40.036 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.FileUploadRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:52:40.038 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:52:40.038 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:52:40.039 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2025-07-12 00:52:40.162 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-12 00:52:40.163 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.9] using APR version [1.7.6].
2025-07-12 00:52:40.164 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.5.0 8 Apr 2025]
2025-07-12 00:52:40.165 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-12 00:52:40.165 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-12 00:52:40.165 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-12 00:52:40.188 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-12 00:52:40.189 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 481 ms
2025-07-12 00:52:40.262 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
2025-07-12 00:52:40.271 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Added connection com.mysql.cj.jdbc.ConnectionImpl@a38f461
2025-07-12 00:52:40.271 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
2025-07-12 00:52:40.288 [restartedMain] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://localhost:3307/im_db (MySQL 9.3)
2025-07-12 00:52:40.317 [restartedMain] INFO  o.f.core.internal.command.DbValidate - Successfully validated 12 migrations (execution time 00:00.016s)
2025-07-12 00:52:40.334 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Current version of schema `im_db`: 20250112.005
2025-07-12 00:52:40.336 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Schema `im_db` is up to date. No migration necessary.
2025-07-12 00:52:40.374 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-12 00:52:40.376 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-12 00:52:40.381 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-12 00:52:40.489 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-12 00:52:40.513 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 00:52:40.816 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 初始化MinIO客户端，端点: http://localhost:9000, 访问密钥: minioadmin
2025-07-12 00:52:40.818 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO客户端初始化成功
2025-07-12 00:52:40.818 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 开始检查并创建MinIO存储桶...
2025-07-12 00:52:40.879 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO存储桶初始化完成 - 公开存储桶: 6个, 私有存储桶: 6个
2025-07-12 00:52:40.936 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 初始化MinIO服务，开始创建存储桶...
2025-07-12 00:52:40.961 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 所有存储桶初始化成功
2025-07-12 00:52:40.961 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - MinIO服务初始化完成
2025-07-12 00:52:40.985 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 开始初始化公共桶生命周期规则，默认过期天数: 7
2025-07-12 00:52:40.986 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-files 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:52:40.994 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-images 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:52:41.000 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-videos 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:52:41.005 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-documents 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:52:41.011 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 公共桶生命周期规则初始化完成，成功设置: 0 个桶
2025-07-12 00:52:41.077 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 数据一致性检查线程池已初始化: coreSize=2, maxSize=5, queueCapacity=100
2025-07-12 00:52:41.083 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 通用异步任务线程池已初始化: coreSize=5, maxSize=10, queueCapacity=200
2025-07-12 00:52:41.152 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-07-12 00:52:41.193 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-07-12 00:52:41.305 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-07-12 00:52:41.520 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-07-12 00:52:41.537 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-12 00:52:41.540 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-12 00:52:41.540 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-07-12 00:52:41.540 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@73e3da40]]
2025-07-12 00:52:41.540 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-07-12 00:52:41.547 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Started ImCommunicationSystemApplication in 1.879 seconds (process running for 284.705)
2025-07-12 00:52:41.549 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 开始配置存储桶访问策略...
2025-07-12 00:52:41.561 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-files
2025-07-12 00:52:41.577 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-images
2025-07-12 00:52:41.588 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-videos
2025-07-12 00:52:41.600 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-audios
2025-07-12 00:52:41.610 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-documents
2025-07-12 00:52:41.620 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-others
2025-07-12 00:52:41.638 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 存储桶访问策略配置完成
2025-07-12 00:52:41.639 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-07-12 00:53:00.971 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-12 00:53:00.972 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-12 00:53:00.973 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-12 00:53:14.607 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2025-07-12 00:53:14.610 [Thread-11] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2025-07-12 00:53:14.610 [Thread-11] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@73e3da40]]
2025-07-12 00:53:14.610 [Thread-11] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2025-07-12 00:53:14.611 [Thread-11] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-12 00:53:14.991 [Thread-11] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 00:53:14.991 [Thread-11] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
2025-07-12 00:53:14.995 [Thread-11] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
2025-07-12 00:53:15.182 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 23492 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 00:53:15.183 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 00:53:15.638 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:53:15.638 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-12 00:53:15.767 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 127 ms. Found 9 JPA repository interfaces.
2025-07-12 00:53:15.943 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:53:15.943 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-12 00:53:15.963 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.LoginDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:53:15.965 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:53:15.965 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:53:15.965 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:53:15.966 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:53:15.966 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:53:15.966 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.FileUploadRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:53:15.967 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:53:15.967 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:53:15.967 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23 ms. Found 0 Redis repository interfaces.
2025-07-12 00:53:16.168 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-12 00:53:16.169 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.9] using APR version [1.7.6].
2025-07-12 00:53:16.170 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.5.0 8 Apr 2025]
2025-07-12 00:53:16.170 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-12 00:53:16.170 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-12 00:53:16.171 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-12 00:53:16.206 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-12 00:53:16.207 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1023 ms
2025-07-12 00:53:16.324 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Starting...
2025-07-12 00:53:16.339 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-4 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2772cef0
2025-07-12 00:53:16.340 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Start completed.
2025-07-12 00:53:16.381 [restartedMain] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://localhost:3307/im_db (MySQL 9.3)
2025-07-12 00:53:16.421 [restartedMain] INFO  o.f.core.internal.command.DbValidate - Successfully validated 13 migrations (execution time 00:00.022s)
2025-07-12 00:53:16.445 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Current version of schema `im_db`: 20250112.005
2025-07-12 00:53:16.467 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Migrating schema `im_db` to version "20250112.006 - Fix login devices duplicates final"
2025-07-12 00:53:16.542 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Successfully applied 1 migration to schema `im_db`, now at version v20250112.006 (execution time 00:00.011s)
2025-07-12 00:53:16.608 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-12 00:53:16.612 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-12 00:53:16.622 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-12 00:53:16.762 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-12 00:53:16.791 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 00:53:17.090 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 初始化MinIO客户端，端点: http://localhost:9000, 访问密钥: minioadmin
2025-07-12 00:53:17.091 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO客户端初始化成功
2025-07-12 00:53:17.091 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 开始检查并创建MinIO存储桶...
2025-07-12 00:53:17.151 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO存储桶初始化完成 - 公开存储桶: 6个, 私有存储桶: 6个
2025-07-12 00:53:17.198 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 初始化MinIO服务，开始创建存储桶...
2025-07-12 00:53:17.224 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 所有存储桶初始化成功
2025-07-12 00:53:17.224 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - MinIO服务初始化完成
2025-07-12 00:53:17.244 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 开始初始化公共桶生命周期规则，默认过期天数: 7
2025-07-12 00:53:17.245 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-files 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:53:17.252 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-images 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:53:17.258 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-videos 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:53:17.263 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-documents 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:53:17.270 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 公共桶生命周期规则初始化完成，成功设置: 0 个桶
2025-07-12 00:53:17.345 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 数据一致性检查线程池已初始化: coreSize=2, maxSize=5, queueCapacity=100
2025-07-12 00:53:17.352 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 通用异步任务线程池已初始化: coreSize=5, maxSize=10, queueCapacity=200
2025-07-12 00:53:17.434 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-07-12 00:53:17.480 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-07-12 00:53:17.582 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-07-12 00:53:17.909 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-07-12 00:53:17.937 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-12 00:53:17.942 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-12 00:53:17.943 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-07-12 00:53:17.943 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@44e19b6]]
2025-07-12 00:53:17.944 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-07-12 00:53:17.957 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Started ImCommunicationSystemApplication in 2.816 seconds (process running for 321.116)
2025-07-12 00:53:17.959 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 开始配置存储桶访问策略...
2025-07-12 00:53:17.978 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-files
2025-07-12 00:53:17.995 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-images
2025-07-12 00:53:18.010 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-videos
2025-07-12 00:53:18.037 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-audios
2025-07-12 00:53:18.055 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-documents
2025-07-12 00:53:18.071 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-others
2025-07-12 00:53:18.109 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 存储桶访问策略配置完成
2025-07-12 00:53:18.111 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-07-12 00:53:19.367 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-07-12 00:53:19.370 [Thread-15] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2025-07-12 00:53:19.370 [Thread-15] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@44e19b6]]
2025-07-12 00:53:19.370 [Thread-15] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2025-07-12 00:53:19.371 [Thread-15] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-12 00:53:19.784 [Thread-15] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 00:53:19.785 [Thread-15] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown initiated...
2025-07-12 00:53:19.785 [Thread-15] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown completed.
2025-07-12 00:53:19.915 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 23492 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 00:53:19.915 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 00:53:20.146 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:53:20.147 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-12 00:53:20.191 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44 ms. Found 9 JPA repository interfaces.
2025-07-12 00:53:20.277 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:53:20.277 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-12 00:53:20.288 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.LoginDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:53:20.288 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:53:20.288 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:53:20.289 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:53:20.289 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:53:20.290 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:53:20.290 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.FileUploadRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:53:20.290 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:53:20.290 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:53:20.290 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2025-07-12 00:53:20.415 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-12 00:53:20.416 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.9] using APR version [1.7.6].
2025-07-12 00:53:20.416 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.5.0 8 Apr 2025]
2025-07-12 00:53:20.417 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-12 00:53:20.417 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-12 00:53:20.417 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-12 00:53:20.441 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-12 00:53:20.442 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 526 ms
2025-07-12 00:53:20.534 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Starting...
2025-07-12 00:53:20.545 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-5 - Added connection com.mysql.cj.jdbc.ConnectionImpl@704f36ee
2025-07-12 00:53:20.545 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Start completed.
2025-07-12 00:53:20.570 [restartedMain] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://localhost:3307/im_db (MySQL 9.3)
2025-07-12 00:53:20.613 [restartedMain] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-12 00:53:20.655 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown initiated...
2025-07-12 00:53:20.694 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown completed.
2025-07-12 00:53:20.702 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-12 00:53:22.184 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 23492 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 00:53:22.185 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 00:53:22.380 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:53:22.380 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-12 00:53:22.424 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 43 ms. Found 9 JPA repository interfaces.
2025-07-12 00:53:22.545 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:53:22.545 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-12 00:53:22.557 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.LoginDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:53:22.558 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:53:22.558 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:53:22.558 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:53:22.558 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:53:22.559 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:53:22.559 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.FileUploadRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:53:22.559 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:53:22.559 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:53:22.560 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2025-07-12 00:53:22.711 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-12 00:53:22.712 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.9] using APR version [1.7.6].
2025-07-12 00:53:22.712 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.5.0 8 Apr 2025]
2025-07-12 00:53:22.713 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-12 00:53:22.713 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-12 00:53:22.713 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-12 00:53:22.735 [restartedMain] INFO  o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-12 00:53:22.735 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 548 ms
2025-07-12 00:53:22.809 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Starting...
2025-07-12 00:53:22.821 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-6 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2cce002
2025-07-12 00:53:22.821 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Start completed.
2025-07-12 00:53:22.830 [restartedMain] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://localhost:3307/im_db (MySQL 9.3)
2025-07-12 00:53:22.861 [restartedMain] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-12 00:53:22.907 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown initiated...
2025-07-12 00:53:22.908 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown completed.
2025-07-12 00:53:22.915 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-12 00:53:45.728 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 23492 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 00:53:45.728 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 00:53:45.918 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:53:45.918 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-12 00:53:45.968 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 49 ms. Found 9 JPA repository interfaces.
2025-07-12 00:53:46.044 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:53:46.044 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-12 00:53:46.056 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.LoginDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:53:46.056 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:53:46.056 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:53:46.056 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:53:46.056 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:53:46.057 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:53:46.057 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.FileUploadRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:53:46.058 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:53:46.058 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:53:46.058 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2025-07-12 00:53:46.186 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-12 00:53:46.186 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.9] using APR version [1.7.6].
2025-07-12 00:53:46.187 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.5.0 8 Apr 2025]
2025-07-12 00:53:46.187 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-12 00:53:46.188 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-12 00:53:46.188 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-12 00:53:46.227 [restartedMain] INFO  o.a.c.c.C.[Tomcat-2].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-12 00:53:46.228 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 498 ms
2025-07-12 00:53:46.301 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Starting...
2025-07-12 00:53:46.328 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-7 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1e94df74
2025-07-12 00:53:46.329 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Start completed.
2025-07-12 00:53:46.445 [restartedMain] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://localhost:3307/im_db (MySQL 9.3)
2025-07-12 00:53:46.476 [restartedMain] INFO  o.f.core.internal.command.DbValidate - Successfully validated 13 migrations (execution time 00:00.016s)
2025-07-12 00:53:46.492 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Current version of schema `im_db`: 20250112.006
2025-07-12 00:53:46.495 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Schema `im_db` is up to date. No migration necessary.
2025-07-12 00:53:46.532 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-12 00:53:46.533 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-12 00:53:46.538 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-12 00:53:46.619 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-12 00:53:46.639 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 00:53:46.898 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 初始化MinIO客户端，端点: http://localhost:9000, 访问密钥: minioadmin
2025-07-12 00:53:46.899 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO客户端初始化成功
2025-07-12 00:53:46.899 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 开始检查并创建MinIO存储桶...
2025-07-12 00:53:46.961 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO存储桶初始化完成 - 公开存储桶: 6个, 私有存储桶: 6个
2025-07-12 00:53:47.019 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 初始化MinIO服务，开始创建存储桶...
2025-07-12 00:53:47.044 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 所有存储桶初始化成功
2025-07-12 00:53:47.044 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - MinIO服务初始化完成
2025-07-12 00:53:47.063 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 开始初始化公共桶生命周期规则，默认过期天数: 7
2025-07-12 00:53:47.063 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-files 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:53:47.070 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-images 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:53:47.077 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-videos 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:53:47.083 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-documents 设置临时文件生命周期规则，过期天数: 7
2025-07-12 00:53:47.090 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 公共桶生命周期规则初始化完成，成功设置: 0 个桶
2025-07-12 00:53:47.153 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 数据一致性检查线程池已初始化: coreSize=2, maxSize=5, queueCapacity=100
2025-07-12 00:53:47.159 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 通用异步任务线程池已初始化: coreSize=5, maxSize=10, queueCapacity=200
2025-07-12 00:53:47.228 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-07-12 00:53:47.268 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-07-12 00:53:47.366 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-07-12 00:53:47.589 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-07-12 00:53:47.600 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-12 00:53:47.603 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-12 00:53:47.603 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-07-12 00:53:47.604 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@598133e9]]
2025-07-12 00:53:47.604 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-07-12 00:53:47.612 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Started ImCommunicationSystemApplication in 1.904 seconds (process running for 350.77)
2025-07-12 00:53:47.614 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 开始配置存储桶访问策略...
2025-07-12 00:53:47.627 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-files
2025-07-12 00:53:47.639 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-images
2025-07-12 00:53:47.652 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-videos
2025-07-12 00:53:47.663 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-audios
2025-07-12 00:53:47.675 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-documents
2025-07-12 00:53:47.687 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-others
2025-07-12 00:53:47.712 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 存储桶访问策略配置完成
2025-07-12 00:53:47.713 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-07-12 00:54:00.967 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat-2].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-12 00:54:00.967 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-12 00:54:00.969 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-07-12 00:54:13.865 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2025-07-12 00:54:13.868 [Thread-19] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2025-07-12 00:54:13.868 [Thread-19] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@598133e9]]
2025-07-12 00:54:13.868 [Thread-19] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2025-07-12 00:54:13.869 [Thread-19] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-12 00:54:14.138 [Thread-19] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 00:54:14.139 [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown initiated...
2025-07-12 00:54:14.140 [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown completed.
2025-07-12 00:54:14.262 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 23492 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 00:54:14.262 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 00:54:14.437 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:54:14.438 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-12 00:54:14.478 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 39 ms. Found 9 JPA repository interfaces.
2025-07-12 00:54:14.556 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:54:14.556 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-12 00:54:14.568 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.LoginDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:54:14.568 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:54:14.568 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:54:14.569 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:54:14.569 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:54:14.569 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:54:14.569 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.FileUploadRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:54:14.569 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:54:14.570 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:54:14.570 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-07-12 00:54:14.694 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-12 00:54:14.694 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.9] using APR version [1.7.6].
2025-07-12 00:54:14.695 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.5.0 8 Apr 2025]
2025-07-12 00:54:14.695 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-12 00:54:14.695 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-12 00:54:14.696 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-12 00:54:14.724 [restartedMain] INFO  o.a.c.c.C.[Tomcat-2].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-12 00:54:14.725 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 462 ms
2025-07-12 00:54:14.868 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Starting...
2025-07-12 00:54:14.887 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-8 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1dc598dc
2025-07-12 00:54:14.887 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Start completed.
2025-07-12 00:54:14.906 [restartedMain] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://localhost:3307/im_db (MySQL 9.3)
2025-07-12 00:54:14.966 [restartedMain] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-12 00:54:15.063 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Shutdown initiated...
2025-07-12 00:54:15.114 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Shutdown completed.
2025-07-12 00:54:15.138 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-12 00:54:19.753 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 23492 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 00:54:19.753 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 00:54:20.094 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:54:20.094 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-12 00:54:20.153 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 57 ms. Found 9 JPA repository interfaces.
2025-07-12 00:54:20.279 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:54:20.279 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-12 00:54:20.295 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.LoginDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:54:20.296 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:54:20.296 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:54:20.296 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:54:20.297 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:54:20.297 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:54:20.297 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.FileUploadRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:54:20.297 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:54:20.299 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:54:20.299 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.
2025-07-12 00:54:20.487 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-12 00:54:20.487 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.9] using APR version [1.7.6].
2025-07-12 00:54:20.489 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.5.0 8 Apr 2025]
2025-07-12 00:54:20.489 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-12 00:54:20.489 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-12 00:54:20.490 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-12 00:54:20.531 [restartedMain] INFO  o.a.c.c.C.[Tomcat-3].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-12 00:54:20.532 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 777 ms
2025-07-12 00:54:20.683 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-9 - Starting...
2025-07-12 00:54:20.701 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-9 - Added connection com.mysql.cj.jdbc.ConnectionImpl@75911bdf
2025-07-12 00:54:20.702 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-9 - Start completed.
2025-07-12 00:54:20.777 [restartedMain] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://localhost:3307/im_db (MySQL 9.3)
2025-07-12 00:54:20.823 [restartedMain] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-12 00:54:20.893 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-9 - Shutdown initiated...
2025-07-12 00:54:20.947 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-9 - Shutdown completed.
2025-07-12 00:54:20.953 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-12 00:54:24.490 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 23492 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 00:54:24.490 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 00:54:24.709 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:54:24.709 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-12 00:54:24.766 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 56 ms. Found 9 JPA repository interfaces.
2025-07-12 00:54:24.949 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:54:24.949 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-12 00:54:24.982 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.LoginDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:54:24.983 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:54:24.984 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:54:24.984 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:54:24.985 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:54:24.985 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:54:24.985 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.FileUploadRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:54:24.986 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:54:24.986 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:54:24.986 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 37 ms. Found 0 Redis repository interfaces.
2025-07-12 00:54:25.263 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-12 00:54:25.263 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.9] using APR version [1.7.6].
2025-07-12 00:54:25.264 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.5.0 8 Apr 2025]
2025-07-12 00:54:25.265 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-12 00:54:25.265 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-12 00:54:25.266 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-12 00:54:25.314 [restartedMain] INFO  o.a.c.c.C.[Tomcat-4].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-12 00:54:25.314 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 822 ms
2025-07-12 00:54:25.440 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-10 - Starting...
2025-07-12 00:54:25.453 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-10 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3706071
2025-07-12 00:54:25.453 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-10 - Start completed.
2025-07-12 00:54:25.474 [restartedMain] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://localhost:3307/im_db (MySQL 9.3)
2025-07-12 00:54:25.550 [restartedMain] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-12 00:54:25.661 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-10 - Shutdown initiated...
2025-07-12 00:54:25.718 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-10 - Shutdown completed.
2025-07-12 00:54:25.741 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-12 00:54:53.494 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-07-12 00:54:53.529 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 9988 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 00:54:53.532 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 00:54:53.573 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-12 00:54:53.573 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-12 00:54:54.372 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:54:54.373 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-12 00:54:54.510 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 131 ms. Found 9 JPA repository interfaces.
2025-07-12 00:54:54.837 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:54:54.839 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-12 00:54:54.870 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.LoginDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:54:54.871 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:54:54.872 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:54:54.874 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:54:54.874 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:54:54.875 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:54:54.875 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.FileUploadRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:54:54.876 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:54:54.876 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:54:54.877 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 31 ms. Found 0 Redis repository interfaces.
2025-07-12 00:54:55.921 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-12 00:54:55.932 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.9] using APR version [1.7.6].
2025-07-12 00:54:55.938 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.5.0 8 Apr 2025]
2025-07-12 00:54:55.953 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-12 00:54:55.956 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-12 00:54:55.956 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-12 00:54:56.037 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-12 00:54:56.039 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2463 ms
2025-07-12 00:54:56.350 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-12 00:54:56.532 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@f036e55
2025-07-12 00:54:56.534 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-12 00:54:56.654 [restartedMain] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://localhost:3307/im_db (MySQL 9.3)
2025-07-12 00:54:56.820 [restartedMain] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-12 00:54:56.848 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-12 00:54:56.904 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-12 00:54:56.919 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-12 00:55:55.630 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-07-12 00:55:55.715 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 28644 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 00:55:55.716 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 00:55:55.822 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-12 00:55:55.822 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-12 00:55:57.085 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:55:57.086 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-12 00:55:57.347 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 245 ms. Found 9 JPA repository interfaces.
2025-07-12 00:55:57.902 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:55:57.904 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-12 00:55:57.939 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.LoginDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:55:57.939 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:55:57.940 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:55:57.940 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:55:57.941 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:55:57.941 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:55:57.942 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.FileUploadRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:55:57.942 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:55:57.943 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:55:57.943 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 31 ms. Found 0 Redis repository interfaces.
2025-07-12 00:55:58.949 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-12 00:55:58.952 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.9] using APR version [1.7.6].
2025-07-12 00:55:58.955 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.5.0 8 Apr 2025]
2025-07-12 00:55:58.963 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-12 00:55:58.965 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-12 00:55:58.965 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-12 00:55:59.019 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-12 00:55:59.020 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3195 ms
2025-07-12 00:55:59.238 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-12 00:55:59.357 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@74d8c9cf
2025-07-12 00:55:59.359 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-12 00:55:59.401 [restartedMain] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://localhost:3307/im_db (MySQL 9.3)
2025-07-12 00:55:59.474 [restartedMain] INFO  o.f.core.internal.command.DbValidate - Successfully validated 14 migrations (execution time 00:00.041s)
2025-07-12 00:55:59.507 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Current version of schema `im_db`: 20250112.005
2025-07-12 00:55:59.527 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Migrating schema `im_db` to version "20250112.007 - Fix login devices duplicates final"
2025-07-12 00:55:59.607 [restartedMain] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-12 00:55:59.630 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-12 00:55:59.673 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-12 00:55:59.684 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-12 00:57:52.866 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-07-12 00:57:52.920 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 37596 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 00:57:52.921 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 00:57:52.984 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-12 00:57:52.984 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-12 00:57:53.916 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:57:53.916 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-12 00:57:54.104 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 180 ms. Found 9 JPA repository interfaces.
2025-07-12 00:57:54.573 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:57:54.574 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-12 00:57:54.618 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.LoginDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:57:54.618 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:57:54.619 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:57:54.621 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:57:54.622 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:57:54.623 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:57:54.623 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.FileUploadRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:57:54.623 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:57:54.623 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:57:54.624 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 38 ms. Found 0 Redis repository interfaces.
2025-07-12 00:57:55.538 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-12 00:57:55.541 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.9] using APR version [1.7.6].
2025-07-12 00:57:55.545 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.5.0 8 Apr 2025]
2025-07-12 00:57:55.556 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-12 00:57:55.558 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-12 00:57:55.558 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-12 00:57:55.632 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-12 00:57:55.634 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2648 ms
2025-07-12 00:57:56.005 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-12 00:57:56.175 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@49e2508b
2025-07-12 00:57:56.177 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-12 00:57:56.240 [restartedMain] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://localhost:3307/im_db (MySQL 9.3)
2025-07-12 00:57:56.361 [restartedMain] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-12 00:57:56.387 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-12 00:57:56.445 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-12 00:57:56.458 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-12 00:59:01.554 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-07-12 00:59:01.630 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 10740 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 00:59:01.631 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 00:59:01.700 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-12 00:59:01.701 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-12 00:59:02.962 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:59:02.962 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-12 00:59:03.150 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 179 ms. Found 9 JPA repository interfaces.
2025-07-12 00:59:03.543 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 00:59:03.544 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-12 00:59:03.575 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.LoginDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:59:03.576 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:59:03.576 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:59:03.577 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:59:03.578 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:59:03.578 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:59:03.578 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.FileUploadRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:59:03.578 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:59:03.578 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 00:59:03.579 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 26 ms. Found 0 Redis repository interfaces.
2025-07-12 00:59:04.457 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-12 00:59:04.460 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.9] using APR version [1.7.6].
2025-07-12 00:59:04.464 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.5.0 8 Apr 2025]
2025-07-12 00:59:04.471 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-12 00:59:04.474 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-12 00:59:04.475 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-12 00:59:04.529 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-12 00:59:04.530 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2827 ms
2025-07-12 00:59:04.835 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-12 00:59:05.067 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@532e3cd8
2025-07-12 00:59:05.071 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-12 00:59:05.180 [restartedMain] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://localhost:3307/im_db (MySQL 9.3)
2025-07-12 00:59:05.348 [restartedMain] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-12 00:59:05.409 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-12 00:59:05.456 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-12 00:59:05.476 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-12 01:01:04.014 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-07-12 01:01:04.046 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 14828 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 01:01:04.047 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 01:01:04.080 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-12 01:01:04.080 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-12 01:01:04.729 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 01:01:04.730 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-12 01:01:04.865 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 126 ms. Found 9 JPA repository interfaces.
2025-07-12 01:01:05.198 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 01:01:06.014 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-12 01:01:06.053 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.LoginDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:01:06.054 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:01:06.054 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:01:06.055 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:01:06.056 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:01:06.056 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:01:06.056 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.FileUploadRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:01:06.057 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:01:06.058 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:01:06.059 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 33 ms. Found 0 Redis repository interfaces.
2025-07-12 01:01:07.557 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-12 01:01:07.563 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.9] using APR version [1.7.6].
2025-07-12 01:01:07.569 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.5.0 8 Apr 2025]
2025-07-12 01:01:07.597 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-12 01:01:07.602 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-12 01:01:07.603 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-12 01:01:07.667 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-12 01:01:07.669 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3588 ms
2025-07-12 01:01:07.932 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-12 01:01:08.068 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@49e2508b
2025-07-12 01:01:08.070 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-12 01:01:08.138 [restartedMain] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://localhost:3307/im_db (MySQL 9.3)
2025-07-12 01:01:08.220 [restartedMain] INFO  o.f.core.internal.command.DbValidate - Successfully validated 14 migrations (execution time 00:00.049s)
2025-07-12 01:01:08.247 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Current version of schema `im_db`: 20250112.005
2025-07-12 01:01:08.266 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Migrating schema `im_db` to version "20250112.008 - Clean login devices duplicates"
2025-07-12 01:01:08.539 [restartedMain] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-12 01:01:08.564 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-12 01:01:08.571 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-12 01:01:08.582 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-12 01:05:22.066 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-07-12 01:05:22.118 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 34512 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 01:05:22.118 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 01:05:22.172 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-12 01:05:22.173 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-12 01:05:23.214 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 01:05:23.215 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-12 01:05:23.435 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 207 ms. Found 9 JPA repository interfaces.
2025-07-12 01:05:23.907 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 01:05:23.908 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-12 01:05:23.948 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.LoginDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:05:23.948 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:05:23.950 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:05:23.950 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:05:23.951 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:05:23.952 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:05:23.952 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.FileUploadRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:05:23.952 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:05:23.952 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:05:23.953 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 35 ms. Found 0 Redis repository interfaces.
2025-07-12 01:05:24.890 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-12 01:05:24.894 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.9] using APR version [1.7.6].
2025-07-12 01:05:24.899 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.5.0 8 Apr 2025]
2025-07-12 01:05:24.910 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-12 01:05:24.913 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-12 01:05:24.913 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-12 01:05:24.988 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-12 01:05:24.989 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2815 ms
2025-07-12 01:05:25.279 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-12 01:05:25.449 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6a91f41e
2025-07-12 01:05:25.452 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-12 01:05:25.523 [restartedMain] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://localhost:3307/im_db (MySQL 9.3)
2025-07-12 01:05:25.621 [restartedMain] INFO  o.f.core.internal.command.DbValidate - Successfully validated 14 migrations (execution time 00:00.060s)
2025-07-12 01:05:25.652 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Current version of schema `im_db`: 20250112.009
2025-07-12 01:05:25.657 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Schema `im_db` is up to date. No migration necessary.
2025-07-12 01:05:25.766 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-12 01:05:25.816 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-07-12 01:05:25.844 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-12 01:05:26.104 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-12 01:05:27.330 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-12 01:05:27.402 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 01:05:28.282 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-12 01:05:28.670 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 初始化MinIO客户端，端点: http://localhost:9000, 访问密钥: minioadmin
2025-07-12 01:05:28.847 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO客户端初始化成功
2025-07-12 01:05:28.848 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 开始检查并创建MinIO存储桶...
2025-07-12 01:05:29.060 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO存储桶初始化完成 - 公开存储桶: 6个, 私有存储桶: 6个
2025-07-12 01:05:29.229 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 初始化MinIO服务，开始创建存储桶...
2025-07-12 01:05:29.259 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 所有存储桶初始化成功
2025-07-12 01:05:29.259 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - MinIO服务初始化完成
2025-07-12 01:05:29.294 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 开始初始化公共桶生命周期规则，默认过期天数: 7
2025-07-12 01:05:29.294 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-files 设置临时文件生命周期规则，过期天数: 7
2025-07-12 01:05:29.329 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-images 设置临时文件生命周期规则，过期天数: 7
2025-07-12 01:05:29.339 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-videos 设置临时文件生命周期规则，过期天数: 7
2025-07-12 01:05:29.347 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-documents 设置临时文件生命周期规则，过期天数: 7
2025-07-12 01:05:29.357 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 公共桶生命周期规则初始化完成，成功设置: 0 个桶
2025-07-12 01:05:29.453 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 数据一致性检查线程池已初始化: coreSize=2, maxSize=5, queueCapacity=100
2025-07-12 01:05:29.459 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 通用异步任务线程池已初始化: coreSize=5, maxSize=10, queueCapacity=200
2025-07-12 01:05:29.635 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-07-12 01:05:29.757 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-07-12 01:05:29.959 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-07-12 01:05:30.472 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-07-12 01:05:30.519 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-12 01:05:30.535 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-12 01:05:30.537 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-07-12 01:05:30.537 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@1a933caf]]
2025-07-12 01:05:30.538 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-07-12 01:05:30.552 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Started ImCommunicationSystemApplication in 8.992 seconds (process running for 9.321)
2025-07-12 01:05:30.656 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 开始配置存储桶访问策略...
2025-07-12 01:05:30.680 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-files
2025-07-12 01:05:30.717 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-images
2025-07-12 01:05:30.732 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-videos
2025-07-12 01:05:30.918 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-audios
2025-07-12 01:05:30.932 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-documents
2025-07-12 01:05:30.947 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-others
2025-07-12 01:05:30.984 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 存储桶访问策略配置完成
2025-07-12 01:06:00.980 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-12 01:06:00.980 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-12 01:06:00.982 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-07-12 01:06:23.444 [http-nio-8080-exec-2] INFO  c.i.i.a.service.impl.AuthServiceImpl - 开始处理密码登录请求: jiapei1219@gmail.com
2025-07-12 01:06:23.787 [http-nio-8080-exec-2] INFO  c.i.i.a.service.AccountLockService - 用户 jiapei1219@gmail.com 无登录失败记录需要清除
2025-07-12 01:06:23.788 [http-nio-8080-exec-2] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户密码验证成功: userId=4, email=jiapei1219@gmail.com
2025-07-12 01:06:23.789 [http-nio-8080-exec-2] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 记录登录设备: userId=4, deviceType=Web, ipAddress=null
2025-07-12 01:06:23.793 [http-nio-8080-exec-2] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 更新现有设备记录: deviceId=6
2025-07-12 01:06:23.816 [http-nio-8080-exec-2] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户选择记住登录状态，设置长期token: userId=4
2025-07-12 01:06:23.816 [http-nio-8080-exec-2] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户登录成功: userId=4, email=jiapei1219@gmail.com, rememberMe=true
2025-07-12 01:06:30.507 [MessageBroker-2] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 11, active threads = 1, queued tasks = 8, completed tasks = 2]
2025-07-12 01:11:06.503 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2025-07-12 01:11:06.509 [Thread-5] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2025-07-12 01:11:06.509 [Thread-5] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@1a933caf]]
2025-07-12 01:11:06.509 [Thread-5] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2025-07-12 01:11:06.510 [Thread-5] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-12 01:11:06.775 [Thread-5] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 01:11:06.778 [Thread-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-12 01:11:06.783 [Thread-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-12 01:11:06.903 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 34512 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 01:11:06.903 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 01:11:07.143 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 01:11:07.144 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-12 01:11:07.241 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 96 ms. Found 9 JPA repository interfaces.
2025-07-12 01:11:07.399 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 01:11:07.399 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-12 01:11:07.414 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.LoginDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:11:07.415 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:11:07.416 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:11:07.416 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:11:07.416 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:11:07.417 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:11:07.417 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.FileUploadRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:11:07.417 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:11:07.419 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:11:07.419 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.
2025-07-12 01:11:07.583 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-12 01:11:07.584 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.9] using APR version [1.7.6].
2025-07-12 01:11:07.585 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.5.0 8 Apr 2025]
2025-07-12 01:11:07.585 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-12 01:11:07.585 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-12 01:11:07.586 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-12 01:11:07.612 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-12 01:11:07.612 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 707 ms
2025-07-12 01:11:07.697 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-07-12 01:11:07.710 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection com.mysql.cj.jdbc.ConnectionImpl@19afdd52
2025-07-12 01:11:07.711 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-07-12 01:11:07.722 [restartedMain] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://localhost:3307/im_db (MySQL 9.3)
2025-07-12 01:11:07.747 [restartedMain] INFO  o.f.core.internal.command.DbValidate - Successfully validated 14 migrations (execution time 00:00.013s)
2025-07-12 01:11:07.775 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Current version of schema `im_db`: 20250112.009
2025-07-12 01:11:07.777 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Schema `im_db` is up to date. No migration necessary.
2025-07-12 01:11:07.820 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-12 01:11:07.822 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-12 01:11:07.831 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-12 01:11:07.947 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-12 01:11:07.966 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 01:11:08.293 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 初始化MinIO客户端，端点: http://localhost:9000, 访问密钥: minioadmin
2025-07-12 01:11:08.294 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO客户端初始化成功
2025-07-12 01:11:08.294 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 开始检查并创建MinIO存储桶...
2025-07-12 01:11:08.351 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO存储桶初始化完成 - 公开存储桶: 6个, 私有存储桶: 6个
2025-07-12 01:11:08.407 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 初始化MinIO服务，开始创建存储桶...
2025-07-12 01:11:08.432 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 所有存储桶初始化成功
2025-07-12 01:11:08.433 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - MinIO服务初始化完成
2025-07-12 01:11:08.460 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 开始初始化公共桶生命周期规则，默认过期天数: 7
2025-07-12 01:11:08.462 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-files 设置临时文件生命周期规则，过期天数: 7
2025-07-12 01:11:08.470 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-images 设置临时文件生命周期规则，过期天数: 7
2025-07-12 01:11:08.477 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-videos 设置临时文件生命周期规则，过期天数: 7
2025-07-12 01:11:08.483 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-documents 设置临时文件生命周期规则，过期天数: 7
2025-07-12 01:11:08.491 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 公共桶生命周期规则初始化完成，成功设置: 0 个桶
2025-07-12 01:11:08.559 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 数据一致性检查线程池已初始化: coreSize=2, maxSize=5, queueCapacity=100
2025-07-12 01:11:08.564 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 通用异步任务线程池已初始化: coreSize=5, maxSize=10, queueCapacity=200
2025-07-12 01:11:08.675 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-07-12 01:11:08.716 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-07-12 01:11:08.821 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-07-12 01:11:09.084 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-07-12 01:11:09.107 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-12 01:11:09.111 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-12 01:11:09.112 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-07-12 01:11:09.112 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@60c50b5d]]
2025-07-12 01:11:09.112 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-07-12 01:11:09.121 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Started ImCommunicationSystemApplication in 2.248 seconds (process running for 347.89)
2025-07-12 01:11:09.123 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 开始配置存储桶访问策略...
2025-07-12 01:11:09.137 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-files
2025-07-12 01:11:09.151 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-images
2025-07-12 01:11:09.166 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-videos
2025-07-12 01:11:09.185 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-audios
2025-07-12 01:11:09.205 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-documents
2025-07-12 01:11:09.223 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-others
2025-07-12 01:11:09.255 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 存储桶访问策略配置完成
2025-07-12 01:11:09.259 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-07-12 01:11:32.266 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 188 class path changes (0 additions, 188 deletions, 0 modifications)
2025-07-12 01:11:32.269 [Thread-7] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2025-07-12 01:11:32.269 [Thread-7] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@60c50b5d]]
2025-07-12 01:11:32.269 [Thread-7] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2025-07-12 01:11:32.270 [Thread-7] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-12 01:11:32.612 [Thread-7] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 01:11:32.613 [Thread-7] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-07-12 01:11:32.615 [Thread-7] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-07-12 01:11:32.805 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 34512 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 01:11:32.806 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 01:11:41.748 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 34512 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 01:11:41.748 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 01:11:41.957 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 01:11:41.957 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-12 01:11:41.994 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 37 ms. Found 9 JPA repository interfaces.
2025-07-12 01:11:42.088 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 01:11:42.088 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-12 01:11:42.098 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.LoginDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:11:42.099 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:11:42.099 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:11:42.099 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:11:42.100 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:11:42.100 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:11:42.100 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.FileUploadRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:11:42.100 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:11:42.100 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:11:42.101 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2025-07-12 01:11:42.219 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-12 01:11:42.219 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.9] using APR version [1.7.6].
2025-07-12 01:11:42.220 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.5.0 8 Apr 2025]
2025-07-12 01:11:42.220 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-12 01:11:42.221 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-12 01:11:42.221 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-12 01:11:42.243 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-12 01:11:42.244 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 494 ms
2025-07-12 01:11:42.356 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
2025-07-12 01:11:42.371 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5596f456
2025-07-12 01:11:42.371 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
2025-07-12 01:11:42.382 [restartedMain] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://localhost:3307/im_db (MySQL 9.3)
2025-07-12 01:11:42.420 [restartedMain] INFO  o.f.core.internal.command.DbValidate - Successfully validated 14 migrations (execution time 00:00.018s)
2025-07-12 01:11:42.443 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Current version of schema `im_db`: 20250112.009
2025-07-12 01:11:42.445 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Schema `im_db` is up to date. No migration necessary.
2025-07-12 01:11:42.498 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-12 01:11:42.502 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-12 01:11:42.514 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-12 01:11:42.765 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-12 01:11:42.797 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 01:11:43.361 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 初始化MinIO客户端，端点: http://localhost:9000, 访问密钥: minioadmin
2025-07-12 01:11:43.363 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO客户端初始化成功
2025-07-12 01:11:43.363 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 开始检查并创建MinIO存储桶...
2025-07-12 01:11:43.496 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO存储桶初始化完成 - 公开存储桶: 6个, 私有存储桶: 6个
2025-07-12 01:11:43.615 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 初始化MinIO服务，开始创建存储桶...
2025-07-12 01:11:43.667 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 所有存储桶初始化成功
2025-07-12 01:11:43.667 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - MinIO服务初始化完成
2025-07-12 01:11:43.721 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 开始初始化公共桶生命周期规则，默认过期天数: 7
2025-07-12 01:11:43.721 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-files 设置临时文件生命周期规则，过期天数: 7
2025-07-12 01:11:43.735 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-images 设置临时文件生命周期规则，过期天数: 7
2025-07-12 01:11:43.747 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-videos 设置临时文件生命周期规则，过期天数: 7
2025-07-12 01:11:43.761 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-documents 设置临时文件生命周期规则，过期天数: 7
2025-07-12 01:11:43.776 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 公共桶生命周期规则初始化完成，成功设置: 0 个桶
2025-07-12 01:11:43.901 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 数据一致性检查线程池已初始化: coreSize=2, maxSize=5, queueCapacity=100
2025-07-12 01:11:43.917 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 通用异步任务线程池已初始化: coreSize=5, maxSize=10, queueCapacity=200
2025-07-12 01:11:44.079 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-07-12 01:11:44.173 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-07-12 01:11:44.433 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-07-12 01:11:44.724 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-07-12 01:11:44.739 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-12 01:11:44.743 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-12 01:11:44.744 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-07-12 01:11:44.744 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@569b3beb]]
2025-07-12 01:11:44.744 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-07-12 01:11:44.755 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Started ImCommunicationSystemApplication in 3.026 seconds (process running for 383.524)
2025-07-12 01:11:44.755 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 开始配置存储桶访问策略...
2025-07-12 01:11:44.771 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-files
2025-07-12 01:11:44.784 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-images
2025-07-12 01:11:44.797 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-07-12 01:11:44.802 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-videos
2025-07-12 01:11:44.820 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-audios
2025-07-12 01:11:44.838 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 1212 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 01:11:44.839 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - The following 1 profile is active: "dev"
2025-07-12 01:11:44.846 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-documents
2025-07-12 01:11:44.864 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-others
2025-07-12 01:11:44.876 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-12 01:11:44.877 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-12 01:11:44.887 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 存储桶访问策略配置完成
2025-07-12 01:11:44.889 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-07-12 01:11:45.555 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 01:11:45.563 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-12 01:11:45.840 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 265 ms. Found 9 JPA repository interfaces.
2025-07-12 01:11:46.398 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 01:11:46.401 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-12 01:11:46.443 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.LoginDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:11:46.444 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:11:46.444 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:11:46.445 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:11:46.446 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:11:46.447 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:11:46.447 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.FileUploadRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:11:46.448 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:11:46.448 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:11:46.449 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 36 ms. Found 0 Redis repository interfaces.
2025-07-12 01:11:47.801 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-12 01:11:47.805 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.9] using APR version [1.7.6].
2025-07-12 01:11:47.814 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.5.0 8 Apr 2025]
2025-07-12 01:11:47.825 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-12 01:11:47.828 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-12 01:11:47.829 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-12 01:11:47.882 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-12 01:11:47.883 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3005 ms
2025-07-12 01:11:48.141 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-12 01:11:48.273 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@338356b1
2025-07-12 01:11:48.274 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-12 01:11:48.334 [restartedMain] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://localhost:3307/im_db (MySQL 9.3)
2025-07-12 01:11:48.398 [restartedMain] INFO  o.f.core.internal.command.DbValidate - Successfully validated 14 migrations (execution time 00:00.038s)
2025-07-12 01:11:48.421 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Current version of schema `im_db`: 20250112.009
2025-07-12 01:11:48.425 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Schema `im_db` is up to date. No migration necessary.
2025-07-12 01:11:48.524 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-12 01:11:48.606 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-07-12 01:11:48.650 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-12 01:11:49.043 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-12 01:11:50.506 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-12 01:11:50.566 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 01:11:51.442 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-12 01:11:51.805 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 初始化MinIO客户端，端点: http://localhost:9000, 访问密钥: minioadmin
2025-07-12 01:11:52.115 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO客户端初始化成功
2025-07-12 01:11:52.115 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 开始检查并创建MinIO存储桶...
2025-07-12 01:11:52.282 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO存储桶初始化完成 - 公开存储桶: 6个, 私有存储桶: 6个
2025-07-12 01:11:52.435 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 初始化MinIO服务，开始创建存储桶...
2025-07-12 01:11:52.464 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 所有存储桶初始化成功
2025-07-12 01:11:52.464 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - MinIO服务初始化完成
2025-07-12 01:11:52.495 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 开始初始化公共桶生命周期规则，默认过期天数: 7
2025-07-12 01:11:52.495 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-files 设置临时文件生命周期规则，过期天数: 7
2025-07-12 01:11:52.523 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-images 设置临时文件生命周期规则，过期天数: 7
2025-07-12 01:11:52.532 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-videos 设置临时文件生命周期规则，过期天数: 7
2025-07-12 01:11:52.539 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-documents 设置临时文件生命周期规则，过期天数: 7
2025-07-12 01:11:52.547 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 公共桶生命周期规则初始化完成，成功设置: 0 个桶
2025-07-12 01:11:52.636 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 数据一致性检查线程池已初始化: coreSize=2, maxSize=5, queueCapacity=100
2025-07-12 01:11:52.643 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 通用异步任务线程池已初始化: coreSize=5, maxSize=10, queueCapacity=200
2025-07-12 01:11:52.821 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-07-12 01:11:52.940 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-07-12 01:11:53.136 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-07-12 01:11:53.662 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-12 01:11:53.687 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 01:11:53.690 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-12 01:11:53.696 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-12 01:11:53.772 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-12 01:12:00.911 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-12 01:12:00.911 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-12 01:12:00.912 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-12 01:24:16.609 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-07-12 01:24:16.666 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 14128 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 01:24:16.667 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 01:24:16.717 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-12 01:24:16.717 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-12 01:24:17.549 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 01:24:17.550 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-12 01:24:17.710 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 151 ms. Found 9 JPA repository interfaces.
2025-07-12 01:24:18.155 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 01:24:18.157 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-12 01:24:18.189 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.LoginDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:24:18.190 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:24:18.190 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:24:18.191 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:24:18.191 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:24:18.192 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:24:18.192 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.FileUploadRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:24:18.192 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:24:18.193 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:24:18.193 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 26 ms. Found 0 Redis repository interfaces.
2025-07-12 01:24:19.074 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-12 01:24:19.077 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.9] using APR version [1.7.6].
2025-07-12 01:24:19.094 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.5.0 8 Apr 2025]
2025-07-12 01:24:19.105 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-12 01:24:19.129 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-12 01:24:19.129 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-12 01:24:19.184 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-12 01:24:19.185 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2467 ms
2025-07-12 01:24:19.404 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-12 01:24:19.536 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4b94486c
2025-07-12 01:24:19.538 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-12 01:24:19.628 [restartedMain] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://localhost:3307/im_db (MySQL 9.3)
2025-07-12 01:24:19.714 [restartedMain] INFO  o.f.core.internal.command.DbValidate - Successfully validated 14 migrations (execution time 00:00.051s)
2025-07-12 01:24:19.741 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Current version of schema `im_db`: 20250112.009
2025-07-12 01:24:19.746 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Schema `im_db` is up to date. No migration necessary.
2025-07-12 01:24:19.824 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-12 01:24:19.878 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-07-12 01:24:19.908 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-12 01:24:20.137 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-12 01:24:20.880 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-12 01:24:20.929 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 01:24:21.590 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-12 01:24:21.980 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 初始化MinIO客户端，端点: http://localhost:9000, 访问密钥: minioadmin
2025-07-12 01:24:22.155 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO客户端初始化成功
2025-07-12 01:24:22.155 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 开始检查并创建MinIO存储桶...
2025-07-12 01:24:22.324 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO存储桶初始化完成 - 公开存储桶: 6个, 私有存储桶: 6个
2025-07-12 01:24:22.460 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 初始化MinIO服务，开始创建存储桶...
2025-07-12 01:24:22.488 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 所有存储桶初始化成功
2025-07-12 01:24:22.488 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - MinIO服务初始化完成
2025-07-12 01:24:22.517 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 开始初始化公共桶生命周期规则，默认过期天数: 7
2025-07-12 01:24:22.517 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-files 设置临时文件生命周期规则，过期天数: 7
2025-07-12 01:24:22.555 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-images 设置临时文件生命周期规则，过期天数: 7
2025-07-12 01:24:22.565 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-videos 设置临时文件生命周期规则，过期天数: 7
2025-07-12 01:24:22.574 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-documents 设置临时文件生命周期规则，过期天数: 7
2025-07-12 01:24:22.583 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 公共桶生命周期规则初始化完成，成功设置: 0 个桶
2025-07-12 01:24:22.686 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 数据一致性检查线程池已初始化: coreSize=2, maxSize=5, queueCapacity=100
2025-07-12 01:24:22.692 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 通用异步任务线程池已初始化: coreSize=5, maxSize=10, queueCapacity=200
2025-07-12 01:24:22.915 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-07-12 01:24:23.061 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-07-12 01:24:23.267 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-07-12 01:24:23.774 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-07-12 01:24:23.814 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-12 01:24:23.829 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-12 01:24:23.832 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-07-12 01:24:23.832 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@10ddb97c]]
2025-07-12 01:24:23.833 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-07-12 01:24:23.845 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Started ImCommunicationSystemApplication in 7.695 seconds (process running for 8.124)
2025-07-12 01:24:23.885 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 开始配置存储桶访问策略...
2025-07-12 01:24:23.902 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-files
2025-07-12 01:24:23.914 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-images
2025-07-12 01:24:23.926 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-videos
2025-07-12 01:24:23.938 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-audios
2025-07-12 01:24:23.950 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-documents
2025-07-12 01:24:23.962 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-others
2025-07-12 01:24:23.990 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 存储桶访问策略配置完成
2025-07-12 01:24:29.866 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-12 01:24:29.866 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-12 01:24:29.869 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-07-12 01:24:31.634 [http-nio-8080-exec-9] INFO  c.i.i.a.service.impl.AuthServiceImpl - 开始处理密码登录请求: jiapei1219@gmail.com
2025-07-12 01:24:32.035 [http-nio-8080-exec-9] INFO  c.i.i.a.service.AccountLockService - 用户 jiapei1219@gmail.com 无登录失败记录需要清除
2025-07-12 01:24:32.035 [http-nio-8080-exec-9] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户密码验证成功: userId=4, email=jiapei1219@gmail.com
2025-07-12 01:24:32.035 [http-nio-8080-exec-9] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 记录登录设备: userId=4, deviceType=Web, ipAddress=null
2025-07-12 01:24:32.042 [http-nio-8080-exec-9] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 更新现有设备记录: deviceId=6
2025-07-12 01:24:32.072 [http-nio-8080-exec-9] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户选择记住登录状态，设置长期token: userId=4
2025-07-12 01:24:32.073 [http-nio-8080-exec-9] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户登录成功: userId=4, email=jiapei1219@gmail.com, rememberMe=true
2025-07-12 01:24:33.764 [http-nio-8080-exec-7] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 01:24:33.767 [http-nio-8080-exec-7] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=4
2025-07-12 01:24:33.831 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:24:33.834 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:24:33.835 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:24:33.836 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:24:33.836 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:24:33.837 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:24:33.837 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:24:34.381 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 4
2025-07-12 01:24:34.393 [http-nio-8080-exec-10] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 01:24:34.394 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 01:24:34.406 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 01:24:34.408 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=31, 名称=202302091675904140726704.jpg, 类型=image, 大小=8507
2025-07-12 01:24:34.411 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 01:24:34.415 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=8507, typeStats={image=1}
2025-07-12 01:24:34.431 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 01:24:34.450 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 4 的所有文件记录数（包括已删除）: 1
2025-07-12 01:24:34.450 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=31, 原始名称=202302091675904140726704.jpg, 是否删除=false, 文件类型=image
2025-07-12 01:24:34.451 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 01:24:34.467 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 01:24:34.467 [http-nio-8080-exec-10] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 01:24:34.468 [http-nio-8080-exec-10] INFO  c.i.i.u.c.FileUploadController - 用户 4 找到 1 个文件
2025-07-12 01:24:42.772 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:24:42.775 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:24:42.775 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:24:42.775 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:24:42.775 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:24:42.775 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:24:42.776 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:24:49.929 [http-nio-8080-exec-6] INFO  c.i.i.u.s.impl.UserQRCodeServiceImpl - 生成用户二维码: userId=4
2025-07-12 01:24:50.158 [http-nio-8080-exec-6] INFO  c.i.i.u.s.impl.UserQRCodeServiceImpl - 用户二维码生成成功: userId=4
2025-07-12 01:24:54.455 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:24:54.459 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:24:54.460 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:24:54.462 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:24:54.463 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:24:54.464 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:24:54.465 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:24:54.534 [http-nio-8080-exec-5] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=ceshi, currentUserId=4, page=0, size=20
2025-07-12 01:24:54.543 [http-nio-8080-exec-5] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 01:24:54.544 [http-nio-8080-exec-5] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 01:24:55.707 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:24:55.711 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:24:55.713 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:24:55.713 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:24:59.102 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:24:59.105 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:24:59.105 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:24:59.106 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:24:59.106 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:24:59.106 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:24:59.106 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:25:04.770 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:25:04.772 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:25:04.772 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:25:04.772 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:25:04.772 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:25:04.772 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:25:04.772 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:25:09.618 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:25:09.620 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:25:09.620 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:25:09.620 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:25:09.620 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:25:09.621 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:25:09.621 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:25:11.634 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:25:11.638 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:25:11.639 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:25:11.639 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:25:11.639 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:25:11.639 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:25:11.639 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:25:23.813 [MessageBroker-3] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 11, active threads = 1, queued tasks = 8, completed tasks = 2]
2025-07-12 01:25:34.752 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:25:34.753 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:25:34.754 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:25:34.754 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:25:34.755 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:25:34.755 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:25:34.755 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:26:04.746 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:26:04.747 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:26:04.748 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:26:04.748 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:26:04.748 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:26:04.748 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:26:04.748 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:26:27.412 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:26:27.415 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:26:27.415 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:26:27.415 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:26:27.415 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:26:27.415 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:26:27.415 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:26:33.884 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:26:33.887 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:26:33.888 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:26:33.888 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:26:33.889 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:26:33.889 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:26:33.889 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:26:34.566 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:26:34.569 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:26:34.570 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:26:34.571 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:26:34.571 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:26:34.572 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:26:34.572 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:26:34.597 [http-nio-8080-exec-2] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=zpz, currentUserId=4, page=0, size=20
2025-07-12 01:26:34.600 [http-nio-8080-exec-2] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=zpz, searchType=null, userId=4)
2025-07-12 01:26:34.600 [http-nio-8080-exec-2] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=zpz, searchType=null, userId=4)
2025-07-12 01:26:34.607 [http-nio-8080-exec-2] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 未找到用户: userIdStr=zpz
2025-07-12 01:26:34.608 [http-nio-8080-exec-2] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据昵称搜索用户: searchRequest=SearchContactRequest(keyword=zpz, searchType=null, userId=4)
2025-07-12 01:26:34.619 [http-nio-8080-exec-2] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 昵称搜索完成: nickname=zpz, 找到0个结果
2025-07-12 01:26:41.357 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:26:41.360 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:26:41.360 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:26:41.361 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:26:41.361 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:26:41.361 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:26:41.361 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:26:41.384 [http-nio-8080-exec-10] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=zhengpeng, currentUserId=4, page=0, size=20
2025-07-12 01:26:41.387 [http-nio-8080-exec-10] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=zhengpeng, searchType=null, userId=4)
2025-07-12 01:26:41.387 [http-nio-8080-exec-10] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=zhengpeng, searchType=null, userId=4)
2025-07-12 01:26:41.393 [http-nio-8080-exec-10] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 未找到用户: userIdStr=zhengpeng
2025-07-12 01:26:41.394 [http-nio-8080-exec-10] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据昵称搜索用户: searchRequest=SearchContactRequest(keyword=zhengpeng, searchType=null, userId=4)
2025-07-12 01:26:41.412 [http-nio-8080-exec-10] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 昵称搜索完成: nickname=zhengpeng, 找到1个结果
2025-07-12 01:26:47.427 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:26:47.431 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:26:47.432 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:26:47.432 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:26:47.432 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:26:47.432 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:26:47.433 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:26:47.472 [http-nio-8080-exec-6] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=z, currentUserId=4, page=0, size=20
2025-07-12 01:26:47.478 [http-nio-8080-exec-6] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=z, searchType=null, userId=4)
2025-07-12 01:26:47.480 [http-nio-8080-exec-6] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=z, searchType=null, userId=4)
2025-07-12 01:26:47.495 [http-nio-8080-exec-6] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 未找到用户: userIdStr=z
2025-07-12 01:26:47.496 [http-nio-8080-exec-6] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据昵称搜索用户: searchRequest=SearchContactRequest(keyword=z, searchType=null, userId=4)
2025-07-12 01:26:47.548 [http-nio-8080-exec-6] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 昵称搜索完成: nickname=z, 找到1个结果
2025-07-12 01:27:04.748 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:27:04.754 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:27:04.754 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:27:04.754 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:27:04.755 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:27:04.755 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:27:04.755 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:27:34.749 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:27:34.751 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:27:34.752 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:27:34.752 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:27:34.752 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:27:34.752 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:27:34.752 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:28:04.766 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:28:04.768 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:28:04.768 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:28:04.769 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:28:04.769 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:28:04.769 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:28:04.769 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:28:58.757 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:28:58.760 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:28:58.760 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:28:58.761 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:28:58.761 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:28:58.761 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:28:58.761 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:29:28.428 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:29:28.432 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:29:28.432 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:29:28.432 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:29:28.432 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:29:28.432 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:29:28.432 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:29:28.451 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:29:28.453 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:29:28.454 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:29:28.454 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:29:28.454 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:29:28.455 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:29:28.455 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:29:31.603 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 3
2025-07-12 01:29:31.607 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 3 ===
2025-07-12 01:29:31.607 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:29:31.607 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:29:33.209 [http-nio-8080-exec-4] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 01:29:33.212 [http-nio-8080-exec-4] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=4
2025-07-12 01:29:33.261 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:29:33.266 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:29:33.267 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:29:33.267 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:29:33.268 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:29:33.268 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:29:33.268 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:29:33.810 [http-nio-8080-exec-2] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 01:29:33.811 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 01:29:33.813 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 4
2025-07-12 01:29:33.821 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 01:29:33.821 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=31, 名称=202302091675904140726704.jpg, 类型=image, 大小=8507
2025-07-12 01:29:33.821 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 01:29:33.821 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=8507, typeStats={image=1}
2025-07-12 01:29:33.823 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 01:29:33.833 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 4 的所有文件记录数（包括已删除）: 1
2025-07-12 01:29:33.834 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=31, 原始名称=202302091675904140726704.jpg, 是否删除=false, 文件类型=image
2025-07-12 01:29:33.834 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 01:29:33.839 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 01:29:33.839 [http-nio-8080-exec-2] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 01:29:33.840 [http-nio-8080-exec-2] INFO  c.i.i.u.c.FileUploadController - 用户 4 找到 1 个文件
2025-07-12 01:29:38.915 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:29:38.918 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:29:38.919 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:29:38.919 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:29:38.920 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:29:38.920 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:29:38.921 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:29:38.946 [http-nio-8080-exec-1] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=ceshi, currentUserId=4, page=0, size=20
2025-07-12 01:29:38.949 [http-nio-8080-exec-1] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 01:29:38.950 [http-nio-8080-exec-1] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 01:29:39.826 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:29:39.830 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:29:39.830 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:29:39.831 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:29:41.997 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:29:42.001 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:29:42.001 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:29:42.003 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:29:42.005 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:29:42.005 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:29:42.006 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:30:03.753 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:30:03.755 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:30:03.755 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:30:03.755 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:30:03.756 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:30:03.756 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:30:03.756 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:30:33.755 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:30:33.758 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:30:33.758 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:30:33.758 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:30:33.758 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:30:33.758 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:30:33.758 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:31:03.753 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:31:03.757 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:31:03.757 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:31:03.757 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:31:03.758 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:31:03.758 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:31:03.758 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:31:33.751 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:31:33.755 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:31:33.755 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:31:33.755 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:31:33.755 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:31:33.756 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:31:33.756 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:32:03.763 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:32:03.767 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:32:03.767 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:32:03.767 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:32:03.768 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:32:03.768 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:32:03.768 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:32:33.748 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:32:33.751 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:32:33.751 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:32:33.751 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:32:33.751 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:32:33.751 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:32:33.751 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:33:03.772 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:33:03.776 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:33:03.776 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:33:03.777 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:33:03.778 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:33:03.778 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:33:03.778 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:33:58.771 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:33:58.774 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:33:58.775 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:33:58.775 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:33:58.775 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:33:58.775 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:33:58.775 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:34:58.767 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:34:58.774 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:34:58.774 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:34:58.774 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:34:58.775 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:34:58.775 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:34:58.776 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:35:37.079 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:35:37.082 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:35:37.082 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:35:37.083 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:35:37.083 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:35:37.083 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:35:37.083 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:35:37.104 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:35:37.107 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:35:37.107 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:35:37.107 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:35:37.107 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:35:37.107 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:35:37.107 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:35:38.772 [http-nio-8080-exec-5] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 01:35:38.774 [http-nio-8080-exec-5] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=4
2025-07-12 01:35:38.808 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:35:38.811 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:35:38.811 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:35:38.811 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:35:38.811 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:35:38.811 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:35:38.811 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:35:39.337 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 4
2025-07-12 01:35:39.337 [http-nio-8080-exec-7] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 01:35:39.337 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 01:35:39.346 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 01:35:39.346 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=31, 名称=202302091675904140726704.jpg, 类型=image, 大小=8507
2025-07-12 01:35:39.346 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 01:35:39.346 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=8507, typeStats={image=1}
2025-07-12 01:35:39.349 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 01:35:39.360 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 4 的所有文件记录数（包括已删除）: 1
2025-07-12 01:35:39.360 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=31, 原始名称=202302091675904140726704.jpg, 是否删除=false, 文件类型=image
2025-07-12 01:35:39.360 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 01:35:39.365 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 01:35:39.366 [http-nio-8080-exec-7] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 01:35:39.366 [http-nio-8080-exec-7] INFO  c.i.i.u.c.FileUploadController - 用户 4 找到 1 个文件
2025-07-12 01:35:42.136 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:35:42.140 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:35:42.140 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:35:42.141 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:35:42.142 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:35:42.142 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:35:42.143 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:35:42.186 [http-nio-8080-exec-10] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=ceshi, currentUserId=4, page=0, size=20
2025-07-12 01:35:42.192 [http-nio-8080-exec-10] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 01:35:42.193 [http-nio-8080-exec-10] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 01:35:43.355 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:35:43.360 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:35:43.360 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:35:43.360 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:35:57.534 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:35:57.537 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:35:57.538 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:35:57.538 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:35:59.725 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:35:59.728 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:35:59.728 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:35:59.729 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:36:08.845 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:36:08.848 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:36:08.849 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:36:08.849 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:36:08.850 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:36:08.850 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:36:08.850 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:36:09.502 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:36:09.505 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:36:09.505 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:36:09.505 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:36:18.304 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:36:18.306 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:36:18.307 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:36:18.307 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:36:18.307 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:36:18.308 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:36:18.308 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:36:34.512 [http-nio-8080-exec-10] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 01:36:34.514 [http-nio-8080-exec-10] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=4
2025-07-12 01:36:34.555 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:36:34.556 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:36:34.557 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:36:34.557 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:36:34.558 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:36:34.558 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:36:34.558 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:36:35.086 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 4
2025-07-12 01:36:35.089 [http-nio-8080-exec-9] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 01:36:35.089 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 01:36:35.091 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 01:36:35.092 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=31, 名称=202302091675904140726704.jpg, 类型=image, 大小=8507
2025-07-12 01:36:35.093 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 01:36:35.093 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=8507, typeStats={image=1}
2025-07-12 01:36:35.104 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 01:36:35.116 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 4 的所有文件记录数（包括已删除）: 1
2025-07-12 01:36:35.116 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=31, 原始名称=202302091675904140726704.jpg, 是否删除=false, 文件类型=image
2025-07-12 01:36:35.116 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 01:36:35.120 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 01:36:35.121 [http-nio-8080-exec-9] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 01:36:35.121 [http-nio-8080-exec-9] INFO  c.i.i.u.c.FileUploadController - 用户 4 找到 1 个文件
2025-07-12 01:36:45.562 [http-nio-8080-exec-8] INFO  c.i.i.a.service.impl.AuthServiceImpl - 开始处理密码登录请求: jiapei1219@gmail.com
2025-07-12 01:36:45.715 [http-nio-8080-exec-8] INFO  c.i.i.a.service.AccountLockService - 用户 jiapei1219@gmail.com 无登录失败记录需要清除
2025-07-12 01:36:45.715 [http-nio-8080-exec-8] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户密码验证成功: userId=4, email=jiapei1219@gmail.com
2025-07-12 01:36:45.716 [http-nio-8080-exec-8] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 记录登录设备: userId=4, deviceType=Web, ipAddress=null
2025-07-12 01:36:45.724 [http-nio-8080-exec-8] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 更新现有设备记录: deviceId=6
2025-07-12 01:36:45.728 [http-nio-8080-exec-8] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户选择记住登录状态，设置长期token: userId=4
2025-07-12 01:36:45.728 [http-nio-8080-exec-8] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户登录成功: userId=4, email=jiapei1219@gmail.com, rememberMe=true
2025-07-12 01:36:47.337 [http-nio-8080-exec-7] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 01:36:47.338 [http-nio-8080-exec-7] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=4
2025-07-12 01:36:47.375 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:36:47.381 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:36:47.384 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:36:47.385 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:36:47.387 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:36:47.388 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:36:47.388 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:36:47.573 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:36:47.577 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:36:47.578 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:36:47.578 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:36:47.579 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:36:47.579 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:36:47.579 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:36:47.914 [http-nio-8080-exec-6] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 01:36:47.915 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 4
2025-07-12 01:36:47.915 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 01:36:47.919 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 01:36:47.919 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=31, 名称=202302091675904140726704.jpg, 类型=image, 大小=8507
2025-07-12 01:36:47.919 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 01:36:47.919 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=8507, typeStats={image=1}
2025-07-12 01:36:47.923 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 01:36:47.931 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 4 的所有文件记录数（包括已删除）: 1
2025-07-12 01:36:47.932 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=31, 原始名称=202302091675904140726704.jpg, 是否删除=false, 文件类型=image
2025-07-12 01:36:47.932 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 01:36:47.936 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 01:36:47.936 [http-nio-8080-exec-6] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 01:36:47.936 [http-nio-8080-exec-6] INFO  c.i.i.u.c.FileUploadController - 用户 4 找到 1 个文件
2025-07-12 01:36:49.992 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:36:49.997 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:36:49.997 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:36:49.998 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:36:49.998 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:36:49.998 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:36:49.998 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:36:54.121 [http-nio-8080-exec-8] INFO  c.i.i.a.service.impl.AuthServiceImpl - 开始处理密码登录请求: 3280164803@qq.com
2025-07-12 01:36:54.286 [http-nio-8080-exec-8] INFO  c.i.i.a.service.AccountLockService - 用户 3280164803@qq.com 无登录失败记录需要清除
2025-07-12 01:36:54.287 [http-nio-8080-exec-8] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户密码验证成功: userId=2, email=3280164803@qq.com
2025-07-12 01:36:54.288 [http-nio-8080-exec-8] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 记录登录设备: userId=2, deviceType=Web, ipAddress=null
2025-07-12 01:36:54.293 [http-nio-8080-exec-8] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 更新现有设备记录: deviceId=2
2025-07-12 01:36:54.295 [http-nio-8080-exec-8] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户选择记住登录状态，设置长期token: userId=2
2025-07-12 01:36:54.296 [http-nio-8080-exec-8] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户登录成功: userId=2, email=3280164803@qq.com, rememberMe=true
2025-07-12 01:36:55.879 [http-nio-8080-exec-2] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 01:36:55.880 [http-nio-8080-exec-2] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=2
2025-07-12 01:36:55.911 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:36:55.912 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:36:55.913 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:36:55.913 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:36:56.377 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:36:56.380 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:36:56.380 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:36:56.380 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:36:56.447 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 2
2025-07-12 01:36:56.448 [http-nio-8080-exec-5] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 2, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 01:36:56.449 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 2, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 01:36:56.453 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 01:36:56.454 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=24, 名称=202302091675904140211711.jpg, 类型=image, 大小=7125
2025-07-12 01:36:56.454 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 01:36:56.455 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=7125, typeStats={image=1}
2025-07-12 01:36:56.463 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 01:36:56.477 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 2 的所有文件记录数（包括已删除）: 1
2025-07-12 01:36:56.477 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=24, 原始名称=202302091675904140211711.jpg, 是否删除=false, 文件类型=image
2025-07-12 01:36:56.478 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 01:36:56.484 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 01:36:56.485 [http-nio-8080-exec-5] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 01:36:56.486 [http-nio-8080-exec-5] INFO  c.i.i.u.c.FileUploadController - 用户 2 找到 1 个文件
2025-07-12 01:36:57.135 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:36:57.137 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:36:57.138 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:36:57.138 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:37:26.486 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:37:26.489 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:37:26.489 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:37:26.490 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:37:26.515 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:37:26.518 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:37:26.518 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:37:26.519 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:37:30.964 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:37:30.969 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:37:30.970 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:37:30.971 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:37:34.459 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:37:34.462 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:37:34.462 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:37:34.462 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:37:56.769 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:37:56.772 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:37:56.772 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:37:56.772 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:38:26.760 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:38:26.763 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:38:26.763 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:38:26.763 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:38:56.758 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:38:56.760 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:38:56.760 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:38:56.760 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:38:57.665 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:38:57.667 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:38:57.667 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:38:57.667 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:39:03.125 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:39:03.127 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:39:03.127 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:39:03.128 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:39:11.575 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:39:11.577 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:39:11.577 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:39:11.578 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:39:15.966 [http-nio-8080-exec-8] INFO  c.i.i.a.service.impl.AuthServiceImpl - 开始处理密码登录请求: jiapei1219@gmail.com
2025-07-12 01:39:16.113 [http-nio-8080-exec-8] INFO  c.i.i.a.service.AccountLockService - 用户 jiapei1219@gmail.com 无登录失败记录需要清除
2025-07-12 01:39:16.113 [http-nio-8080-exec-8] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户密码验证成功: userId=4, email=jiapei1219@gmail.com
2025-07-12 01:39:16.113 [http-nio-8080-exec-8] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 记录登录设备: userId=4, deviceType=Web, ipAddress=null
2025-07-12 01:39:16.119 [http-nio-8080-exec-8] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 更新现有设备记录: deviceId=6
2025-07-12 01:39:16.123 [http-nio-8080-exec-8] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户登录成功: userId=4, email=jiapei1219@gmail.com, rememberMe=false
2025-07-12 01:39:16.959 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:39:16.961 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:39:16.961 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:39:16.961 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:39:17.806 [http-nio-8080-exec-1] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 01:39:17.807 [http-nio-8080-exec-1] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=4
2025-07-12 01:39:17.834 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:39:17.837 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:39:17.837 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:39:17.837 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:39:17.839 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:39:17.839 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:39:17.840 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:39:18.750 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 4
2025-07-12 01:39:18.750 [http-nio-8080-exec-6] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 01:39:18.750 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 01:39:18.753 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 01:39:18.754 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=31, 名称=202302091675904140726704.jpg, 类型=image, 大小=8507
2025-07-12 01:39:18.754 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 01:39:18.754 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=8507, typeStats={image=1}
2025-07-12 01:39:18.757 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 01:39:18.765 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 4 的所有文件记录数（包括已删除）: 1
2025-07-12 01:39:18.765 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=31, 原始名称=202302091675904140726704.jpg, 是否删除=false, 文件类型=image
2025-07-12 01:39:18.766 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 01:39:18.770 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 01:39:18.770 [http-nio-8080-exec-6] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 01:39:18.771 [http-nio-8080-exec-6] INFO  c.i.i.u.c.FileUploadController - 用户 4 找到 1 个文件
2025-07-12 01:39:25.218 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:39:25.220 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:39:25.221 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:39:25.221 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:39:25.945 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:39:25.948 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:39:25.949 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:39:25.949 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:39:39.485 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:39:39.486 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:39:39.486 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:39:39.487 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:39:42.371 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:39:42.374 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:39:42.374 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:39:42.374 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:39:42.375 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:39:42.375 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:39:42.376 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:39:44.644 [http-nio-8080-exec-1] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 01:39:44.645 [http-nio-8080-exec-1] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=4
2025-07-12 01:39:44.679 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:39:44.682 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:39:44.682 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:39:44.683 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:39:44.684 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:39:44.684 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:39:44.684 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:39:45.208 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 4
2025-07-12 01:39:45.209 [http-nio-8080-exec-6] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 01:39:45.210 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 01:39:45.214 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 01:39:45.214 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=31, 名称=202302091675904140726704.jpg, 类型=image, 大小=8507
2025-07-12 01:39:45.214 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 01:39:45.214 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=8507, typeStats={image=1}
2025-07-12 01:39:45.225 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 01:39:45.232 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 4 的所有文件记录数（包括已删除）: 1
2025-07-12 01:39:45.233 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=31, 原始名称=202302091675904140726704.jpg, 是否删除=false, 文件类型=image
2025-07-12 01:39:45.235 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 01:39:45.239 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 01:39:45.240 [http-nio-8080-exec-6] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 01:39:45.240 [http-nio-8080-exec-6] INFO  c.i.i.u.c.FileUploadController - 用户 4 找到 1 个文件
2025-07-12 01:39:49.143 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:39:49.145 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:39:49.146 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:39:49.146 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:39:49.147 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:39:49.147 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:39:49.147 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:39:49.178 [http-nio-8080-exec-4] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=ceshi, currentUserId=4, page=0, size=20
2025-07-12 01:39:49.181 [http-nio-8080-exec-4] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 01:39:49.181 [http-nio-8080-exec-4] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 01:39:50.114 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:39:50.118 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:39:50.118 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:39:50.118 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:39:56.781 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:39:56.788 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:39:56.789 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:39:56.790 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:39:57.808 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:39:57.812 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:39:57.812 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:39:57.812 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:40:01.369 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:40:01.370 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:40:01.371 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:40:01.372 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:40:01.396 [http-nio-8080-exec-6] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=test, currentUserId=2, page=0, size=20
2025-07-12 01:40:01.399 [http-nio-8080-exec-6] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=test, searchType=null, userId=2)
2025-07-12 01:40:01.400 [http-nio-8080-exec-6] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=test, searchType=null, userId=2)
2025-07-12 01:40:01.405 [http-nio-8080-exec-6] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 未找到用户: userIdStr=test
2025-07-12 01:40:01.406 [http-nio-8080-exec-6] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据昵称搜索用户: searchRequest=SearchContactRequest(keyword=test, searchType=null, userId=2)
2025-07-12 01:40:01.428 [http-nio-8080-exec-6] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 昵称搜索完成: nickname=test, 找到1个结果
2025-07-12 01:40:03.055 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:40:03.056 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:40:03.056 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:40:03.056 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:40:03.057 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:40:03.057 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:40:03.057 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:40:08.310 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:40:08.313 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:40:08.314 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:40:08.314 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:40:08.314 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:40:08.314 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:40:08.314 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:40:15.644 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:40:15.646 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:40:15.646 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:40:15.647 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:40:25.941 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:40:25.945 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:40:25.946 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:40:25.947 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:40:27.769 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 更新用户资料，用户ID: 2
2025-07-12 01:40:27.775 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 用户资料更新成功，用户ID: 2
2025-07-12 01:40:27.798 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:40:27.800 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:40:27.800 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:40:27.801 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:40:27.825 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:40:27.827 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:40:27.827 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:40:27.827 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:40:38.822 [http-nio-8080-exec-6] INFO  c.i.i.a.service.impl.AuthServiceImpl - 开始处理密码登录请求: jiapei1219@gmail.com
2025-07-12 01:40:38.972 [http-nio-8080-exec-6] INFO  c.i.i.a.service.AccountLockService - 用户 jiapei1219@gmail.com 无登录失败记录需要清除
2025-07-12 01:40:38.973 [http-nio-8080-exec-6] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户密码验证成功: userId=4, email=jiapei1219@gmail.com
2025-07-12 01:40:38.974 [http-nio-8080-exec-6] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 记录登录设备: userId=4, deviceType=Web, ipAddress=null
2025-07-12 01:40:38.982 [http-nio-8080-exec-6] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 更新现有设备记录: deviceId=6
2025-07-12 01:40:38.989 [http-nio-8080-exec-6] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户选择记住登录状态，设置长期token: userId=4
2025-07-12 01:40:38.990 [http-nio-8080-exec-6] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户登录成功: userId=4, email=jiapei1219@gmail.com, rememberMe=true
2025-07-12 01:40:40.616 [http-nio-8080-exec-3] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 01:40:40.619 [http-nio-8080-exec-3] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=4
2025-07-12 01:40:40.654 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:40:40.656 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:40:40.657 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:40:40.657 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:40:40.657 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:40:40.658 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:40:40.658 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:40:41.177 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 4
2025-07-12 01:40:41.177 [http-nio-8080-exec-10] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 01:40:41.177 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 01:40:41.181 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 01:40:41.181 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=31, 名称=202302091675904140726704.jpg, 类型=image, 大小=8507
2025-07-12 01:40:41.181 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 01:40:41.181 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=8507, typeStats={image=1}
2025-07-12 01:40:41.184 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 01:40:41.189 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 4 的所有文件记录数（包括已删除）: 1
2025-07-12 01:40:41.189 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=31, 原始名称=202302091675904140726704.jpg, 是否删除=false, 文件类型=image
2025-07-12 01:40:41.189 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 01:40:41.192 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 01:40:41.192 [http-nio-8080-exec-10] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 01:40:41.192 [http-nio-8080-exec-10] INFO  c.i.i.u.c.FileUploadController - 用户 4 找到 1 个文件
2025-07-12 01:40:42.285 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:40:42.288 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:40:42.288 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:40:42.289 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:40:42.289 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:40:42.289 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:40:42.290 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:40:46.514 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:40:46.517 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:40:46.517 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:40:46.519 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:40:46.519 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:40:46.519 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:40:46.519 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:40:46.547 [http-nio-8080-exec-6] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=ceshi, currentUserId=4, page=0, size=20
2025-07-12 01:40:46.549 [http-nio-8080-exec-6] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 01:40:46.550 [http-nio-8080-exec-6] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 01:40:48.583 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:40:48.585 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:40:48.585 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:40:48.585 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:41:10.688 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:41:10.691 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:41:10.691 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:41:10.691 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:41:10.691 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:41:10.691 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:41:10.692 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:41:22.413 [http-nio-8080-exec-6] INFO  c.i.i.a.service.impl.AuthServiceImpl - 开始处理密码登录请求: 3280164803@qq.com
2025-07-12 01:41:22.557 [http-nio-8080-exec-6] INFO  c.i.i.a.service.AccountLockService - 用户 3280164803@qq.com 无登录失败记录需要清除
2025-07-12 01:41:22.559 [http-nio-8080-exec-6] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户密码验证成功: userId=2, email=3280164803@qq.com
2025-07-12 01:41:22.559 [http-nio-8080-exec-6] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 记录登录设备: userId=2, deviceType=Web, ipAddress=null
2025-07-12 01:41:22.565 [http-nio-8080-exec-6] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 更新现有设备记录: deviceId=2
2025-07-12 01:41:22.567 [http-nio-8080-exec-6] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户登录成功: userId=2, email=3280164803@qq.com, rememberMe=false
2025-07-12 01:41:24.142 [http-nio-8080-exec-2] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 01:41:24.144 [http-nio-8080-exec-2] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=2
2025-07-12 01:41:24.165 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:41:24.168 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:41:24.169 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:41:24.169 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:41:24.701 [http-nio-8080-exec-7] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 2, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 01:41:24.702 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 2, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 01:41:24.705 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 2
2025-07-12 01:41:24.707 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 01:41:24.707 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 01:41:24.707 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=24, 名称=202302091675904140211711.jpg, 类型=image, 大小=7125
2025-07-12 01:41:24.708 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 01:41:24.708 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=7125, typeStats={image=1}
2025-07-12 01:41:24.712 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 2 的所有文件记录数（包括已删除）: 1
2025-07-12 01:41:24.712 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=24, 原始名称=202302091675904140211711.jpg, 是否删除=false, 文件类型=image
2025-07-12 01:41:24.712 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 01:41:24.714 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 01:41:24.715 [http-nio-8080-exec-7] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 01:41:24.715 [http-nio-8080-exec-7] INFO  c.i.i.u.c.FileUploadController - 用户 2 找到 1 个文件
2025-07-12 01:41:25.789 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:41:25.791 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:41:25.792 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:41:25.792 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:41:28.921 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 更新用户资料，用户ID: 2
2025-07-12 01:41:28.923 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 用户资料更新成功，用户ID: 2
2025-07-12 01:41:28.945 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:41:28.947 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:41:28.948 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:41:28.948 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:41:28.973 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:41:28.976 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:41:28.976 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:41:28.976 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:41:30.690 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:41:30.692 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:41:30.692 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:41:30.693 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:41:40.754 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:41:40.757 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:41:40.757 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:41:40.757 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:41:40.757 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:41:40.757 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:41:40.758 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:41:41.362 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 更新用户资料，用户ID: 2
2025-07-12 01:41:41.364 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 用户资料更新成功，用户ID: 2
2025-07-12 01:41:41.407 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:41:41.411 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:41:41.411 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:41:41.412 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:41:41.436 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:41:41.439 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:41:41.439 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:41:41.439 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:41:47.042 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:41:47.044 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:41:47.045 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:41:47.045 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:41:47.046 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:41:47.046 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:41:47.046 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:41:49.078 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:41:49.080 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:41:49.080 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:41:49.081 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:41:52.153 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:41:52.156 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:41:52.156 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:41:52.156 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:41:54.763 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:41:54.768 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:41:54.768 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:41:54.772 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:42:06.562 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:42:06.565 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:42:06.565 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:42:06.565 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:42:07.011 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:42:07.013 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:42:07.013 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:42:07.013 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:42:10.747 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:42:10.749 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:42:10.749 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:42:10.749 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:42:10.750 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:42:10.750 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:42:10.750 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:42:11.549 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 更新用户资料，用户ID: 2
2025-07-12 01:42:11.553 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 用户资料更新成功，用户ID: 2
2025-07-12 01:42:11.601 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:42:11.604 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:42:11.605 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:42:11.605 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:42:11.637 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:42:11.641 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:42:11.641 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:42:11.641 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:42:13.405 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:42:13.407 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:42:13.408 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:42:13.408 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:42:13.408 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:42:13.409 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:42:13.409 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:42:16.211 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:42:16.214 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:42:16.214 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:42:16.215 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:42:19.308 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:42:19.310 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:42:19.310 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:42:19.310 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:42:24.761 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:42:24.764 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:42:24.764 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:42:24.764 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:42:26.386 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:42:26.389 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:42:26.390 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:42:26.390 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:42:31.837 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:42:31.840 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:42:31.841 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:42:31.841 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:42:31.842 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:42:31.842 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:42:31.842 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:42:31.877 [http-nio-8080-exec-10] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=ceshi, currentUserId=4, page=0, size=20
2025-07-12 01:42:31.883 [http-nio-8080-exec-10] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 01:42:31.883 [http-nio-8080-exec-10] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 01:42:32.385 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:42:32.388 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:42:32.389 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:42:32.389 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:42:35.297 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:42:35.300 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:42:35.300 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:42:35.300 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:42:35.301 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:42:35.301 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:42:35.301 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:42:35.321 [http-nio-8080-exec-9] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=ceshi, currentUserId=4, page=0, size=20
2025-07-12 01:42:35.323 [http-nio-8080-exec-9] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 01:42:35.324 [http-nio-8080-exec-9] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 01:42:36.247 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:42:36.251 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:42:36.251 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:42:36.252 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:42:36.252 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:42:36.253 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:42:36.253 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:42:36.277 [http-nio-8080-exec-8] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=ceshi, currentUserId=4, page=0, size=20
2025-07-12 01:42:36.281 [http-nio-8080-exec-8] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 01:42:36.282 [http-nio-8080-exec-8] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 01:42:37.660 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:42:37.662 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:42:37.662 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:42:37.662 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:42:40.129 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:42:40.130 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:42:40.131 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:42:40.131 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:42:40.743 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:42:40.745 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:42:40.745 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:42:40.746 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:42:40.746 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:42:40.746 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:42:40.746 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:42:40.859 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:42:40.862 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:42:40.862 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:42:40.863 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:42:50.424 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 更新用户资料，用户ID: 2
2025-07-12 01:42:50.426 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 用户资料更新成功，用户ID: 2
2025-07-12 01:42:50.468 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:42:50.470 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:42:50.470 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:42:50.470 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:42:50.494 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:42:50.496 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:42:50.496 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:42:50.496 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:42:50.877 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:42:50.881 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:42:50.881 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:42:50.882 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:42:50.882 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:42:50.882 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:42:50.882 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:42:52.722 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:42:52.724 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:42:52.724 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:42:52.724 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:42:54.758 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:42:54.761 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:42:54.761 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:42:54.761 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:43:10.715 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:43:10.719 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:43:10.720 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:43:10.721 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:43:10.721 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:43:10.722 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:43:10.722 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:43:17.498 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:43:17.501 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:43:17.501 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:43:17.501 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:43:24.759 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:43:24.761 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:43:24.761 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:43:24.761 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:43:26.638 [http-nio-8080-exec-6] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 01:43:26.640 [http-nio-8080-exec-6] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=4
2025-07-12 01:43:26.670 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:43:26.672 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:43:26.672 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:43:26.672 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:43:26.673 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:43:26.673 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:43:26.673 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:43:27.199 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 4
2025-07-12 01:43:27.200 [http-nio-8080-exec-3] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 01:43:27.201 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 01:43:27.203 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 01:43:27.203 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=31, 名称=202302091675904140726704.jpg, 类型=image, 大小=8507
2025-07-12 01:43:27.203 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 01:43:27.203 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=8507, typeStats={image=1}
2025-07-12 01:43:27.206 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 01:43:27.213 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 4 的所有文件记录数（包括已删除）: 1
2025-07-12 01:43:27.213 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=31, 原始名称=202302091675904140726704.jpg, 是否删除=false, 文件类型=image
2025-07-12 01:43:27.213 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 01:43:27.217 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 01:43:27.217 [http-nio-8080-exec-3] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 01:43:27.217 [http-nio-8080-exec-3] INFO  c.i.i.u.c.FileUploadController - 用户 4 找到 1 个文件
2025-07-12 01:43:33.542 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:43:33.545 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:43:33.545 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:43:33.545 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:43:36.077 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:43:36.078 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:43:36.079 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:43:36.079 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:43:36.079 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:43:36.079 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:43:36.081 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:43:38.752 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:43:38.755 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:43:38.756 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:43:38.756 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:43:38.756 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:43:38.756 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:43:38.757 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:43:42.398 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:43:42.399 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:43:42.399 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:43:42.400 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:43:51.706 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:43:51.709 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:43:51.709 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:43:51.709 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:43:51.709 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:43:51.710 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:43:51.710 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:43:54.765 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:43:54.770 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:43:54.772 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:43:54.772 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:43:55.411 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:43:55.412 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:43:55.412 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:43:55.412 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:43:56.753 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:43:56.755 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:43:56.755 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:43:56.755 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:43:56.755 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:43:56.755 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:43:56.756 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:43:57.703 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:43:57.706 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:43:57.706 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:43:57.706 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:43:57.731 [http-nio-8080-exec-3] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=te, currentUserId=2, page=0, size=20
2025-07-12 01:43:57.735 [http-nio-8080-exec-3] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=te, searchType=null, userId=2)
2025-07-12 01:43:57.736 [http-nio-8080-exec-3] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=te, searchType=null, userId=2)
2025-07-12 01:43:57.742 [http-nio-8080-exec-3] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 未找到用户: userIdStr=te
2025-07-12 01:43:57.743 [http-nio-8080-exec-3] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据昵称搜索用户: searchRequest=SearchContactRequest(keyword=te, searchType=null, userId=2)
2025-07-12 01:43:57.764 [http-nio-8080-exec-3] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 昵称搜索完成: nickname=te, 找到1个结果
2025-07-12 01:43:58.863 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:43:58.866 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:43:58.866 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:43:58.866 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:43:58.867 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:43:58.867 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:43:58.867 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:44:03.010 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:44:03.012 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:44:03.012 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:44:03.012 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:44:11.116 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:44:11.119 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:44:11.119 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:44:11.119 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:44:11.120 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:44:11.120 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:44:11.120 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:44:24.221 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:44:24.224 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:44:24.225 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:44:24.225 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:44:26.746 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:44:26.748 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:44:26.748 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:44:26.748 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:44:26.748 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:44:26.748 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:44:26.748 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:44:27.117 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:44:27.119 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:44:27.120 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:44:27.120 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:44:54.756 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:44:54.757 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:44:54.757 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:44:54.757 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:44:56.761 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:44:56.764 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:44:56.764 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:44:56.764 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:44:56.764 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:44:56.764 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:44:56.765 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:44:56.840 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:44:56.841 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:44:56.842 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:44:56.842 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:45:24.742 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:45:24.744 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:45:24.744 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:45:24.744 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:45:26.762 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:45:26.765 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:45:26.765 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:45:26.766 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:45:26.766 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:45:26.766 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:45:26.766 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:45:54.753 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:45:54.755 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:45:54.755 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:45:54.755 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:45:56.758 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:45:56.760 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:45:56.760 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:45:56.760 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:45:56.760 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:45:56.760 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:45:56.761 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:46:26.749 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:46:26.753 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:46:26.753 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:46:26.754 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:46:26.754 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:46:26.754 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:46:26.754 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:46:45.948 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:46:45.950 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:46:45.951 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:46:45.951 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:46:45.964 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:46:45.966 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:46:45.966 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:46:45.966 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:46:48.359 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:46:48.362 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:46:48.362 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:46:48.362 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:46:48.362 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:46:48.362 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:46:48.362 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:46:52.086 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:46:52.090 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:46:52.090 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:46:52.091 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:46:52.091 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:46:52.091 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:46:52.091 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:46:53.015 [http-nio-8080-exec-9] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 01:46:53.018 [http-nio-8080-exec-9] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=4
2025-07-12 01:46:53.062 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:46:53.065 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:46:53.067 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:46:53.068 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:46:53.068 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:46:53.068 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:46:53.069 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:46:53.610 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 4
2025-07-12 01:46:53.610 [http-nio-8080-exec-4] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 01:46:53.611 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 01:46:53.615 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 01:46:53.616 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=31, 名称=202302091675904140726704.jpg, 类型=image, 大小=8507
2025-07-12 01:46:53.617 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 01:46:53.617 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=8507, typeStats={image=1}
2025-07-12 01:46:53.631 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 01:46:53.655 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 4 的所有文件记录数（包括已删除）: 1
2025-07-12 01:46:53.656 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=31, 原始名称=202302091675904140726704.jpg, 是否删除=false, 文件类型=image
2025-07-12 01:46:53.656 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 01:46:53.660 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 01:46:53.660 [http-nio-8080-exec-4] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 01:46:53.661 [http-nio-8080-exec-4] INFO  c.i.i.u.c.FileUploadController - 用户 4 找到 1 个文件
2025-07-12 01:46:54.750 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:46:54.752 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:46:54.752 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:46:54.752 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:46:56.454 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:46:56.456 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:46:56.456 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:46:56.456 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:46:56.457 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:46:56.457 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:46:56.457 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:46:56.486 [http-nio-8080-exec-10] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=ceshi, currentUserId=4, page=0, size=20
2025-07-12 01:46:56.489 [http-nio-8080-exec-10] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 01:46:56.489 [http-nio-8080-exec-10] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 01:46:56.518 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:46:56.520 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:46:56.520 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:46:56.520 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:46:56.521 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:46:56.521 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:46:56.521 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:46:56.540 [http-nio-8080-exec-7] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=ceshi, currentUserId=4, page=0, size=20
2025-07-12 01:46:56.543 [http-nio-8080-exec-7] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 01:46:56.543 [http-nio-8080-exec-7] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 01:46:57.854 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:46:57.857 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:46:57.858 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:46:57.858 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:47:00.779 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:47:00.781 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:47:00.782 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:47:00.782 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:47:09.008 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:47:09.011 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:47:09.011 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:47:09.011 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:47:12.434 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:47:12.437 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:47:12.437 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:47:12.438 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:47:12.438 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:47:12.438 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:47:12.439 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:47:13.695 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:47:13.698 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:47:13.698 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:47:13.699 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:47:13.699 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:47:13.699 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:47:13.699 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:47:23.114 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:47:23.116 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:47:23.117 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:47:23.118 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:47:23.118 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:47:23.118 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:47:23.119 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:47:24.755 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:47:24.758 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:47:24.759 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:47:24.759 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:47:27.043 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 更新用户资料，用户ID: 4
2025-07-12 01:47:27.046 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 用户资料更新成功，用户ID: 4
2025-07-12 01:47:27.072 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:47:27.076 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:47:27.076 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-11T20:48:16.748843300"} ===
2025-07-12 01:47:27.076 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-11T20:48:16.748843300} ===
2025-07-12 01:47:27.076 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:47:27.077 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:47:27.077 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:47:27.126 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 设置用户状态，用户ID: 4
2025-07-12 01:47:27.136 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 用户状态设置成功，用户ID: 4
2025-07-12 01:47:27.190 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:47:27.193 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:47:27.193 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:47:27.130962800"} ===
2025-07-12 01:47:27.194 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:47:27.130962800} ===
2025-07-12 01:47:27.194 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:47:27.194 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:47:27.194 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:47:28.928 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:47:28.931 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:47:28.932 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:47:27.130962800"} ===
2025-07-12 01:47:28.937 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:47:27.130962800} ===
2025-07-12 01:47:28.938 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:47:28.938 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:47:28.941 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:47:53.758 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:47:53.761 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:47:53.761 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:47:27.130962800"} ===
2025-07-12 01:47:53.761 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:47:27.130962800} ===
2025-07-12 01:47:53.761 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:47:53.762 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:47:53.762 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:47:54.755 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:47:54.757 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:47:54.758 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:47:54.758 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:48:02.330 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:48:02.333 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:48:02.334 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:47:27.130962800"} ===
2025-07-12 01:48:02.334 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:47:27.130962800} ===
2025-07-12 01:48:02.334 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:48:02.334 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:48:02.334 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:48:05.774 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:48:05.776 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:48:05.776 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:47:27.130962800"} ===
2025-07-12 01:48:05.777 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:47:27.130962800} ===
2025-07-12 01:48:05.777 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:48:05.777 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:48:05.777 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:48:13.412 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:48:13.414 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:48:13.414 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:47:27.130962800"} ===
2025-07-12 01:48:13.414 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:47:27.130962800} ===
2025-07-12 01:48:13.414 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:48:13.414 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:48:13.414 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:48:23.101 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:48:23.103 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:48:23.103 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:47:27.130962800"} ===
2025-07-12 01:48:23.103 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:47:27.130962800} ===
2025-07-12 01:48:23.104 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:48:23.104 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:48:23.104 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:48:53.759 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:48:53.763 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:48:53.763 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:47:27.130962800"} ===
2025-07-12 01:48:53.763 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:47:27.130962800} ===
2025-07-12 01:48:53.763 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:48:53.764 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:48:53.764 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:48:55.751 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:48:55.753 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:48:55.753 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:48:55.753 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:49:23.754 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:49:23.757 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:49:23.757 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:47:27.130962800"} ===
2025-07-12 01:49:23.757 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:47:27.130962800} ===
2025-07-12 01:49:23.757 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:49:23.758 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:49:23.758 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:49:41.221 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:49:41.224 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:49:41.224 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:47:27.130962800"} ===
2025-07-12 01:49:41.224 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:47:27.130962800} ===
2025-07-12 01:49:41.224 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:49:41.224 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:49:41.224 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:49:47.212 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 更新用户资料，用户ID: 4
2025-07-12 01:49:47.216 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 用户资料更新成功，用户ID: 4
2025-07-12 01:49:47.244 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:49:47.246 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:49:47.247 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:47:27.130962800"} ===
2025-07-12 01:49:47.247 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:47:27.130962800} ===
2025-07-12 01:49:47.248 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:49:47.248 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:49:47.248 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:49:47.278 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 设置用户状态，用户ID: 4
2025-07-12 01:49:47.281 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 用户状态设置成功，用户ID: 4
2025-07-12 01:49:47.319 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:49:47.322 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:49:47.323 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:49:47.281322600"} ===
2025-07-12 01:49:47.323 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:49:47.281322600} ===
2025-07-12 01:49:47.324 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:49:47.324 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:49:47.324 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:49:49.084 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:49:49.086 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:49:49.086 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:49:47.281322600"} ===
2025-07-12 01:49:49.086 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:49:47.281322600} ===
2025-07-12 01:49:49.086 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:49:49.087 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:49:49.087 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:49:53.752 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:49:53.754 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:49:53.755 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:49:47.281322600"} ===
2025-07-12 01:49:53.755 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:49:47.281322600} ===
2025-07-12 01:49:53.756 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:49:53.756 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:49:53.756 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:49:54.943 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:49:54.945 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:49:54.946 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:49:47.281322600"} ===
2025-07-12 01:49:54.946 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:49:47.281322600} ===
2025-07-12 01:49:54.946 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:49:54.947 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:49:54.947 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:49:56.768 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:49:56.771 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:49:56.771 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:49:56.772 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:50:05.462 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:50:05.463 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:50:05.463 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:49:47.281322600"} ===
2025-07-12 01:50:05.464 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:49:47.281322600} ===
2025-07-12 01:50:05.464 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:50:05.464 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:50:05.465 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:50:12.219 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:50:12.224 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:50:12.225 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:49:47.281322600"} ===
2025-07-12 01:50:12.227 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:49:47.281322600} ===
2025-07-12 01:50:12.227 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:50:12.228 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:50:12.228 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:50:23.103 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:50:23.104 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:50:23.104 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:49:47.281322600"} ===
2025-07-12 01:50:23.104 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:49:47.281322600} ===
2025-07-12 01:50:23.104 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:50:23.104 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:50:23.104 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:50:53.109 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:50:53.111 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:50:53.111 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:49:47.281322600"} ===
2025-07-12 01:50:53.111 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:49:47.281322600} ===
2025-07-12 01:50:53.111 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:50:53.111 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:50:53.111 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:50:57.754 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:50:57.755 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:50:57.756 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:50:57.756 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:51:20.611 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:51:20.613 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:51:20.613 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:49:47.281322600"} ===
2025-07-12 01:51:20.613 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:49:47.281322600} ===
2025-07-12 01:51:20.613 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:51:20.613 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:51:20.613 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:51:23.100 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:51:23.102 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:51:23.102 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:49:47.281322600"} ===
2025-07-12 01:51:23.103 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:49:47.281322600} ===
2025-07-12 01:51:23.103 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:51:23.103 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:51:23.103 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:51:53.770 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:51:53.773 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:51:53.773 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:49:47.281322600"} ===
2025-07-12 01:51:53.773 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:49:47.281322600} ===
2025-07-12 01:51:53.773 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:51:53.774 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:51:53.774 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:51:57.174 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:51:57.176 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:51:57.176 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:49:47.281322600"} ===
2025-07-12 01:51:57.176 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:49:47.281322600} ===
2025-07-12 01:51:57.176 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:51:57.176 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:51:57.176 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:51:58.753 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:51:58.754 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:51:58.755 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:51:58.755 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:52:05.302 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:52:05.305 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:52:05.305 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:49:47.281322600"} ===
2025-07-12 01:52:05.305 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:49:47.281322600} ===
2025-07-12 01:52:05.305 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:52:05.305 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:52:05.305 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:52:23.758 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:52:23.760 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:52:23.760 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:49:47.281322600"} ===
2025-07-12 01:52:23.760 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:49:47.281322600} ===
2025-07-12 01:52:23.760 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:52:23.760 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:52:23.760 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:52:30.635 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:52:30.636 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:52:30.636 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:49:47.281322600"} ===
2025-07-12 01:52:30.637 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:49:47.281322600} ===
2025-07-12 01:52:30.637 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:52:30.637 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:52:30.637 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:52:53.740 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:52:53.741 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:52:53.741 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:49:47.281322600"} ===
2025-07-12 01:52:53.742 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:49:47.281322600} ===
2025-07-12 01:52:53.742 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:52:53.742 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:52:53.742 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:52:58.750 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:52:58.752 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:52:58.752 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:52:58.752 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:53:23.747 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:53:23.749 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:53:23.749 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:49:47.281322600"} ===
2025-07-12 01:53:23.750 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:49:47.281322600} ===
2025-07-12 01:53:23.750 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:53:23.750 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:53:23.750 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:53:58.754 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:53:58.754 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:53:58.756 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:53:58.756 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:53:58.756 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:49:47.281322600"} ===
2025-07-12 01:53:58.756 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:53:58.756 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:49:47.281322600} ===
2025-07-12 01:53:58.756 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:53:58.756 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:53:58.756 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:53:58.756 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:54:58.774 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:54:58.774 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:54:58.777 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:54:58.777 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:54:58.777 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:54:58.779 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:54:58.779 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:49:47.281322600"} ===
2025-07-12 01:54:58.779 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:49:47.281322600} ===
2025-07-12 01:54:58.779 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:54:58.780 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:54:58.780 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:55:23.826 [MessageBroker-8] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 20, active threads = 1, queued tasks = 8, completed tasks = 63]
2025-07-12 01:55:58.760 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:55:58.760 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:55:58.762 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:55:58.762 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:55:58.762 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:49:47.281322600"} ===
2025-07-12 01:55:58.762 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:55:58.762 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:49:47.281322600} ===
2025-07-12 01:55:58.763 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:55:58.763 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:55:58.763 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:55:58.763 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:56:01.993 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 4 class path changes (0 additions, 0 deletions, 4 modifications)
2025-07-12 01:56:02.055 [Thread-5] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2025-07-12 01:56:02.057 [Thread-5] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@10ddb97c]]
2025-07-12 01:56:02.057 [Thread-5] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2025-07-12 01:56:02.064 [Thread-5] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-12 01:56:02.371 [Thread-5] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 01:56:02.386 [Thread-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-12 01:56:02.392 [Thread-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-12 01:56:02.839 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 14128 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 01:56:02.839 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 01:56:03.070 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 01:56:03.070 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-12 01:56:03.109 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 38 ms. Found 9 JPA repository interfaces.
2025-07-12 01:56:03.204 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 01:56:03.204 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-12 01:56:03.215 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.LoginDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:56:03.215 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:56:03.215 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:56:03.216 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:56:03.216 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:56:03.216 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:56:03.216 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.FileUploadRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:56:03.216 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:56:03.217 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:56:03.217 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2025-07-12 01:56:03.353 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-12 01:56:03.354 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.9] using APR version [1.7.6].
2025-07-12 01:56:03.363 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.5.0 8 Apr 2025]
2025-07-12 01:56:03.364 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-12 01:56:03.364 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-12 01:56:03.364 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-12 01:56:03.388 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-12 01:56:03.388 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 548 ms
2025-07-12 01:56:03.463 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-07-12 01:56:03.481 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7a4f54d0
2025-07-12 01:56:03.482 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-07-12 01:56:03.518 [restartedMain] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://localhost:3307/im_db (MySQL 9.3)
2025-07-12 01:56:03.569 [restartedMain] INFO  o.f.core.internal.command.DbValidate - Successfully validated 14 migrations (execution time 00:00.027s)
2025-07-12 01:56:03.583 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Current version of schema `im_db`: 20250112.009
2025-07-12 01:56:03.585 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Schema `im_db` is up to date. No migration necessary.
2025-07-12 01:56:03.619 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-12 01:56:03.622 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-12 01:56:03.631 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-12 01:56:03.744 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-12 01:56:03.772 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 01:56:04.254 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 初始化MinIO客户端，端点: http://localhost:9000, 访问密钥: minioadmin
2025-07-12 01:56:04.259 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO客户端初始化成功
2025-07-12 01:56:04.260 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 开始检查并创建MinIO存储桶...
2025-07-12 01:56:04.393 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO存储桶初始化完成 - 公开存储桶: 6个, 私有存储桶: 6个
2025-07-12 01:56:04.520 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 初始化MinIO服务，开始创建存储桶...
2025-07-12 01:56:04.561 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 所有存储桶初始化成功
2025-07-12 01:56:04.561 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - MinIO服务初始化完成
2025-07-12 01:56:04.591 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 开始初始化公共桶生命周期规则，默认过期天数: 7
2025-07-12 01:56:04.591 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-files 设置临时文件生命周期规则，过期天数: 7
2025-07-12 01:56:04.610 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-images 设置临时文件生命周期规则，过期天数: 7
2025-07-12 01:56:04.620 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-videos 设置临时文件生命周期规则，过期天数: 7
2025-07-12 01:56:04.629 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-documents 设置临时文件生命周期规则，过期天数: 7
2025-07-12 01:56:04.645 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 公共桶生命周期规则初始化完成，成功设置: 0 个桶
2025-07-12 01:56:04.742 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 数据一致性检查线程池已初始化: coreSize=2, maxSize=5, queueCapacity=100
2025-07-12 01:56:04.750 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 通用异步任务线程池已初始化: coreSize=5, maxSize=10, queueCapacity=200
2025-07-12 01:56:04.864 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-07-12 01:56:04.906 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-07-12 01:56:05.038 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-07-12 01:56:05.270 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-07-12 01:56:05.284 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-12 01:56:05.288 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-12 01:56:05.288 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-07-12 01:56:05.288 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@1c7b7ece]]
2025-07-12 01:56:05.288 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-07-12 01:56:05.296 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Started ImCommunicationSystemApplication in 2.486 seconds (process running for 1909.574)
2025-07-12 01:56:05.297 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 开始配置存储桶访问策略...
2025-07-12 01:56:05.315 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-files
2025-07-12 01:56:05.329 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-images
2025-07-12 01:56:05.342 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-videos
2025-07-12 01:56:05.357 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-audios
2025-07-12 01:56:05.372 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-documents
2025-07-12 01:56:05.386 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-others
2025-07-12 01:56:05.419 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 存储桶访问策略配置完成
2025-07-12 01:56:05.421 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-07-12 01:56:58.740 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-12 01:56:58.741 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-12 01:56:58.743 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-07-12 01:56:58.800 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:56:58.800 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:56:58.804 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:56:58.805 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:49:47.281322600"} ===
2025-07-12 01:56:58.805 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:56:58.805 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:49:47.281322600} ===
2025-07-12 01:56:58.806 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:56:58.805 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:56:58.806 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:56:58.807 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:56:58.806 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:57:05.291 [MessageBroker-4] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 11, active threads = 1, queued tasks = 8, completed tasks = 2]
2025-07-12 01:57:09.376 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:57:09.378 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:57:09.378 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:49:47.281322600"} ===
2025-07-12 01:57:09.378 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:49:47.281322600} ===
2025-07-12 01:57:09.378 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:57:09.378 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:57:09.378 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:57:10.192 [http-nio-8080-exec-7] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 01:57:10.193 [http-nio-8080-exec-7] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=4
2025-07-12 01:57:10.228 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:57:10.230 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:57:10.230 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:49:47.281322600"} ===
2025-07-12 01:57:10.231 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:49:47.281322600} ===
2025-07-12 01:57:10.231 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:57:10.231 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:57:10.231 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:57:10.749 [http-nio-8080-exec-9] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 01:57:10.749 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 01:57:10.749 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 4
2025-07-12 01:57:10.755 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 01:57:10.756 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 01:57:10.756 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=31, 名称=202302091675904140726704.jpg, 类型=image, 大小=8507
2025-07-12 01:57:10.756 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 01:57:10.757 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=8507, typeStats={image=1}
2025-07-12 01:57:10.762 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 4 的所有文件记录数（包括已删除）: 1
2025-07-12 01:57:10.762 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=31, 原始名称=202302091675904140726704.jpg, 是否删除=false, 文件类型=image
2025-07-12 01:57:10.762 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 01:57:10.766 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 01:57:10.766 [http-nio-8080-exec-9] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 01:57:10.766 [http-nio-8080-exec-9] INFO  c.i.i.u.c.FileUploadController - 用户 4 找到 1 个文件
2025-07-12 01:57:11.884 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:57:11.886 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:57:11.886 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:49:47.281322600"} ===
2025-07-12 01:57:11.886 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:49:47.281322600} ===
2025-07-12 01:57:11.887 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:57:11.887 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:57:11.887 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:57:16.918 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:57:16.921 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:57:16.922 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:49:47.281322600"} ===
2025-07-12 01:57:16.922 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:49:47.281322600} ===
2025-07-12 01:57:16.923 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:57:16.923 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:57:16.924 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:57:20.708 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 更新用户资料，用户ID: 4
2025-07-12 01:57:20.714 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 用户资料更新成功，用户ID: 4
2025-07-12 01:57:20.742 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:57:20.745 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:57:20.745 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:49:47.281322600"} ===
2025-07-12 01:57:20.746 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:49:47.281322600} ===
2025-07-12 01:57:20.747 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:57:20.747 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:57:20.747 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:57:20.783 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 设置用户状态，用户ID: 4
2025-07-12 01:57:20.787 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 用户状态设置成功，用户ID: 4
2025-07-12 01:57:20.841 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:57:20.844 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:57:20.844 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:57:20.787353900"} ===
2025-07-12 01:57:20.845 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:57:20.787353900} ===
2025-07-12 01:57:20.845 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:57:20.845 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:57:20.846 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:57:22.383 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:57:22.388 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:57:22.389 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:57:20.787353900"} ===
2025-07-12 01:57:22.389 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:57:20.787353900} ===
2025-07-12 01:57:22.390 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:57:22.391 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:57:22.392 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:57:30.556 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 更新用户资料，用户ID: 4
2025-07-12 01:57:30.561 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 用户资料更新成功，用户ID: 4
2025-07-12 01:57:30.588 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:57:30.594 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:57:30.594 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:57:20.787353900"} ===
2025-07-12 01:57:30.595 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:57:20.787353900} ===
2025-07-12 01:57:30.595 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:57:30.595 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:57:30.596 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:57:30.629 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 设置用户状态，用户ID: 4
2025-07-12 01:57:30.632 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 用户状态设置成功，用户ID: 4
2025-07-12 01:57:30.667 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:57:30.670 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:57:30.670 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:57:30.632618600"} ===
2025-07-12 01:57:30.670 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:57:30.632618600} ===
2025-07-12 01:57:30.671 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:57:30.672 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:57:30.672 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:57:32.416 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:57:32.419 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:57:32.420 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:57:30.632618600"} ===
2025-07-12 01:57:32.420 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:57:30.632618600} ===
2025-07-12 01:57:32.420 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:57:32.420 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:57:32.421 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:57:40.766 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:57:40.767 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:57:40.767 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:57:30.632618600"} ===
2025-07-12 01:57:40.768 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:57:30.632618600} ===
2025-07-12 01:57:40.768 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:57:40.768 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:57:40.768 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:57:45.222 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:57:45.224 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:57:45.224 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:57:30.632618600"} ===
2025-07-12 01:57:45.225 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:57:30.632618600} ===
2025-07-12 01:57:45.225 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:57:45.225 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:57:45.225 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:57:48.817 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 更新用户资料，用户ID: 4
2025-07-12 01:57:48.819 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 用户资料更新成功，用户ID: 4
2025-07-12 01:57:48.833 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:57:48.834 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:57:48.834 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:57:30.632618600"} ===
2025-07-12 01:57:48.834 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:57:30.632618600} ===
2025-07-12 01:57:48.834 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:57:48.834 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:57:48.835 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:57:48.855 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 设置用户状态，用户ID: 4
2025-07-12 01:57:48.856 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 用户状态设置成功，用户ID: 4
2025-07-12 01:57:48.879 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:57:48.881 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:57:48.881 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:57:48.856671400"} ===
2025-07-12 01:57:48.881 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:57:48.856671400} ===
2025-07-12 01:57:48.881 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:57:48.881 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:57:48.881 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:57:50.513 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:57:50.515 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:57:50.515 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:57:48.856671400"} ===
2025-07-12 01:57:50.515 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:57:48.856671400} ===
2025-07-12 01:57:50.516 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:57:50.516 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:57:50.516 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:57:58.820 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:57:58.822 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:57:58.824 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:57:58.825 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:58:10.749 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:58:10.750 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:58:10.751 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:57:48.856671400"} ===
2025-07-12 01:58:10.751 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:57:48.856671400} ===
2025-07-12 01:58:10.751 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:58:10.751 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:58:10.751 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:58:18.931 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:58:18.932 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:58:18.932 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:57:48.856671400"} ===
2025-07-12 01:58:18.932 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:57:48.856671400} ===
2025-07-12 01:58:18.932 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:58:18.933 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:58:18.933 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:58:40.754 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:58:40.755 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:58:40.755 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:57:48.856671400"} ===
2025-07-12 01:58:40.756 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:57:48.856671400} ===
2025-07-12 01:58:40.756 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:58:40.756 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:58:40.756 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:58:58.752 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:58:58.753 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:58:58.754 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:58:58.754 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 01:59:10.758 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:59:10.759 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:59:10.759 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:57:48.856671400"} ===
2025-07-12 01:59:10.759 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:57:48.856671400} ===
2025-07-12 01:59:10.760 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:59:10.760 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:59:10.760 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:59:40.749 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 01:59:40.751 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 01:59:40.751 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:57:48.856671400"} ===
2025-07-12 01:59:40.751 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:57:48.856671400} ===
2025-07-12 01:59:40.751 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 01:59:40.751 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 01:59:40.751 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 01:59:54.254 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-07-12 01:59:54.257 [Thread-7] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2025-07-12 01:59:54.257 [Thread-7] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@1c7b7ece]]
2025-07-12 01:59:54.257 [Thread-7] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2025-07-12 01:59:54.258 [Thread-7] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-12 01:59:54.503 [Thread-7] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 01:59:54.504 [Thread-7] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-07-12 01:59:54.505 [Thread-7] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-07-12 01:59:54.648 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 14128 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 01:59:54.648 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 01:59:54.835 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 01:59:54.835 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-12 01:59:54.870 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 34 ms. Found 9 JPA repository interfaces.
2025-07-12 01:59:54.955 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 01:59:54.955 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-12 01:59:54.965 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.LoginDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:59:54.965 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:59:54.966 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:59:54.966 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:59:54.966 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:59:54.966 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:59:54.966 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.FileUploadRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:59:54.966 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:59:54.967 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 01:59:54.967 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2025-07-12 01:59:55.106 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-12 01:59:55.107 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.9] using APR version [1.7.6].
2025-07-12 01:59:55.108 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.5.0 8 Apr 2025]
2025-07-12 01:59:55.108 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-12 01:59:55.108 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-12 01:59:55.109 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-12 01:59:55.129 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-12 01:59:55.130 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 481 ms
2025-07-12 01:59:55.198 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
2025-07-12 01:59:55.325 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1ed0f47e
2025-07-12 01:59:55.325 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
2025-07-12 01:59:55.648 [restartedMain] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://localhost:3307/im_db (MySQL 9.3)
2025-07-12 01:59:55.673 [restartedMain] INFO  o.f.core.internal.command.DbValidate - Successfully validated 14 migrations (execution time 00:00.014s)
2025-07-12 01:59:55.685 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Current version of schema `im_db`: 20250112.009
2025-07-12 01:59:55.686 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Schema `im_db` is up to date. No migration necessary.
2025-07-12 01:59:55.713 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-12 01:59:55.716 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-12 01:59:55.722 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-12 01:59:55.834 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-12 01:59:55.860 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 01:59:56.111 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 初始化MinIO客户端，端点: http://localhost:9000, 访问密钥: minioadmin
2025-07-12 01:59:56.112 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO客户端初始化成功
2025-07-12 01:59:56.112 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 开始检查并创建MinIO存储桶...
2025-07-12 01:59:56.192 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO存储桶初始化完成 - 公开存储桶: 6个, 私有存储桶: 6个
2025-07-12 01:59:56.240 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 初始化MinIO服务，开始创建存储桶...
2025-07-12 01:59:56.272 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 所有存储桶初始化成功
2025-07-12 01:59:56.272 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - MinIO服务初始化完成
2025-07-12 01:59:56.289 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 开始初始化公共桶生命周期规则，默认过期天数: 7
2025-07-12 01:59:56.289 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-files 设置临时文件生命周期规则，过期天数: 7
2025-07-12 01:59:56.297 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-images 设置临时文件生命周期规则，过期天数: 7
2025-07-12 01:59:56.304 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-videos 设置临时文件生命周期规则，过期天数: 7
2025-07-12 01:59:56.309 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-documents 设置临时文件生命周期规则，过期天数: 7
2025-07-12 01:59:56.315 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 公共桶生命周期规则初始化完成，成功设置: 0 个桶
2025-07-12 01:59:56.380 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 数据一致性检查线程池已初始化: coreSize=2, maxSize=5, queueCapacity=100
2025-07-12 01:59:56.388 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 通用异步任务线程池已初始化: coreSize=5, maxSize=10, queueCapacity=200
2025-07-12 01:59:56.461 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-07-12 01:59:56.498 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-07-12 01:59:56.597 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-07-12 01:59:56.829 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-07-12 01:59:56.844 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-12 01:59:56.846 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-12 01:59:56.847 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-07-12 01:59:56.847 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@5126b203]]
2025-07-12 01:59:56.847 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-07-12 01:59:56.855 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Started ImCommunicationSystemApplication in 2.232 seconds (process running for 2141.133)
2025-07-12 01:59:56.857 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 开始配置存储桶访问策略...
2025-07-12 01:59:56.868 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-files
2025-07-12 01:59:56.878 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-images
2025-07-12 01:59:56.890 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-videos
2025-07-12 01:59:56.903 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-audios
2025-07-12 01:59:56.913 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-documents
2025-07-12 01:59:56.924 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-others
2025-07-12 01:59:56.944 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 存储桶访问策略配置完成
2025-07-12 01:59:56.945 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-07-12 01:59:58.733 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-12 01:59:58.733 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-12 01:59:58.735 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-07-12 01:59:58.764 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 01:59:58.767 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 01:59:58.767 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 01:59:58.767 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 02:00:00.001 [MessageBroker-3] INFO  c.i.i.u.s.DataConsistencyService - 开始执行数据一致性检查
2025-07-12 02:00:00.001 [MessageBroker-1] INFO  c.i.i.u.t.DataConsistencyMonitorTask - 开始执行每天数据一致性检查和自动修复
2025-07-12 02:00:00.001 [MessageBroker-4] INFO  c.i.i.user.task.FileCleanupTask - 开始执行定时文件清理任务，清理30天前的文件
2025-07-12 02:00:00.002 [MessageBroker-1] INFO  c.i.i.u.s.DataConsistencyService - 开始执行数据一致性检查
2025-07-12 02:00:00.006 [MessageBroker-5] INFO  c.i.i.u.t.TemporaryFileCleanupTask - 开始执行过期临时文件清理任务
2025-07-12 02:00:00.006 [MessageBroker-4] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始清理30天前的已删除文件
2025-07-12 02:00:00.018 [MessageBroker-5] INFO  c.i.i.u.t.TemporaryFileCleanupTask - 没有发现过期的临时文件
2025-07-12 02:00:00.042 [MessageBroker-4] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 清理完成，MinIO删除: 0个文件，数据库删除: 0条记录
2025-07-12 02:00:00.052 [MessageBroker-4] INFO  c.i.i.user.task.FileCleanupTask - 定时文件清理任务完成，清理了 0 个过期文件
2025-07-12 02:00:00.067 [MessageBroker-3] INFO  c.i.i.u.s.DataConsistencyService - 数据一致性检查完成，发现 0 个不一致项
2025-07-12 02:00:00.067 [MessageBroker-1] INFO  c.i.i.u.s.DataConsistencyService - 数据一致性检查完成，发现 0 个不一致项
2025-07-12 02:00:00.068 [MessageBroker-1] INFO  c.i.i.u.t.DataConsistencyMonitorTask - 每天数据一致性检查通过，无需修复
2025-07-12 02:00:00.068 [MessageBroker-1] INFO  c.i.i.u.t.DataConsistencyMonitorTask - 每天数据一致性检查和自动修复完成
2025-07-12 02:00:10.754 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:00:10.757 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:00:10.758 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:57:48.856671400"} ===
2025-07-12 02:00:10.758 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:57:48.856671400} ===
2025-07-12 02:00:10.759 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:00:10.759 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:00:10.759 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:00:28.037 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 188 class path changes (0 additions, 188 deletions, 0 modifications)
2025-07-12 02:00:28.040 [Thread-11] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2025-07-12 02:00:28.040 [Thread-11] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@5126b203]]
2025-07-12 02:00:28.040 [Thread-11] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2025-07-12 02:00:28.041 [Thread-11] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-12 02:00:28.403 [Thread-11] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 02:00:28.404 [Thread-11] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
2025-07-12 02:00:28.406 [Thread-11] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
2025-07-12 02:00:28.533 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 14128 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 02:00:28.533 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 02:00:37.521 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-07-12 02:00:37.553 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 28644 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 02:00:37.554 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 02:00:37.587 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-12 02:00:37.588 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-12 02:00:38.684 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 02:00:38.685 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-12 02:00:38.939 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 241 ms. Found 9 JPA repository interfaces.
2025-07-12 02:00:39.434 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 02:00:39.435 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-12 02:00:39.474 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.LoginDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:00:39.474 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:00:39.475 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:00:39.476 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:00:39.477 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:00:39.478 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:00:39.478 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.FileUploadRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:00:39.479 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:00:39.479 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:00:39.480 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 33 ms. Found 0 Redis repository interfaces.
2025-07-12 02:00:41.302 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-12 02:00:41.341 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.9] using APR version [1.7.6].
2025-07-12 02:00:41.726 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.5.0 8 Apr 2025]
2025-07-12 02:00:41.755 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-12 02:00:41.765 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-12 02:00:41.766 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-12 02:00:41.924 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-12 02:00:41.927 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4335 ms
2025-07-12 02:00:42.525 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-12 02:00:42.759 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@49e2508b
2025-07-12 02:00:42.761 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-12 02:00:42.805 [restartedMain] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://localhost:3307/im_db (MySQL 9.3)
2025-07-12 02:00:42.877 [restartedMain] INFO  o.f.core.internal.command.DbValidate - Successfully validated 14 migrations (execution time 00:00.042s)
2025-07-12 02:00:42.897 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Current version of schema `im_db`: 20250112.009
2025-07-12 02:00:42.902 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Schema `im_db` is up to date. No migration necessary.
2025-07-12 02:00:42.999 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-12 02:00:43.059 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-07-12 02:00:43.093 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-12 02:00:43.348 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-12 02:00:44.279 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-12 02:00:44.323 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 02:00:45.147 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-12 02:00:45.593 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 初始化MinIO客户端，端点: http://localhost:9000, 访问密钥: minioadmin
2025-07-12 02:00:45.777 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO客户端初始化成功
2025-07-12 02:00:45.777 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 开始检查并创建MinIO存储桶...
2025-07-12 02:00:45.984 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO存储桶初始化完成 - 公开存储桶: 6个, 私有存储桶: 6个
2025-07-12 02:00:46.131 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 初始化MinIO服务，开始创建存储桶...
2025-07-12 02:00:46.161 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 所有存储桶初始化成功
2025-07-12 02:00:46.162 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - MinIO服务初始化完成
2025-07-12 02:00:46.206 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 开始初始化公共桶生命周期规则，默认过期天数: 7
2025-07-12 02:00:46.206 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-files 设置临时文件生命周期规则，过期天数: 7
2025-07-12 02:00:46.248 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-images 设置临时文件生命周期规则，过期天数: 7
2025-07-12 02:00:46.256 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-videos 设置临时文件生命周期规则，过期天数: 7
2025-07-12 02:00:46.264 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-documents 设置临时文件生命周期规则，过期天数: 7
2025-07-12 02:00:46.275 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 公共桶生命周期规则初始化完成，成功设置: 0 个桶
2025-07-12 02:00:46.388 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 数据一致性检查线程池已初始化: coreSize=2, maxSize=5, queueCapacity=100
2025-07-12 02:00:46.395 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 通用异步任务线程池已初始化: coreSize=5, maxSize=10, queueCapacity=200
2025-07-12 02:00:46.577 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-07-12 02:00:46.697 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-07-12 02:00:46.929 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-07-12 02:00:47.410 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-07-12 02:00:47.453 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-12 02:00:47.476 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-12 02:00:47.479 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-07-12 02:00:47.479 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@5242df4c]]
2025-07-12 02:00:47.479 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-07-12 02:00:47.494 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Started ImCommunicationSystemApplication in 10.541 seconds (process running for 10.942)
2025-07-12 02:00:47.596 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 开始配置存储桶访问策略...
2025-07-12 02:00:47.613 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-files
2025-07-12 02:00:47.636 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-images
2025-07-12 02:00:47.652 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-videos
2025-07-12 02:00:47.668 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-audios
2025-07-12 02:00:47.681 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-documents
2025-07-12 02:00:47.694 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-others
2025-07-12 02:00:47.727 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 存储桶访问策略配置完成
2025-07-12 02:00:58.790 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-12 02:00:58.791 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-12 02:00:58.792 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-12 02:00:58.907 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 02:00:58.921 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 02:00:58.921 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 02:00:58.921 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 02:01:06.617 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:01:06.622 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:01:06.623 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:57:48.856671400"} ===
2025-07-12 02:01:06.624 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:57:48.856671400} ===
2025-07-12 02:01:06.624 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:01:06.624 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:01:06.624 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:01:07.489 [http-nio-8080-exec-9] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 02:01:07.492 [http-nio-8080-exec-9] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=4
2025-07-12 02:01:07.543 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:01:07.548 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:01:07.548 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:57:48.856671400"} ===
2025-07-12 02:01:07.548 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:57:48.856671400} ===
2025-07-12 02:01:07.549 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:01:07.549 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:01:07.549 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:01:08.080 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 4
2025-07-12 02:01:08.082 [http-nio-8080-exec-8] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 02:01:08.083 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 02:01:08.091 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 02:01:08.091 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=31, 名称=202302091675904140726704.jpg, 类型=image, 大小=8507
2025-07-12 02:01:08.093 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 02:01:08.093 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=8507, typeStats={image=1}
2025-07-12 02:01:08.096 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 02:01:08.106 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 4 的所有文件记录数（包括已删除）: 1
2025-07-12 02:01:08.106 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=31, 原始名称=202302091675904140726704.jpg, 是否删除=false, 文件类型=image
2025-07-12 02:01:08.106 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 02:01:08.114 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 02:01:08.115 [http-nio-8080-exec-8] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 02:01:08.115 [http-nio-8080-exec-8] INFO  c.i.i.u.c.FileUploadController - 用户 4 找到 1 个文件
2025-07-12 02:01:23.741 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:01:23.745 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:01:23.745 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:57:48.856671400"} ===
2025-07-12 02:01:23.746 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:57:48.856671400} ===
2025-07-12 02:01:23.746 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:01:23.746 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:01:23.747 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:01:28.940 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:01:28.946 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:01:28.946 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:57:48.856671400"} ===
2025-07-12 02:01:28.947 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:57:48.856671400} ===
2025-07-12 02:01:28.948 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:01:28.948 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:01:28.949 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:01:32.524 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 更新用户资料，用户ID: 4
2025-07-12 02:01:32.536 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 用户资料更新成功，用户ID: 4
2025-07-12 02:01:32.574 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:01:32.577 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:01:32.577 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T01:57:48.856671400"} ===
2025-07-12 02:01:32.578 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T01:57:48.856671400} ===
2025-07-12 02:01:32.578 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:01:32.579 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:01:32.579 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:01:32.621 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 设置用户状态，用户ID: 4
2025-07-12 02:01:32.625 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 用户状态设置成功，用户ID: 4
2025-07-12 02:01:32.700 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:01:32.705 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:01:32.705 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:01:32.624855"} ===
2025-07-12 02:01:32.706 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:01:32.624855} ===
2025-07-12 02:01:32.706 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:01:32.706 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:01:32.708 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:01:34.330 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:01:34.334 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:01:34.335 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:01:32.624855"} ===
2025-07-12 02:01:34.336 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:01:32.624855} ===
2025-07-12 02:01:34.336 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:01:34.336 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:01:34.338 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:01:37.600 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:01:37.604 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:01:37.604 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:01:32.624855"} ===
2025-07-12 02:01:37.605 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:01:32.624855} ===
2025-07-12 02:01:37.605 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:01:37.605 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:01:37.605 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:01:42.703 [http-nio-8080-exec-3] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 02:01:42.705 [http-nio-8080-exec-3] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=4
2025-07-12 02:01:42.743 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:01:42.747 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:01:42.747 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:01:32.624855"} ===
2025-07-12 02:01:42.747 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:01:32.624855} ===
2025-07-12 02:01:42.748 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:01:42.748 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:01:42.749 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:01:43.283 [http-nio-8080-exec-2] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 02:01:43.284 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 4
2025-07-12 02:01:43.285 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 02:01:43.294 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 02:01:43.294 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=31, 名称=202302091675904140726704.jpg, 类型=image, 大小=8507
2025-07-12 02:01:43.294 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 02:01:43.295 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=8507, typeStats={image=1}
2025-07-12 02:01:43.297 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 02:01:43.307 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 4 的所有文件记录数（包括已删除）: 1
2025-07-12 02:01:43.307 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=31, 原始名称=202302091675904140726704.jpg, 是否删除=false, 文件类型=image
2025-07-12 02:01:43.307 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 02:01:43.312 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 02:01:43.313 [http-nio-8080-exec-2] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 02:01:43.314 [http-nio-8080-exec-2] INFO  c.i.i.u.c.FileUploadController - 用户 4 找到 1 个文件
2025-07-12 02:01:44.046 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:01:44.049 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:01:44.050 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:01:32.624855"} ===
2025-07-12 02:01:44.050 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:01:32.624855} ===
2025-07-12 02:01:44.050 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:01:44.051 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:01:44.051 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:01:47.435 [MessageBroker-4] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 11, active threads = 1, queued tasks = 8, completed tasks = 2]
2025-07-12 02:02:13.747 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:02:13.750 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:02:13.750 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:01:32.624855"} ===
2025-07-12 02:02:13.750 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:01:32.624855} ===
2025-07-12 02:02:13.750 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:02:13.751 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:02:13.751 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:02:43.760 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:02:43.762 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:02:43.762 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:01:32.624855"} ===
2025-07-12 02:02:43.762 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:01:32.624855} ===
2025-07-12 02:02:43.762 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:02:43.762 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:02:43.762 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:03:06.596 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:03:06.599 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:03:06.599 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:01:32.624855"} ===
2025-07-12 02:03:06.600 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:01:32.624855} ===
2025-07-12 02:03:06.600 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:03:06.600 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:03:06.600 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:03:10.049 [http-nio-8080-exec-2] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 02:03:10.051 [http-nio-8080-exec-2] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=4
2025-07-12 02:03:10.087 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:03:10.089 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:03:10.090 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:01:32.624855"} ===
2025-07-12 02:03:10.090 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:01:32.624855} ===
2025-07-12 02:03:10.090 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:03:10.090 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:03:10.090 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:03:10.610 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 4
2025-07-12 02:03:10.611 [http-nio-8080-exec-10] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 02:03:10.611 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 02:03:10.614 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 02:03:10.614 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=31, 名称=202302091675904140726704.jpg, 类型=image, 大小=8507
2025-07-12 02:03:10.614 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 02:03:10.614 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=8507, typeStats={image=1}
2025-07-12 02:03:10.619 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 02:03:10.626 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 4 的所有文件记录数（包括已删除）: 1
2025-07-12 02:03:10.627 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=31, 原始名称=202302091675904140726704.jpg, 是否删除=false, 文件类型=image
2025-07-12 02:03:10.627 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 02:03:10.630 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 02:03:10.630 [http-nio-8080-exec-10] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 02:03:10.631 [http-nio-8080-exec-10] INFO  c.i.i.u.c.FileUploadController - 用户 4 找到 1 个文件
2025-07-12 02:03:12.611 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:03:12.614 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:03:12.614 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:01:32.624855"} ===
2025-07-12 02:03:12.614 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:01:32.624855} ===
2025-07-12 02:03:12.615 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:03:12.615 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:03:12.615 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:03:12.673 [http-nio-8080-exec-6] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=test, currentUserId=4, page=0, size=20
2025-07-12 02:03:12.678 [http-nio-8080-exec-6] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=test, searchType=null, userId=4)
2025-07-12 02:03:12.680 [http-nio-8080-exec-6] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=test, searchType=null, userId=4)
2025-07-12 02:03:12.691 [http-nio-8080-exec-6] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 未找到用户: userIdStr=test
2025-07-12 02:03:12.692 [http-nio-8080-exec-6] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据昵称搜索用户: searchRequest=SearchContactRequest(keyword=test, searchType=null, userId=4)
2025-07-12 02:03:12.743 [http-nio-8080-exec-6] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 昵称搜索完成: nickname=test, 找到1个结果
2025-07-12 02:03:14.740 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 02:03:14.743 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 02:03:14.744 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 02:03:14.744 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 02:03:40.755 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:03:40.758 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:03:40.758 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:01:32.624855"} ===
2025-07-12 02:03:40.758 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:01:32.624855} ===
2025-07-12 02:03:40.759 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:03:40.759 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:03:40.759 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:04:10.748 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:04:10.753 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:04:10.753 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:01:32.624855"} ===
2025-07-12 02:04:10.754 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:01:32.624855} ===
2025-07-12 02:04:10.754 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:04:10.754 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:04:10.754 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:04:40.752 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:04:40.754 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:04:40.754 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:01:32.624855"} ===
2025-07-12 02:04:40.755 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:01:32.624855} ===
2025-07-12 02:04:40.755 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:04:40.755 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:04:40.755 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:04:48.231 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-07-12 02:04:48.236 [Thread-5] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2025-07-12 02:04:48.236 [Thread-5] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@5242df4c]]
2025-07-12 02:04:48.236 [Thread-5] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2025-07-12 02:04:48.238 [Thread-5] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-12 02:04:48.794 [Thread-5] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 02:04:48.798 [Thread-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-12 02:04:48.807 [Thread-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-12 02:04:49.012 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 28644 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 02:04:49.013 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 02:04:49.540 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 02:04:49.540 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-12 02:04:49.632 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 91 ms. Found 9 JPA repository interfaces.
2025-07-12 02:04:49.879 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 02:04:49.879 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-12 02:04:49.917 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.LoginDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:04:49.918 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:04:49.918 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:04:49.918 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:04:49.920 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:04:49.921 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:04:49.922 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.FileUploadRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:04:49.922 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:04:49.923 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:04:49.923 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 43 ms. Found 0 Redis repository interfaces.
2025-07-12 02:04:50.301 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-12 02:04:50.302 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.9] using APR version [1.7.6].
2025-07-12 02:04:50.304 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.5.0 8 Apr 2025]
2025-07-12 02:04:50.304 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-12 02:04:50.305 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-12 02:04:50.305 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-12 02:04:50.348 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-12 02:04:50.349 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1333 ms
2025-07-12 02:04:50.487 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-07-12 02:04:50.504 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection com.mysql.cj.jdbc.ConnectionImpl@353326d
2025-07-12 02:04:50.505 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-07-12 02:04:50.559 [restartedMain] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://localhost:3307/im_db (MySQL 9.3)
2025-07-12 02:04:50.616 [restartedMain] INFO  o.f.core.internal.command.DbValidate - Successfully validated 14 migrations (execution time 00:00.029s)
2025-07-12 02:04:50.633 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Current version of schema `im_db`: 20250112.009
2025-07-12 02:04:50.634 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Schema `im_db` is up to date. No migration necessary.
2025-07-12 02:04:50.672 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-12 02:04:50.674 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-12 02:04:50.682 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-12 02:04:50.791 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-12 02:04:50.817 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 02:04:51.158 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 初始化MinIO客户端，端点: http://localhost:9000, 访问密钥: minioadmin
2025-07-12 02:04:51.159 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO客户端初始化成功
2025-07-12 02:04:51.160 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 开始检查并创建MinIO存储桶...
2025-07-12 02:04:51.318 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO存储桶初始化完成 - 公开存储桶: 6个, 私有存储桶: 6个
2025-07-12 02:04:51.373 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 初始化MinIO服务，开始创建存储桶...
2025-07-12 02:04:51.397 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 所有存储桶初始化成功
2025-07-12 02:04:51.397 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - MinIO服务初始化完成
2025-07-12 02:04:51.419 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 开始初始化公共桶生命周期规则，默认过期天数: 7
2025-07-12 02:04:51.419 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-files 设置临时文件生命周期规则，过期天数: 7
2025-07-12 02:04:51.428 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-images 设置临时文件生命周期规则，过期天数: 7
2025-07-12 02:04:51.435 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-videos 设置临时文件生命周期规则，过期天数: 7
2025-07-12 02:04:51.442 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-documents 设置临时文件生命周期规则，过期天数: 7
2025-07-12 02:04:51.450 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 公共桶生命周期规则初始化完成，成功设置: 0 个桶
2025-07-12 02:04:51.528 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 数据一致性检查线程池已初始化: coreSize=2, maxSize=5, queueCapacity=100
2025-07-12 02:04:51.535 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 通用异步任务线程池已初始化: coreSize=5, maxSize=10, queueCapacity=200
2025-07-12 02:04:51.620 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-07-12 02:04:51.667 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-07-12 02:04:51.789 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-07-12 02:04:52.086 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-07-12 02:04:52.106 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-12 02:04:52.111 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-12 02:04:52.112 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-07-12 02:04:52.112 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@2cd7afe7]]
2025-07-12 02:04:52.112 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-07-12 02:04:52.124 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Started ImCommunicationSystemApplication in 3.164 seconds (process running for 255.573)
2025-07-12 02:04:52.125 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 开始配置存储桶访问策略...
2025-07-12 02:04:52.141 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-files
2025-07-12 02:04:52.155 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-images
2025-07-12 02:04:52.167 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-videos
2025-07-12 02:04:52.182 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-audios
2025-07-12 02:04:52.194 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-documents
2025-07-12 02:04:52.207 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-others
2025-07-12 02:04:52.238 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 存储桶访问策略配置完成
2025-07-12 02:04:52.240 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-07-12 02:04:56.631 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-07-12 02:04:56.633 [Thread-7] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2025-07-12 02:04:56.633 [Thread-7] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@2cd7afe7]]
2025-07-12 02:04:56.634 [Thread-7] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2025-07-12 02:04:56.634 [Thread-7] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-12 02:04:57.105 [Thread-7] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 02:04:57.106 [Thread-7] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-07-12 02:04:57.109 [Thread-7] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-07-12 02:04:57.308 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 28644 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 02:04:57.310 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 02:04:57.644 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 02:04:57.644 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-12 02:04:57.699 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 54 ms. Found 9 JPA repository interfaces.
2025-07-12 02:04:57.839 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 02:04:57.839 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-12 02:04:57.858 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.LoginDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:04:57.858 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:04:57.858 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:04:57.858 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:04:57.858 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:04:57.859 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:04:57.859 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.FileUploadRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:04:57.860 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:04:57.860 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:04:57.860 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 0 Redis repository interfaces.
2025-07-12 02:04:58.050 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-12 02:04:58.050 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.9] using APR version [1.7.6].
2025-07-12 02:04:58.051 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.5.0 8 Apr 2025]
2025-07-12 02:04:58.052 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-12 02:04:58.052 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-12 02:04:58.052 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-12 02:04:58.094 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-12 02:04:58.095 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 784 ms
2025-07-12 02:04:58.242 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
2025-07-12 02:04:58.259 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4d837276
2025-07-12 02:04:58.260 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
2025-07-12 02:04:58.277 [restartedMain] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://localhost:3307/im_db (MySQL 9.3)
2025-07-12 02:04:58.334 [restartedMain] INFO  o.f.core.internal.command.DbValidate - Successfully validated 14 migrations (execution time 00:00.033s)
2025-07-12 02:04:58.376 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Current version of schema `im_db`: 20250112.009
2025-07-12 02:04:58.378 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Schema `im_db` is up to date. No migration necessary.
2025-07-12 02:04:58.450 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-12 02:04:58.453 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-12 02:04:58.460 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-12 02:04:58.615 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-12 02:04:58.630 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 02:04:58.906 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 初始化MinIO客户端，端点: http://localhost:9000, 访问密钥: minioadmin
2025-07-12 02:04:58.908 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO客户端初始化成功
2025-07-12 02:04:58.908 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 开始检查并创建MinIO存储桶...
2025-07-12 02:04:58.964 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO存储桶初始化完成 - 公开存储桶: 6个, 私有存储桶: 6个
2025-07-12 02:04:59.021 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 初始化MinIO服务，开始创建存储桶...
2025-07-12 02:04:59.048 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 所有存储桶初始化成功
2025-07-12 02:04:59.048 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - MinIO服务初始化完成
2025-07-12 02:04:59.068 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 开始初始化公共桶生命周期规则，默认过期天数: 7
2025-07-12 02:04:59.068 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-files 设置临时文件生命周期规则，过期天数: 7
2025-07-12 02:04:59.075 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-images 设置临时文件生命周期规则，过期天数: 7
2025-07-12 02:04:59.081 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-videos 设置临时文件生命周期规则，过期天数: 7
2025-07-12 02:04:59.089 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-documents 设置临时文件生命周期规则，过期天数: 7
2025-07-12 02:04:59.095 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 公共桶生命周期规则初始化完成，成功设置: 0 个桶
2025-07-12 02:04:59.171 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 数据一致性检查线程池已初始化: coreSize=2, maxSize=5, queueCapacity=100
2025-07-12 02:04:59.177 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 通用异步任务线程池已初始化: coreSize=5, maxSize=10, queueCapacity=200
2025-07-12 02:04:59.250 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-07-12 02:04:59.293 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-07-12 02:04:59.422 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-07-12 02:04:59.667 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-07-12 02:04:59.683 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-12 02:04:59.687 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-12 02:04:59.688 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-07-12 02:04:59.688 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@12fd6ffd]]
2025-07-12 02:04:59.688 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-07-12 02:04:59.700 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Started ImCommunicationSystemApplication in 2.442 seconds (process running for 263.148)
2025-07-12 02:04:59.701 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 开始配置存储桶访问策略...
2025-07-12 02:04:59.720 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-files
2025-07-12 02:04:59.735 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-images
2025-07-12 02:04:59.750 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-videos
2025-07-12 02:04:59.770 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-audios
2025-07-12 02:04:59.789 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-documents
2025-07-12 02:04:59.808 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-others
2025-07-12 02:04:59.841 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 存储桶访问策略配置完成
2025-07-12 02:04:59.843 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-07-12 02:05:00.727 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-12 02:05:00.728 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-12 02:05:00.730 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-07-12 02:05:50.654 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-07-12 02:05:50.690 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 37868 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 02:05:50.691 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 02:05:50.731 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-12 02:05:50.732 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-12 02:05:51.503 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 02:05:51.503 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-12 02:05:51.669 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 158 ms. Found 9 JPA repository interfaces.
2025-07-12 02:05:52.094 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 02:05:52.096 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-12 02:05:52.135 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.LoginDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:05:52.136 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:05:52.136 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:05:52.137 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:05:52.138 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:05:52.139 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:05:52.140 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.FileUploadRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:05:52.141 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:05:52.142 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:05:52.142 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 35 ms. Found 0 Redis repository interfaces.
2025-07-12 02:05:53.532 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-12 02:05:53.536 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.9] using APR version [1.7.6].
2025-07-12 02:05:53.542 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.5.0 8 Apr 2025]
2025-07-12 02:05:53.555 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-12 02:05:53.558 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-12 02:05:53.559 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-12 02:05:53.643 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-12 02:05:53.645 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2911 ms
2025-07-12 02:05:53.906 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-12 02:05:54.266 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5c7a050d
2025-07-12 02:05:54.268 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-12 02:05:54.308 [restartedMain] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://localhost:3307/im_db (MySQL 9.3)
2025-07-12 02:05:54.373 [restartedMain] INFO  o.f.core.internal.command.DbValidate - Successfully validated 14 migrations (execution time 00:00.038s)
2025-07-12 02:05:54.392 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Current version of schema `im_db`: 20250112.009
2025-07-12 02:05:54.396 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Schema `im_db` is up to date. No migration necessary.
2025-07-12 02:05:54.468 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-12 02:05:54.503 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-07-12 02:05:54.527 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-12 02:05:54.741 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-12 02:05:55.541 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-12 02:05:55.578 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 02:05:56.378 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-12 02:05:56.747 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 初始化MinIO客户端，端点: http://localhost:9000, 访问密钥: minioadmin
2025-07-12 02:05:56.917 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO客户端初始化成功
2025-07-12 02:05:56.917 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 开始检查并创建MinIO存储桶...
2025-07-12 02:05:57.126 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO存储桶初始化完成 - 公开存储桶: 6个, 私有存储桶: 6个
2025-07-12 02:05:57.311 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 初始化MinIO服务，开始创建存储桶...
2025-07-12 02:05:57.345 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 所有存储桶初始化成功
2025-07-12 02:05:57.346 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - MinIO服务初始化完成
2025-07-12 02:05:57.392 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 开始初始化公共桶生命周期规则，默认过期天数: 7
2025-07-12 02:05:57.392 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-files 设置临时文件生命周期规则，过期天数: 7
2025-07-12 02:05:57.427 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-images 设置临时文件生命周期规则，过期天数: 7
2025-07-12 02:05:57.434 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-videos 设置临时文件生命周期规则，过期天数: 7
2025-07-12 02:05:57.443 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-documents 设置临时文件生命周期规则，过期天数: 7
2025-07-12 02:05:57.454 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 公共桶生命周期规则初始化完成，成功设置: 0 个桶
2025-07-12 02:05:57.548 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 数据一致性检查线程池已初始化: coreSize=2, maxSize=5, queueCapacity=100
2025-07-12 02:05:57.555 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 通用异步任务线程池已初始化: coreSize=5, maxSize=10, queueCapacity=200
2025-07-12 02:05:57.785 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-07-12 02:05:57.999 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-07-12 02:05:58.372 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-07-12 02:05:59.185 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-07-12 02:05:59.278 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-12 02:05:59.312 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-12 02:05:59.315 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-07-12 02:05:59.316 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@341df7d5]]
2025-07-12 02:05:59.317 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-07-12 02:05:59.344 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Started ImCommunicationSystemApplication in 9.174 seconds (process running for 9.75)
2025-07-12 02:05:59.473 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 开始配置存储桶访问策略...
2025-07-12 02:05:59.503 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-files
2025-07-12 02:05:59.895 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-images
2025-07-12 02:05:59.913 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-videos
2025-07-12 02:05:59.928 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-audios
2025-07-12 02:05:59.950 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-documents
2025-07-12 02:05:59.964 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-others
2025-07-12 02:05:59.998 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 存储桶访问策略配置完成
2025-07-12 02:06:00.770 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-12 02:06:00.771 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-12 02:06:00.773 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-07-12 02:06:10.818 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:06:10.832 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:06:10.832 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:01:32.624855"} ===
2025-07-12 02:06:10.832 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:01:32.624855} ===
2025-07-12 02:06:10.832 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:06:10.833 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:06:10.833 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:06:38.511 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:06:38.515 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:06:38.516 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:01:32.624855"} ===
2025-07-12 02:06:38.517 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:01:32.624855} ===
2025-07-12 02:06:38.517 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:06:38.517 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:06:38.518 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:06:39.486 [http-nio-8080-exec-6] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 02:06:39.488 [http-nio-8080-exec-6] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=4
2025-07-12 02:06:39.517 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:06:39.519 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:06:39.520 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:01:32.624855"} ===
2025-07-12 02:06:39.520 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:01:32.624855} ===
2025-07-12 02:06:39.521 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:06:39.521 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:06:39.521 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:06:40.057 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 4
2025-07-12 02:06:40.058 [http-nio-8080-exec-9] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 02:06:40.059 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 02:06:40.074 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 02:06:40.075 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=31, 名称=202302091675904140726704.jpg, 类型=image, 大小=8507
2025-07-12 02:06:40.077 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 02:06:40.078 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=8507, typeStats={image=1}
2025-07-12 02:06:40.082 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 02:06:40.099 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 4 的所有文件记录数（包括已删除）: 1
2025-07-12 02:06:40.099 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=31, 原始名称=202302091675904140726704.jpg, 是否删除=false, 文件类型=image
2025-07-12 02:06:40.100 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 02:06:40.111 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 02:06:40.112 [http-nio-8080-exec-9] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 02:06:40.112 [http-nio-8080-exec-9] INFO  c.i.i.u.c.FileUploadController - 用户 4 找到 1 个文件
2025-07-12 02:06:41.491 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:06:41.494 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:06:41.495 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:01:32.624855"} ===
2025-07-12 02:06:41.495 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:01:32.624855} ===
2025-07-12 02:06:41.495 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:06:41.496 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:06:41.496 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:06:44.446 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:06:44.449 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:06:44.450 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:01:32.624855"} ===
2025-07-12 02:06:44.450 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:01:32.624855} ===
2025-07-12 02:06:44.451 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:06:44.451 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:06:44.452 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:06:46.972 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 更新用户资料，用户ID: 4
2025-07-12 02:06:46.985 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 用户资料更新成功，用户ID: 4
2025-07-12 02:06:47.054 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:06:47.058 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:06:47.058 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:01:32.624855"} ===
2025-07-12 02:06:47.058 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:01:32.624855} ===
2025-07-12 02:06:47.059 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:06:47.060 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:06:47.064 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:06:47.098 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 设置用户状态，用户ID: 4
2025-07-12 02:06:47.102 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 用户状态设置成功，用户ID: 4
2025-07-12 02:06:47.143 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:06:47.147 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:06:47.148 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:06:47.101782700"} ===
2025-07-12 02:06:47.148 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:06:47.101782700} ===
2025-07-12 02:06:47.148 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:06:47.149 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:06:47.149 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:06:48.510 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:06:48.513 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:06:48.514 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:06:47.101782700"} ===
2025-07-12 02:06:48.514 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:06:47.101782700} ===
2025-07-12 02:06:48.514 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:06:48.515 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:06:48.515 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:06:56.505 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:06:56.509 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:06:56.509 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:06:47.101782700"} ===
2025-07-12 02:06:56.510 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:06:47.101782700} ===
2025-07-12 02:06:56.510 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:06:56.510 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:06:56.511 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:06:59.249 [MessageBroker-4] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 11, active threads = 1, queued tasks = 8, completed tasks = 2]
2025-07-12 02:07:01.115 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 更新用户资料，用户ID: 4
2025-07-12 02:07:01.119 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 用户资料更新成功，用户ID: 4
2025-07-12 02:07:01.170 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:07:01.174 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:07:01.174 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:06:47.101782700"} ===
2025-07-12 02:07:01.176 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:06:47.101782700} ===
2025-07-12 02:07:01.177 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:07:01.177 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:07:01.178 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:07:01.216 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 设置用户状态，用户ID: 4
2025-07-12 02:07:01.221 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 用户状态设置成功，用户ID: 4
2025-07-12 02:07:01.281 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:07:01.286 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:07:01.286 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:07:01.221049800"} ===
2025-07-12 02:07:01.287 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:07:01.221049800} ===
2025-07-12 02:07:01.287 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:07:01.287 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:07:01.288 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:07:07.131 [http-nio-8080-exec-8] INFO  c.i.i.a.service.impl.AuthServiceImpl - 开始处理密码登录请求: 3280164803@qq.com
2025-07-12 02:07:07.919 [http-nio-8080-exec-8] INFO  c.i.i.a.service.AccountLockService - 用户 3280164803@qq.com 无登录失败记录需要清除
2025-07-12 02:07:07.920 [http-nio-8080-exec-8] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户密码验证成功: userId=2, email=3280164803@qq.com
2025-07-12 02:07:07.920 [http-nio-8080-exec-8] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 记录登录设备: userId=2, deviceType=Web, ipAddress=null
2025-07-12 02:07:07.926 [http-nio-8080-exec-8] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 更新现有设备记录: deviceId=2
2025-07-12 02:07:07.950 [http-nio-8080-exec-8] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户选择记住登录状态，设置长期token: userId=2
2025-07-12 02:07:07.951 [http-nio-8080-exec-8] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户登录成功: userId=2, email=3280164803@qq.com, rememberMe=true
2025-07-12 02:07:09.558 [http-nio-8080-exec-10] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 02:07:09.560 [http-nio-8080-exec-10] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=2
2025-07-12 02:07:09.598 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 02:07:09.602 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 02:07:09.603 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 02:07:09.603 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 02:07:10.140 [http-nio-8080-exec-1] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 2, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 02:07:10.142 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 2, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 02:07:10.143 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 2
2025-07-12 02:07:10.150 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 02:07:10.151 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=24, 名称=202302091675904140211711.jpg, 类型=image, 大小=7125
2025-07-12 02:07:10.151 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 02:07:10.152 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=7125, typeStats={image=1}
2025-07-12 02:07:10.156 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 02:07:10.170 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 2 的所有文件记录数（包括已删除）: 1
2025-07-12 02:07:10.174 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=24, 原始名称=202302091675904140211711.jpg, 是否删除=false, 文件类型=image
2025-07-12 02:07:10.175 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 02:07:10.181 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 02:07:10.182 [http-nio-8080-exec-1] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 02:07:10.182 [http-nio-8080-exec-1] INFO  c.i.i.u.c.FileUploadController - 用户 2 找到 1 个文件
2025-07-12 02:07:12.641 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 2
2025-07-12 02:07:12.644 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 2 ===
2025-07-12 02:07:12.644 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: null ===
2025-07-12 02:07:12.644 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 用户没有状态数据 ===
2025-07-12 02:07:12.700 [http-nio-8080-exec-5] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=test, currentUserId=2, page=0, size=20
2025-07-12 02:07:12.704 [http-nio-8080-exec-5] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=test, searchType=null, userId=2)
2025-07-12 02:07:12.704 [http-nio-8080-exec-5] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=test, searchType=null, userId=2)
2025-07-12 02:07:12.712 [http-nio-8080-exec-5] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 未找到用户: userIdStr=test
2025-07-12 02:07:12.713 [http-nio-8080-exec-5] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据昵称搜索用户: searchRequest=SearchContactRequest(keyword=test, searchType=null, userId=2)
2025-07-12 02:07:12.756 [http-nio-8080-exec-5] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 昵称搜索完成: nickname=test, 找到1个结果
2025-07-12 02:07:13.663 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:07:13.665 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:07:13.666 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:07:01.221049800"} ===
2025-07-12 02:07:13.666 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:07:01.221049800} ===
2025-07-12 02:07:13.666 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:07:13.666 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:07:13.666 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:07:34.347 [http-nio-8080-exec-9] INFO  c.i.i.a.service.impl.AuthServiceImpl - 开始处理密码登录请求: jiapei1219@gmail.com
2025-07-12 02:07:34.464 [http-nio-8080-exec-9] INFO  c.i.i.a.service.AccountLockService - 用户 jiapei1219@gmail.com 无登录失败记录需要清除
2025-07-12 02:07:34.464 [http-nio-8080-exec-9] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户密码验证成功: userId=4, email=jiapei1219@gmail.com
2025-07-12 02:07:34.465 [http-nio-8080-exec-9] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 记录登录设备: userId=4, deviceType=Web, ipAddress=null
2025-07-12 02:07:34.468 [http-nio-8080-exec-9] INFO  c.i.i.a.s.impl.DeviceServiceImpl - 更新现有设备记录: deviceId=6
2025-07-12 02:07:34.470 [http-nio-8080-exec-9] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户选择记住登录状态，设置长期token: userId=4
2025-07-12 02:07:34.471 [http-nio-8080-exec-9] INFO  c.i.i.a.service.impl.AuthServiceImpl - 用户登录成功: userId=4, email=jiapei1219@gmail.com, rememberMe=true
2025-07-12 02:07:36.841 [http-nio-8080-exec-3] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 02:07:36.842 [http-nio-8080-exec-3] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=4
2025-07-12 02:07:36.872 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:07:36.875 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:07:36.875 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:07:01.221049800"} ===
2025-07-12 02:07:36.875 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:07:01.221049800} ===
2025-07-12 02:07:36.875 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:07:36.875 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:07:36.876 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:07:37.757 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 4
2025-07-12 02:07:37.757 [http-nio-8080-exec-5] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 02:07:37.759 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 02:07:37.764 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 02:07:37.765 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=31, 名称=202302091675904140726704.jpg, 类型=image, 大小=8507
2025-07-12 02:07:37.765 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 02:07:37.766 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=8507, typeStats={image=1}
2025-07-12 02:07:37.773 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 02:07:37.784 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 4 的所有文件记录数（包括已删除）: 1
2025-07-12 02:07:37.785 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=31, 原始名称=202302091675904140726704.jpg, 是否删除=false, 文件类型=image
2025-07-12 02:07:37.785 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 02:07:37.790 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 02:07:37.790 [http-nio-8080-exec-5] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 02:07:37.790 [http-nio-8080-exec-5] INFO  c.i.i.u.c.FileUploadController - 用户 4 找到 1 个文件
2025-07-12 02:08:07.754 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:08:07.755 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:08:07.756 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:07:01.221049800"} ===
2025-07-12 02:08:07.756 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:07:01.221049800} ===
2025-07-12 02:08:07.756 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:08:07.756 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:08:07.756 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:08:37.760 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:08:37.762 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:08:37.762 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:07:01.221049800"} ===
2025-07-12 02:08:37.763 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:07:01.221049800} ===
2025-07-12 02:08:37.763 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:08:37.763 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:08:37.763 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:08:52.331 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:08:52.333 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:08:52.333 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:07:01.221049800"} ===
2025-07-12 02:08:52.333 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:07:01.221049800} ===
2025-07-12 02:08:52.334 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:08:52.334 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:08:52.334 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:08:53.955 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:08:53.958 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:08:53.958 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:07:01.221049800"} ===
2025-07-12 02:08:53.958 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:07:01.221049800} ===
2025-07-12 02:08:53.958 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:08:53.958 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:08:53.958 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:09:01.831 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:09:01.834 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:09:01.834 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:07:01.221049800"} ===
2025-07-12 02:09:01.834 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:07:01.221049800} ===
2025-07-12 02:09:01.835 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:09:01.835 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:09:01.836 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:09:04.687 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 更新用户资料，用户ID: 4
2025-07-12 02:09:04.690 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 用户资料更新成功，用户ID: 4
2025-07-12 02:09:04.748 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:09:04.753 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:09:04.754 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:07:01.221049800"} ===
2025-07-12 02:09:04.760 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:07:01.221049800} ===
2025-07-12 02:09:04.765 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:09:04.766 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:09:04.766 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:09:04.836 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 设置用户状态，用户ID: 4
2025-07-12 02:09:04.839 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 用户状态设置成功，用户ID: 4
2025-07-12 02:09:04.880 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:09:04.884 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:09:04.885 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:09:04.838544800"} ===
2025-07-12 02:09:04.885 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:09:04.838544800} ===
2025-07-12 02:09:04.886 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:09:04.889 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:09:04.890 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:09:06.464 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:09:06.467 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:09:06.467 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:09:04.838544800"} ===
2025-07-12 02:09:06.468 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:09:04.838544800} ===
2025-07-12 02:09:06.468 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:09:06.468 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:09:06.468 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:09:06.920 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:09:06.922 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:09:06.923 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:09:04.838544800"} ===
2025-07-12 02:09:06.924 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:09:04.838544800} ===
2025-07-12 02:09:06.924 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:09:06.924 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:09:06.924 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:09:12.415 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 更新用户资料，用户ID: 4
2025-07-12 02:09:12.418 [http-nio-8080-exec-2] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 用户资料更新成功，用户ID: 4
2025-07-12 02:09:12.449 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:09:12.454 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:09:12.455 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:09:04.838544800"} ===
2025-07-12 02:09:12.455 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:09:04.838544800} ===
2025-07-12 02:09:12.456 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:09:12.456 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:09:12.457 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:09:12.488 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 设置用户状态，用户ID: 4
2025-07-12 02:09:12.492 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 用户状态设置成功，用户ID: 4
2025-07-12 02:09:12.530 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:09:12.534 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:09:12.534 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:09:12.492451500"} ===
2025-07-12 02:09:12.534 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:09:12.492451500} ===
2025-07-12 02:09:12.534 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:09:12.535 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:09:12.535 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:09:14.062 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:09:14.066 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:09:14.066 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:09:12.492451500"} ===
2025-07-12 02:09:14.066 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:09:12.492451500} ===
2025-07-12 02:09:14.066 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:09:14.066 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:09:14.066 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:09:19.554 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 更新用户资料，用户ID: 4
2025-07-12 02:09:19.558 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 用户资料更新成功，用户ID: 4
2025-07-12 02:09:19.604 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:09:19.607 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:09:19.608 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:09:12.492451500"} ===
2025-07-12 02:09:19.608 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:09:12.492451500} ===
2025-07-12 02:09:19.609 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:09:19.609 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:09:19.609 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:09:19.648 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 设置用户状态，用户ID: 4
2025-07-12 02:09:19.653 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 用户状态设置成功，用户ID: 4
2025-07-12 02:09:19.703 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:09:19.706 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:09:19.707 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:09:19.652604600"} ===
2025-07-12 02:09:19.707 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:09:19.652604600} ===
2025-07-12 02:09:19.709 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:09:19.709 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:09:19.710 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:09:41.179 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:09:41.182 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:09:41.183 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:09:19.652604600"} ===
2025-07-12 02:09:41.183 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:09:19.652604600} ===
2025-07-12 02:09:41.183 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:09:41.184 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:09:41.184 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:09:44.673 [http-nio-8080-exec-2] INFO  c.i.i.u.s.impl.UserQRCodeServiceImpl - 生成用户二维码: userId=4
2025-07-12 02:09:44.985 [http-nio-8080-exec-2] INFO  c.i.i.u.s.impl.UserQRCodeServiceImpl - 用户二维码生成成功: userId=4
2025-07-12 02:10:01.627 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:10:01.630 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:10:01.630 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:09:19.652604600"} ===
2025-07-12 02:10:01.630 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:09:19.652604600} ===
2025-07-12 02:10:01.630 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:10:01.631 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:10:01.631 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:10:07.761 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:10:07.763 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:10:07.763 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:09:19.652604600"} ===
2025-07-12 02:10:07.763 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:09:19.652604600} ===
2025-07-12 02:10:07.763 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:10:07.764 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:10:07.764 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:10:37.753 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:10:37.755 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:10:37.755 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:09:19.652604600"} ===
2025-07-12 02:10:37.755 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:09:19.652604600} ===
2025-07-12 02:10:37.756 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:10:37.756 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:10:37.756 [http-nio-8080-exec-8] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:11:07.745 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:11:07.747 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:11:07.747 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:09:19.652604600"} ===
2025-07-12 02:11:07.747 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:09:19.652604600} ===
2025-07-12 02:11:07.747 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:11:07.747 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:11:07.747 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:11:58.785 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:11:58.790 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:11:58.790 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:09:19.652604600"} ===
2025-07-12 02:11:58.791 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:09:19.652604600} ===
2025-07-12 02:11:58.791 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:11:58.791 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:11:58.791 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:12:58.768 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:12:58.773 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:12:58.773 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:09:19.652604600"} ===
2025-07-12 02:12:58.774 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:09:19.652604600} ===
2025-07-12 02:12:58.774 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:12:58.774 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:12:58.774 [http-nio-8080-exec-10] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:13:20.582 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 188 class path changes (0 additions, 188 deletions, 0 modifications)
2025-07-12 02:13:20.651 [Thread-5] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2025-07-12 02:13:20.651 [Thread-5] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@341df7d5]]
2025-07-12 02:13:20.652 [Thread-5] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2025-07-12 02:13:20.663 [Thread-5] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-07-12 02:13:21.660 [Thread-5] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 02:13:21.678 [Thread-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-12 02:13:21.702 [Thread-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-12 02:13:22.158 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 37868 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 02:13:22.159 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 02:13:31.504 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 37868 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 02:13:31.505 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 02:13:32.276 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 02:13:32.277 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-12 02:13:32.461 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 183 ms. Found 9 JPA repository interfaces.
2025-07-12 02:13:32.620 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 02:13:32.620 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-12 02:13:32.634 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.LoginDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:13:32.635 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:13:32.635 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:13:32.635 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:13:32.635 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:13:32.636 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:13:32.636 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.FileUploadRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:13:32.637 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:13:32.637 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:13:32.637 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
2025-07-12 02:13:32.829 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-12 02:13:32.830 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.9] using APR version [1.7.6].
2025-07-12 02:13:32.832 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.5.0 8 Apr 2025]
2025-07-12 02:13:32.832 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-12 02:13:32.833 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-12 02:13:32.833 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-12 02:13:32.865 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-12 02:13:32.866 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1358 ms
2025-07-12 02:13:32.967 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-07-12 02:13:32.987 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5c127d4f
2025-07-12 02:13:32.987 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-07-12 02:13:33.008 [restartedMain] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://localhost:3307/im_db (MySQL 9.3)
2025-07-12 02:13:33.055 [restartedMain] INFO  o.f.core.internal.command.DbValidate - Successfully validated 14 migrations (execution time 00:00.026s)
2025-07-12 02:13:33.078 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Current version of schema `im_db`: 20250112.009
2025-07-12 02:13:33.080 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Schema `im_db` is up to date. No migration necessary.
2025-07-12 02:13:33.131 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-12 02:13:33.135 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-12 02:13:33.148 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-12 02:13:33.339 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-12 02:13:33.365 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 02:13:33.782 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 初始化MinIO客户端，端点: http://localhost:9000, 访问密钥: minioadmin
2025-07-12 02:13:33.784 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO客户端初始化成功
2025-07-12 02:13:33.784 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 开始检查并创建MinIO存储桶...
2025-07-12 02:13:33.873 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO存储桶初始化完成 - 公开存储桶: 6个, 私有存储桶: 6个
2025-07-12 02:13:33.939 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 初始化MinIO服务，开始创建存储桶...
2025-07-12 02:13:33.967 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 所有存储桶初始化成功
2025-07-12 02:13:33.967 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - MinIO服务初始化完成
2025-07-12 02:13:33.992 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 开始初始化公共桶生命周期规则，默认过期天数: 7
2025-07-12 02:13:33.992 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-files 设置临时文件生命周期规则，过期天数: 7
2025-07-12 02:13:34.005 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-images 设置临时文件生命周期规则，过期天数: 7
2025-07-12 02:13:34.014 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-videos 设置临时文件生命周期规则，过期天数: 7
2025-07-12 02:13:34.021 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-documents 设置临时文件生命周期规则，过期天数: 7
2025-07-12 02:13:34.031 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 公共桶生命周期规则初始化完成，成功设置: 0 个桶
2025-07-12 02:13:34.122 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 数据一致性检查线程池已初始化: coreSize=2, maxSize=5, queueCapacity=100
2025-07-12 02:13:34.129 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 通用异步任务线程池已初始化: coreSize=5, maxSize=10, queueCapacity=200
2025-07-12 02:13:34.222 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-07-12 02:13:34.287 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-07-12 02:13:34.465 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-07-12 02:13:35.039 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-07-12 02:13:35.112 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 10812 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 02:13:35.114 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 02:13:35.178 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-07-12 02:13:35.186 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-12 02:13:35.187 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-12 02:13:35.214 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-12 02:13:35.222 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-12 02:13:35.223 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-07-12 02:13:35.223 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@57da833]]
2025-07-12 02:13:35.224 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-07-12 02:13:35.242 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Started ImCommunicationSystemApplication in 3.806 seconds (process running for 465.648)
2025-07-12 02:13:35.245 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 开始配置存储桶访问策略...
2025-07-12 02:13:35.282 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-files
2025-07-12 02:13:35.310 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-images
2025-07-12 02:13:35.334 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-videos
2025-07-12 02:13:35.357 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-audios
2025-07-12 02:13:35.381 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-documents
2025-07-12 02:13:35.406 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-others
2025-07-12 02:13:35.459 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 存储桶访问策略配置完成
2025-07-12 02:13:35.463 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-07-12 02:13:36.456 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 02:13:36.458 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-12 02:13:36.729 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 259 ms. Found 9 JPA repository interfaces.
2025-07-12 02:13:37.450 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 02:13:37.452 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-12 02:13:37.493 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.LoginDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:13:37.494 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:13:37.495 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:13:37.497 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:13:37.498 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:13:37.498 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:13:37.498 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.FileUploadRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:13:37.499 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:13:37.499 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:13:37.500 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 34 ms. Found 0 Redis repository interfaces.
2025-07-12 02:13:38.726 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-12 02:13:38.729 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.9] using APR version [1.7.6].
2025-07-12 02:13:38.734 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.5.0 8 Apr 2025]
2025-07-12 02:13:38.744 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-12 02:13:38.747 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-12 02:13:38.747 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-12 02:13:38.807 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-12 02:13:38.809 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3619 ms
2025-07-12 02:13:39.069 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-12 02:13:39.210 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@8d15966
2025-07-12 02:13:39.212 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-12 02:13:39.290 [restartedMain] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://localhost:3307/im_db (MySQL 9.3)
2025-07-12 02:13:39.373 [restartedMain] INFO  o.f.core.internal.command.DbValidate - Successfully validated 14 migrations (execution time 00:00.046s)
2025-07-12 02:13:39.399 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Current version of schema `im_db`: 20250112.009
2025-07-12 02:13:39.406 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Schema `im_db` is up to date. No migration necessary.
2025-07-12 02:13:39.506 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-12 02:13:39.593 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-07-12 02:13:39.659 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-12 02:13:40.079 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-12 02:13:41.579 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-12 02:13:41.654 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 02:13:43.047 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-12 02:13:43.587 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 初始化MinIO客户端，端点: http://localhost:9000, 访问密钥: minioadmin
2025-07-12 02:13:43.742 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO客户端初始化成功
2025-07-12 02:13:43.742 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 开始检查并创建MinIO存储桶...
2025-07-12 02:13:43.937 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO存储桶初始化完成 - 公开存储桶: 6个, 私有存储桶: 6个
2025-07-12 02:13:44.084 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 初始化MinIO服务，开始创建存储桶...
2025-07-12 02:13:44.115 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 所有存储桶初始化成功
2025-07-12 02:13:44.115 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - MinIO服务初始化完成
2025-07-12 02:13:44.153 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 开始初始化公共桶生命周期规则，默认过期天数: 7
2025-07-12 02:13:44.153 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-files 设置临时文件生命周期规则，过期天数: 7
2025-07-12 02:13:44.188 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-images 设置临时文件生命周期规则，过期天数: 7
2025-07-12 02:13:44.198 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-videos 设置临时文件生命周期规则，过期天数: 7
2025-07-12 02:13:44.207 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-documents 设置临时文件生命周期规则，过期天数: 7
2025-07-12 02:13:44.216 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 公共桶生命周期规则初始化完成，成功设置: 0 个桶
2025-07-12 02:13:44.308 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 数据一致性检查线程池已初始化: coreSize=2, maxSize=5, queueCapacity=100
2025-07-12 02:13:44.315 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 通用异步任务线程池已初始化: coreSize=5, maxSize=10, queueCapacity=200
2025-07-12 02:13:44.506 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-07-12 02:13:44.626 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-07-12 02:13:44.854 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-07-12 02:13:45.413 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-12 02:13:45.433 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 02:13:45.434 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-12 02:13:45.446 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-12 02:13:45.513 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-12 02:13:58.733 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-12 02:13:58.734 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-12 02:13:58.736 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-07-12 02:13:58.772 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:13:58.777 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:13:58.777 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:09:19.652604600"} ===
2025-07-12 02:13:58.777 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:09:19.652604600} ===
2025-07-12 02:13:58.777 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:13:58.777 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:13:58.778 [http-nio-8080-exec-1] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:15:00.303 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-07-12 02:15:00.338 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Starting ImCommunicationSystemApplication using Java 17.0.2 with PID 1888 (D:\Project\im-communication-system\target\classes started by ASUS in D:\Project\im-communication-system)
2025-07-12 02:15:00.339 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-12 02:15:00.371 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-12 02:15:00.372 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-12 02:15:01.646 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 02:15:01.646 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-12 02:15:01.842 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 186 ms. Found 9 JPA repository interfaces.
2025-07-12 02:15:02.367 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-12 02:15:02.369 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-12 02:15:02.405 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.LoginDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:15:02.405 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:15:02.406 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.auth.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:15:02.407 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:15:02.407 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:15:02.407 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.relationship.repository.ContactTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:15:02.408 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.FileUploadRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:15:02.408 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserDeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:15:02.408 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.im.imcommunicationsystem.user.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-12 02:15:02.408 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 31 ms. Found 0 Redis repository interfaces.
2025-07-12 02:15:03.165 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-12 02:15:03.167 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - Loaded Apache Tomcat Native library [2.0.9] using APR version [1.7.6].
2025-07-12 02:15:03.170 [restartedMain] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 3.5.0 8 Apr 2025]
2025-07-12 02:15:03.178 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-12 02:15:03.179 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-12 02:15:03.180 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-12 02:15:03.229 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-12 02:15:03.230 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2857 ms
2025-07-12 02:15:03.473 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-12 02:15:03.622 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@49e2508b
2025-07-12 02:15:03.625 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-12 02:15:03.717 [restartedMain] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://localhost:3307/im_db (MySQL 9.3)
2025-07-12 02:15:03.825 [restartedMain] INFO  o.f.core.internal.command.DbValidate - Successfully validated 14 migrations (execution time 00:00.061s)
2025-07-12 02:15:03.859 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Current version of schema `im_db`: 20250112.009
2025-07-12 02:15:03.864 [restartedMain] INFO  o.f.core.internal.command.DbMigrate - Schema `im_db` is up to date. No migration necessary.
2025-07-12 02:15:03.987 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-12 02:15:04.046 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-07-12 02:15:04.085 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-12 02:15:04.364 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-12 02:15:05.552 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-12 02:15:05.598 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-12 02:15:06.340 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-12 02:15:06.687 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 初始化MinIO客户端，端点: http://localhost:9000, 访问密钥: minioadmin
2025-07-12 02:15:06.828 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO客户端初始化成功
2025-07-12 02:15:06.828 [restartedMain] INFO  c.i.i.user.config.MinioConfig - 开始检查并创建MinIO存储桶...
2025-07-12 02:15:07.039 [restartedMain] INFO  c.i.i.user.config.MinioConfig - MinIO存储桶初始化完成 - 公开存储桶: 6个, 私有存储桶: 6个
2025-07-12 02:15:07.195 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 初始化MinIO服务，开始创建存储桶...
2025-07-12 02:15:07.262 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - 所有存储桶初始化成功
2025-07-12 02:15:07.263 [restartedMain] INFO  c.i.i.u.s.impl.MinioServiceImpl - MinIO服务初始化完成
2025-07-12 02:15:07.309 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 开始初始化公共桶生命周期规则，默认过期天数: 7
2025-07-12 02:15:07.310 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-files 设置临时文件生命周期规则，过期天数: 7
2025-07-12 02:15:07.354 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-images 设置临时文件生命周期规则，过期天数: 7
2025-07-12 02:15:07.365 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-videos 设置临时文件生命周期规则，过期天数: 7
2025-07-12 02:15:07.374 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 为桶 im-public-documents 设置临时文件生命周期规则，过期天数: 7
2025-07-12 02:15:07.383 [restartedMain] INFO  c.i.i.u.s.i.MinioLifecycleServiceImpl - 公共桶生命周期规则初始化完成，成功设置: 0 个桶
2025-07-12 02:15:07.484 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 数据一致性检查线程池已初始化: coreSize=2, maxSize=5, queueCapacity=100
2025-07-12 02:15:07.492 [restartedMain] INFO  c.i.i.common.config.AsyncConfig - 通用异步任务线程池已初始化: coreSize=5, maxSize=10, queueCapacity=200
2025-07-12 02:15:07.697 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-07-12 02:15:07.829 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-07-12 02:15:08.087 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-07-12 02:15:08.701 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-07-12 02:15:08.767 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-12 02:15:08.796 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-12 02:15:08.798 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-07-12 02:15:08.800 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@49d5002]]
2025-07-12 02:15:08.800 [restartedMain] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-07-12 02:15:08.826 [restartedMain] INFO  c.i.i.ImCommunicationSystemApplication - Started ImCommunicationSystemApplication in 8.885 seconds (process running for 9.244)
2025-07-12 02:15:08.954 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 开始配置存储桶访问策略...
2025-07-12 02:15:08.993 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-files
2025-07-12 02:15:09.035 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-images
2025-07-12 02:15:09.056 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-videos
2025-07-12 02:15:09.084 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-audios
2025-07-12 02:15:09.107 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-documents
2025-07-12 02:15:09.131 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 已设置公开存储桶策略: im-public-others
2025-07-12 02:15:09.185 [restartedMain] INFO  c.i.i.user.config.BucketPolicyConfig - 存储桶访问策略配置完成
2025-07-12 02:15:09.206 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-12 02:15:09.207 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-12 02:15:09.210 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-07-12 02:15:09.712 [http-nio-8080-exec-3] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 02:15:09.719 [http-nio-8080-exec-3] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=4
2025-07-12 02:15:09.898 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:15:09.915 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:15:09.918 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:09:19.652604600"} ===
2025-07-12 02:15:09.923 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:09:19.652604600} ===
2025-07-12 02:15:09.926 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:15:09.928 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:15:09.934 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:15:10.763 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 4
2025-07-12 02:15:10.771 [http-nio-8080-exec-4] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 02:15:10.772 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 02:15:10.784 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 02:15:10.785 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=31, 名称=202302091675904140726704.jpg, 类型=image, 大小=8507
2025-07-12 02:15:10.788 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 02:15:10.789 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=8507, typeStats={image=1}
2025-07-12 02:15:10.800 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 02:15:10.820 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 4 的所有文件记录数（包括已删除）: 1
2025-07-12 02:15:10.820 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=31, 原始名称=202302091675904140726704.jpg, 是否删除=false, 文件类型=image
2025-07-12 02:15:10.821 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 02:15:10.836 [http-nio-8080-exec-4] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 02:15:10.836 [http-nio-8080-exec-4] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 02:15:10.837 [http-nio-8080-exec-4] INFO  c.i.i.u.c.FileUploadController - 用户 4 找到 1 个文件
2025-07-12 02:15:14.043 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:15:14.046 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:15:14.046 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:09:19.652604600"} ===
2025-07-12 02:15:14.046 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:09:19.652604600} ===
2025-07-12 02:15:14.047 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:15:14.047 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:15:14.047 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:15:14.775 [http-nio-8080-exec-1] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取当前用户信息
2025-07-12 02:15:14.777 [http-nio-8080-exec-1] INFO  c.i.i.a.service.impl.AuthServiceImpl - 获取用户信息: userId=4
2025-07-12 02:15:14.812 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:15:14.816 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:15:14.816 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:09:19.652604600"} ===
2025-07-12 02:15:14.817 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:09:19.652604600} ===
2025-07-12 02:15:14.819 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:15:14.819 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:15:14.819 [http-nio-8080-exec-6] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:15:15.345 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始获取用户文件统计信息, userId: 4
2025-07-12 02:15:15.345 [http-nio-8080-exec-3] INFO  c.i.i.u.c.FileUploadController - 获取文件列表请求 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 02:15:15.347 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 开始查询用户文件 - 用户ID: 4, 文件类型: null, 页码: 0, 大小: 20
2025-07-12 02:15:15.351 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询到用户文件数量: 1
2025-07-12 02:15:15.351 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件详情: ID=31, 名称=202302091675904140726704.jpg, 类型=image, 大小=8507
2025-07-12 02:15:15.352 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件类型统计结果: {image=1}
2025-07-12 02:15:15.352 [http-nio-8080-exec-5] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 最终统计结果: totalFiles=1, totalSize=8507, typeStats={image=1}
2025-07-12 02:15:15.355 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库中总文件记录数: 3
2025-07-12 02:15:15.364 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 用户 4 的所有文件记录数（包括已删除）: 1
2025-07-12 02:15:15.365 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 文件记录: ID=31, 原始名称=202302091675904140726704.jpg, 是否删除=false, 文件类型=image
2025-07-12 02:15:15.365 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 查询所有文件类型
2025-07-12 02:15:15.369 [http-nio-8080-exec-3] INFO  c.i.i.u.s.i.MinioFileUploadServiceImpl - 数据库查询结果 - 总数: 1, 当前页数量: 1
2025-07-12 02:15:15.369 [http-nio-8080-exec-3] INFO  c.i.i.u.c.FileUploadController - 查询到文件数量: 1
2025-07-12 02:15:15.369 [http-nio-8080-exec-3] INFO  c.i.i.u.c.FileUploadController - 用户 4 找到 1 个文件
2025-07-12 02:15:29.385 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:15:29.391 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:15:29.392 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:09:19.652604600"} ===
2025-07-12 02:15:29.393 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:09:19.652604600} ===
2025-07-12 02:15:29.394 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:15:29.394 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:15:29.398 [http-nio-8080-exec-7] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:15:29.543 [http-nio-8080-exec-4] INFO  c.i.i.r.c.ContactSearchController - 通用搜索用户: keyword=ceshi, currentUserId=4, page=0, size=20
2025-07-12 02:15:29.554 [http-nio-8080-exec-4] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 通用搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 02:15:29.559 [http-nio-8080-exec-4] INFO  c.i.i.r.s.i.ContactSearchServiceImpl - 根据用户ID搜索用户: searchRequest=SearchContactRequest(keyword=ceshi, searchType=null, userId=4)
2025-07-12 02:15:45.200 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - 获取用户资料，用户ID: 4
2025-07-12 02:15:45.204 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 调试信息 - 用户ID: 4 ===
2025-07-12 02:15:45.204 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 数据库中的statusJson: {"text": "外出中", "emoji": "🚗", "updatedAt": "2025-07-12T02:09:19.652604600"} ===
2025-07-12 02:15:45.205 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 解析后的statusMap: {text=外出中, emoji=🚗, updatedAt=2025-07-12T02:09:19.652604600} ===
2025-07-12 02:15:45.205 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === statusMap的键: [text, emoji, updatedAt] ===
2025-07-12 02:15:45.205 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态文本: 外出中 ===
2025-07-12 02:15:45.205 [http-nio-8080-exec-9] INFO  c.i.i.u.s.i.UserProfileServiceImpl - === 状态表情: 🚗 ===
2025-07-12 02:16:08.734 [MessageBroker-2] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 11, active threads = 1, queued tasks = 8, completed tasks = 2]
